{"version":3,"sources":["../src/index.ts","../src/types-builder.ts","../src/with-cache.ts","../src/get-new-types.ts","../src/generate-descriptors.ts","../src/generate-multiple-descriptors.ts","../src/generate-types.ts","../src/get-used-checksums.ts","../src/known-types.ts","../src/whitelist.ts"],"sourcesContent":["export * from \"./types-builder\"\nexport * from \"./get-new-types\"\nexport * from \"./generate-descriptors\"\nexport * from \"./generate-multiple-descriptors\"\nexport { knownTypesRepository } from \"./known-types\"\n","import { StringRecord, V14, V15 } from \"@polkadot-api/substrate-bindings\"\nimport {\n  LookupEntry,\n  getLookupFn,\n  getChecksumBuilder,\n  TupleVar,\n  StructVar,\n  ArrayVar,\n} from \"@polkadot-api/metadata-builders\"\nimport { withCache } from \"./with-cache\"\nimport { mapObject } from \"@polkadot-api/utils\"\n\ntype MetadataPrimitives =\n  | \"bool\"\n  | \"char\"\n  | \"str\"\n  | \"u8\"\n  | \"u16\"\n  | \"u32\"\n  | \"u64\"\n  | \"u128\"\n  | \"u256\"\n  | \"i8\"\n  | \"i16\"\n  | \"i32\"\n  | \"i64\"\n  | \"i128\"\n  | \"i256\"\n\nexport const primitiveTypes: Record<\n  MetadataPrimitives | \"compactNumber\" | \"compactBn\",\n  string\n> = {\n  bool: \"boolean\",\n  char: \"string\",\n  str: \"string\",\n  u8: \"number\",\n  u16: \"number\",\n  u32: \"number\",\n  u64: \"bigint\",\n  u128: \"bigint\",\n  u256: \"bigint\",\n  i8: \"number\",\n  i16: \"number\",\n  i32: \"number\",\n  i64: \"bigint\",\n  i128: \"bigint\",\n  i256: \"bigint\",\n  compactNumber: \"number\",\n  compactBn: \"bigint\",\n}\n\nexport interface Variable {\n  name: string\n\n  checksum: string\n  type: string\n}\n\nexport interface CodeDeclarations {\n  imports: Set<string>\n  variables: Map<string, Variable>\n  takenNames: Set<string>\n}\n\nexport const defaultDeclarations = (): CodeDeclarations => ({\n  imports: new Set(),\n  variables: new Map(),\n  takenNames: new Set(),\n})\n\ninterface TypeForEntry {\n  type: string\n  import?: \"globalTypes\" | \"client\"\n}\nconst typesImport = (varName: string): TypeForEntry => ({\n  type: varName,\n  import: \"globalTypes\",\n})\nconst clientImport = (varName: string): TypeForEntry => ({\n  type: varName,\n  import: \"client\",\n})\n\nconst _buildSyntax = (\n  input: LookupEntry,\n  cache: Map<number, TypeForEntry>,\n  stack: Set<number>,\n  declarations: CodeDeclarations,\n  getChecksum: (id: number | StructVar | TupleVar | ArrayVar) => string | null,\n  knownTypes: Record<string, string>,\n): TypeForEntry => {\n  const addImport = (entry: TypeForEntry) => {\n    if (entry.import === \"client\") declarations.imports.add(entry.type)\n  }\n\n  const getName = (checksum: string) => {\n    if (!knownTypes[checksum]) return `I${checksum}`\n\n    const originalName = knownTypes[checksum]\n    let name = originalName\n    let i = 1\n    while (declarations.takenNames.has(name)) name = originalName + i++\n\n    declarations.takenNames.add(name)\n    return name\n  }\n\n  const anonymize = (varName: string) => {\n    if (!varName.startsWith(\"I\")) return varName\n    const checksum = varName.slice(1)\n    return declarations.variables.has(checksum)\n      ? `Anonymize<${varName}>`\n      : varName\n  }\n\n  if (input.type === \"primitive\") return { type: primitiveTypes[input.value] }\n  if (input.type === \"void\") return { type: \"undefined\" }\n  if (input.type === \"AccountId20\") return clientImport(\"HexString\")\n  if (input.type === \"AccountId32\") return clientImport(\"SS58String\")\n  if (input.type === \"compact\")\n    return {\n      type: input.isBig\n        ? \"bigint\"\n        : input.isBig === null\n          ? \"number | bigint\"\n          : \"number\",\n    }\n  if (input.type === \"bitSequence\")\n    return { type: \"{bytes: Uint8Array, bitsLen: number}\" }\n\n  if (\n    input.type === \"sequence\" &&\n    input.value.type === \"primitive\" &&\n    input.value.value === \"u8\"\n  )\n    return { type: \"Binary\" }\n\n  const checksum = getChecksum(input.id)!\n\n  // Problem: checksum WndPalletEvent = 5ofh7hnvff54m; DotPalletEvent = KsmPalletEvent = 2gc4echvba3ni\n  // declarations.variables is checksum -> Var, but now we can have two names for the same checksum\n  // currently, the second chain will reuse the first name, so ksm types will have DotPalletEvent (and KsmPalletEvent doesn't exist)\n  // TODO declarations.variables should have a way of having multiple type definitions for the same checksum\n  // TODO declarations.takenNames should be solved on `resolveConflicts` instead.\n  if (declarations.variables.has(checksum)) {\n    const entry = declarations.variables.get(checksum)!\n    return typesImport(entry.name)\n  }\n\n  const buildNextSyntax = (nextInput: LookupEntry) =>\n    buildSyntax(nextInput, cache, stack, declarations, getChecksum, knownTypes)\n\n  const buildVector = (id: string, inner: LookupEntry): TypeForEntry => {\n    const name = getName(id)\n    const variable: Variable = {\n      checksum: id,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(id, variable)\n    const innerType = buildNextSyntax(inner)\n    addImport(innerType)\n\n    variable.type = `Array<${anonymize(innerType.type)}>`\n    return typesImport(name)\n  }\n\n  const buildArray = (\n    id: string,\n    inner: LookupEntry,\n    length: number,\n  ): TypeForEntry => {\n    const name = getName(id)\n    const variable: Variable = {\n      checksum: id,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(id, variable)\n\n    if (inner.type === \"primitive\" && inner.value === \"u8\") {\n      variable.type = `FixedSizeBinary<${length}>`\n    } else {\n      const innerType = buildNextSyntax(inner)\n      addImport(innerType)\n      variable.type = `FixedSizeArray<${length}, ${anonymize(innerType.type)}>`\n    }\n\n    return typesImport(name)\n  }\n\n  const buildTuple = (id: string, value: LookupEntry[]): TypeForEntry => {\n    const name = getName(id)\n    const variable: Variable = {\n      checksum: id,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(id, variable)\n    const innerTypes = value.map(buildNextSyntax)\n    innerTypes.forEach(addImport)\n    variable.type = `[${innerTypes.map((v) => anonymize(v.type)).join(\", \")}]`\n\n    return typesImport(name)\n  }\n\n  const buildStruct = (\n    id: string,\n    value: StringRecord<LookupEntry>,\n  ): TypeForEntry => {\n    const name = getName(id)\n    const variable: Variable = {\n      checksum: id,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(id, variable)\n    const deps = mapObject(value, buildNextSyntax)\n    Object.values(deps).forEach(addImport)\n    variable.type = `{${Object.entries(deps)\n      .map(([key, val]) => `${JSON.stringify(key)}: ${anonymize(val.type)}`)\n      .join(\", \")}}`\n\n    return typesImport(name)\n  }\n\n  if (input.type === \"array\") {\n    return buildArray(checksum, input.value, input.len)\n  }\n\n  if (input.type === \"sequence\") return buildVector(checksum, input.value)\n  if (input.type === \"tuple\") return buildTuple(checksum, input.value)\n  if (input.type === \"struct\") return buildStruct(checksum, input.value)\n\n  if (input.type === \"option\") {\n    const name = getName(checksum)\n    const variable: Variable = {\n      checksum,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(checksum, variable)\n\n    const innerType = buildNextSyntax(input.value)\n    addImport(innerType)\n\n    variable.type = `${anonymize(innerType.type)} | undefined`\n    return typesImport(name)\n  }\n\n  if (input.type === \"result\") {\n    declarations.imports.add(\"ResultPayload\")\n    const name = getName(checksum)\n    const variable: Variable = {\n      checksum,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(checksum, variable)\n    const ok = buildNextSyntax(input.value.ok)\n    const ko = buildNextSyntax(input.value.ko)\n    ;[ok, ko].forEach(addImport)\n    variable.type = `ResultPayload<${anonymize(ok.type)}, ${anonymize(\n      ko.type,\n    )}>`\n\n    return typesImport(name)\n  }\n\n  // it has to be an enum by now\n  const isKnown = !!knownTypes[checksum]\n\n  const name = getName(checksum)\n  const variable: Variable = {\n    checksum,\n    type: \"\",\n    name,\n  }\n  declarations.variables.set(checksum, variable)\n\n  const dependencies = Object.values(input.value).map((value) => {\n    const anonymize = (value: string) => `Anonymize<${value}>`\n    if (value.type === \"lookupEntry\") {\n      const inner = buildNextSyntax(value.value)\n      addImport(inner)\n      return anonymize(inner.type)\n    }\n\n    if (value.type === \"void\") return \"undefined\"\n\n    let innerChecksum = getChecksum(value)!\n\n    const inner = (() => {\n      switch (value.type) {\n        case \"array\":\n          return buildArray(innerChecksum, value.value, value.len)\n        case \"struct\":\n          return buildStruct(innerChecksum, value.value)\n        case \"tuple\":\n          return buildTuple(innerChecksum, value.value)\n      }\n    })()\n    addImport(inner)\n    return anonymize(inner.type)\n  })\n\n  const obj = Object.keys(input.value)\n    .map((key, idx) => `\"${key}\": ${dependencies[idx]}`)\n    .join(\", \")\n  variable.type = isKnown ? `Enum<{${obj}}>` : `AnonymousEnum<{${obj}}>`\n  return typesImport(name)\n}\n\nconst buildSyntax = withCache(\n  _buildSyntax,\n  (_getter, entry, declarations, getChecksum): TypeForEntry =>\n    typesImport(declarations.variables.get(getChecksum(entry.id)!)!.name),\n  (x) => x,\n)\n\nexport const getTypesBuilder = (\n  declarations: CodeDeclarations,\n  metadata: V14 | V15,\n  // checksum -> desired-name\n  knownTypes: Record<string, string>,\n) => {\n  const typeFileImports = new Set<string>()\n  const clientFileImports = new Set<string>()\n\n  const importType = (entry: TypeForEntry) => {\n    if (entry.import === \"client\") {\n      clientFileImports.add(entry.type)\n    } else if (entry.import === \"globalTypes\") {\n      typeFileImports.add(entry.type)\n    }\n    return entry.type\n  }\n\n  const lookupData = metadata.lookup\n  const getLookupEntryDef = getLookupFn(lookupData)\n  const checksumBuilder = getChecksumBuilder(metadata)\n\n  const getChecksum = (id: number | StructVar | TupleVar | ArrayVar): string =>\n    typeof id === \"number\"\n      ? checksumBuilder.buildDefinition(id)!\n      : checksumBuilder.buildComposite(id)!\n\n  const cache = new Map()\n  const buildDefinition = (id: number) =>\n    buildSyntax(\n      getLookupEntryDef(id),\n      cache,\n      new Set(),\n      declarations,\n      getChecksum,\n      knownTypes,\n    )\n\n  const buildTypeDefinition = (id: number) => {\n    const tmp = buildDefinition(id)\n    importType(tmp)\n\n    if (!tmp.import || tmp.import === \"client\") return tmp.type\n\n    const checksum = checksumBuilder.buildDefinition(id)!\n    if (knownTypes[checksum]) return tmp.type\n\n    return `Anonymize<${tmp.type}>`\n  }\n\n  const buildStorage = (pallet: string, entry: string) => {\n    const storageEntry = metadata.pallets\n      .find((x) => x.name === pallet)!\n      .storage!.items.find((s) => s.name === entry)!\n\n    if (storageEntry.type.tag === \"plain\")\n      return {\n        key: \"[]\",\n        val: `${buildTypeDefinition(storageEntry.type.value)}`,\n      }\n\n    const { key, value } = storageEntry.type.value\n    const val = buildTypeDefinition(value)\n\n    const returnKey =\n      storageEntry.type.value.hashers.length === 1\n        ? `[Key: ${buildTypeDefinition(key)}]`\n        : buildTypeDefinition(key)\n\n    return { key: returnKey, val }\n  }\n\n  const buildRuntimeCall = (api: string, method: string) => {\n    const entry = metadata.apis\n      .find((x) => x.name === api)\n      ?.methods.find((x) => x.name === method)\n    if (!entry) throw null\n\n    const innerTuple = entry.inputs\n      .map(({ name, type }) => `${name}: ${buildTypeDefinition(type)}`)\n      .join(\", \")\n\n    return {\n      args: `[${innerTuple}]`,\n      value: buildTypeDefinition(entry.output),\n    }\n  }\n\n  const buildVariant =\n    (type: \"errors\" | \"events\" | \"calls\") => (pallet: string, name: string) => {\n      const lookupEntry = getLookupEntryDef(\n        metadata.pallets.find((x) => x.name === pallet)![type]! as number,\n      )\n      if (lookupEntry.type !== \"enum\") throw null\n\n      // Generate the type that has all the variants - This is so the consumer can import the type, even if it's not used directly by the descriptor file\n      buildDefinition(lookupEntry.id)\n\n      const innerLookup = lookupEntry.value[name]\n\n      if (innerLookup.type === \"lookupEntry\") {\n        const tmp = buildDefinition(innerLookup.value.id)\n        importType(tmp)\n\n        return `Anonymize<${tmp.type}>`\n      } else if (innerLookup.type === \"void\") {\n        return \"undefined\"\n      } else {\n        const result = declarations.variables.get(\n          getChecksum(innerLookup),\n        )!.name\n        typeFileImports.add(result)\n\n        return `Anonymize<${result}>`\n      }\n    }\n\n  const buildConstant = (pallet: string, constantName: string) => {\n    const storageEntry = metadata.pallets\n      .find((x) => x.name === pallet)!\n      .constants!.find((s) => s.name === constantName)!\n\n    return buildTypeDefinition(storageEntry.type)\n  }\n\n  return {\n    buildTypeDefinition,\n    buildDefinition,\n    buildStorage,\n    buildEvent: buildVariant(\"events\"),\n    buildError: buildVariant(\"errors\"),\n    buildCall: buildVariant(\"calls\"),\n    buildRuntimeCall,\n    buildConstant,\n    getTypeFileImports: () => Array.from(typeFileImports),\n    getClientFileImports: () => Array.from(clientFileImports),\n  }\n}\n","import type { LookupEntry } from \"@polkadot-api/metadata-builders\"\n\ntype FnWithStack<Other extends Array<any>, T> = (\n  input: LookupEntry,\n  cache: Map<number, T>,\n  stack: Set<number>,\n  ...rest: Other\n) => T\n\nexport const withCache =\n  <Other extends Array<any>, T>(\n    fn: FnWithStack<Other, T>,\n    onEnterCircular: (\n      cacheGetter: () => T,\n      circular: LookupEntry,\n      ...rest: Other\n    ) => T,\n    onExitCircular: (\n      outter: T,\n      inner: T,\n      circular: LookupEntry,\n      ...rest: Other\n    ) => T,\n  ): FnWithStack<Other, T> =>\n  (input, cache, stack, ...rest) => {\n    const { id } = input\n    if (cache.has(id)) return cache.get(id)!\n\n    if (stack.has(id)) {\n      const res = onEnterCircular(() => cache.get(id)!, input, ...rest)\n      cache.set(id, res)\n      return res\n    }\n\n    stack.add(id)\n    let result = fn(input, cache, stack, ...rest)\n    stack.delete(id)\n\n    if (cache.has(id)) {\n      result = onExitCircular(result, cache.get(id)!, input, ...rest)\n    }\n\n    cache.set(id, result)\n    return result\n  }\n","import {\n  getChecksumBuilder,\n  getLookupFn,\n} from \"@polkadot-api/metadata-builders\"\nimport type { V14, V15 } from \"@polkadot-api/substrate-bindings\"\nimport { KnownTypes } from \"./known-types\"\nimport { defaultDeclarations, getTypesBuilder } from \"./types-builder\"\n\ntype ArraVal<T extends Array<any>> = T extends Array<infer V> ? V : unknown\n\nexport const getNewTypes = (\n  metadata: V14 | V15,\n  knownTypes: KnownTypes,\n  getTypeName: (data: ArraVal<V15[\"lookup\"]>) => string | null,\n) => {\n  const checksumBuilder = getChecksumBuilder(metadata)\n  let declarations = defaultDeclarations()\n  let typesBuilder = getTypesBuilder(declarations, metadata, knownTypes)\n  const lookup = getLookupFn(metadata.lookup)\n\n  let ignoredIds = new Set<number>(\n    \"outerEnums\" in metadata\n      ? [\n          metadata.outerEnums.call,\n          metadata.outerEnums.error,\n          metadata.outerEnums.event,\n        ]\n      : [],\n  )\n\n  ;(\"outerEnums\" in metadata\n    ? [metadata.outerEnums.call, metadata.outerEnums.event]\n    : []\n  )\n    .map(lookup)\n    .forEach((entry) => {\n      if (entry.type !== \"enum\") throw null\n      Object.values(entry.value).forEach((inner) => {\n        if (inner.type === \"void\") return\n        ignoredIds.add(Object.values(inner.value)[0].id)\n      })\n    })\n\n  const wannabes: KnownTypes = {}\n  const nameToChecksum = new Map<string, { path: string[]; checksum: string }>()\n\n  metadata.lookup.forEach((x) => {\n    const result = checksumBuilder.buildDefinition(x.id)!\n    typesBuilder.buildDefinition(x.id)\n    const variable = declarations.variables.get(result)\n\n    if (\n      !variable ||\n      !variable.type.startsWith(\"AnonymousEnum<\") ||\n      variable.checksum in wannabes\n    )\n      return\n\n    const typeName = getTypeName(x)\n    if (!typeName) return\n\n    let finalTypeName = typeName\n    for (let i = 1; nameToChecksum.has(finalTypeName); i++)\n      finalTypeName = typeName + i\n\n    wannabes[variable.checksum] = finalTypeName\n    nameToChecksum.set(finalTypeName, {\n      checksum: variable.checksum,\n      path: x.path,\n    })\n  })\n\n  declarations = defaultDeclarations()\n  typesBuilder = getTypesBuilder(declarations, metadata, wannabes)\n\n  metadata.lookup.forEach(({ id }) => {\n    typesBuilder.buildDefinition(id)\n  })\n\n  return Object.fromEntries(\n    [...nameToChecksum].map(([name, { checksum, path }]) => {\n      return [\n        checksum,\n        {\n          name,\n          checksum,\n          type: declarations.variables.get(checksum)!.type,\n          path,\n        },\n      ]\n    }),\n  )\n}\n","import {\n  getChecksumBuilder,\n  getLookupFn,\n} from \"@polkadot-api/metadata-builders\"\nimport type { V14, V15 } from \"@polkadot-api/substrate-bindings\"\nimport { filterObject, mapObject } from \"@polkadot-api/utils\"\nimport { getTypesBuilder } from \"./types-builder\"\n\nconst isDocs = (x: any) => {\n  if (typeof x !== \"object\") return false\n  const keys = new Set(Object.keys(x))\n  if (keys.size !== 2) return false\n  return keys.has(\"docs\") && keys.has(\"value\")\n}\n\nconst customStringifyObject = (\n  input: string | Record<string, any> | Array<any>,\n): string => {\n  if (typeof input === \"string\" || typeof input === \"number\") return input\n\n  if (Array.isArray(input))\n    return `[${input.map(customStringifyObject).join(\", \")}]`\n\n  return `{${Object.entries(\n    mapObject(input, (x) => (isDocs(x) ? x : customStringifyObject(x))),\n  )\n    .map(([key, value]) => {\n      if (isDocs(value)) {\n        return `\\n\\n/**\\n${value.docs\n          .map((doc: string) => ` *${doc}`)\n          .join(\"\\n\")}\\n */\\n${key}: ${customStringifyObject(value.value)}`\n      }\n      return `${key}: ${value}`\n    })\n    .join(\",\\n\")}}`\n}\n\n// type -> pallet -> name\nexport type DescriptorValues = Record<\n  \"storage\" | \"tx\" | \"events\" | \"errors\" | \"constants\" | \"apis\",\n  Record<string, Record<string, number>>\n>\n\nexport const generateDescriptors = (\n  metadata: V14 | V15,\n  checksums: string[],\n  typesBuilder: ReturnType<typeof getTypesBuilder>,\n  checksumBuilder: ReturnType<typeof getChecksumBuilder>,\n  prefix: string,\n  paths: {\n    client: string\n    checksums: string\n    types: string\n    descriptorValues: string\n  },\n) => {\n  const buildEnumObj = <T>(\n    val: number | undefined,\n    cb: (name: string, docs: string[]) => T,\n  ): Record<string, T> => {\n    if (val === undefined) return {}\n\n    const lookup = metadata.lookup[val]\n    if (lookup.def.tag !== \"variant\") throw null\n    return Object.fromEntries(\n      lookup.def.value.map((x) => {\n        return [x.name!, cb(x.name, x.docs)]\n      }),\n    )\n  }\n\n  const storage = Object.fromEntries(\n    metadata.pallets.map((pallet) => {\n      return [\n        pallet.name,\n        Object.fromEntries(\n          pallet.storage?.items.map(({ name, modifier, docs }) => {\n            const { key, val } = typesBuilder.buildStorage(pallet.name, name)\n            const checksum = checksumBuilder.buildStorage(pallet.name, name)!\n            const type = `StorageDescriptor<${key}, ${val}, ${!modifier}>`\n            return [\n              name,\n              {\n                checksum: checksums.indexOf(checksum),\n                type,\n                name: `stg_${pallet.name}_${name}`,\n                docs,\n              },\n            ]\n          }) ?? [],\n        ),\n      ]\n    }),\n  )\n\n  const constants = Object.fromEntries(\n    metadata.pallets.map((pallet) => {\n      return [\n        pallet.name,\n        Object.fromEntries(\n          pallet.constants?.map(({ name, docs }) => {\n            const checksum = checksumBuilder.buildConstant(pallet.name, name)!\n            const type = `PlainDescriptor<${typesBuilder.buildConstant(\n              pallet.name,\n              name,\n            )}>`\n            return [\n              name,\n              {\n                checksum: checksums.indexOf(checksum),\n                type,\n                name: `const_${pallet.name}_${name}`,\n                docs,\n              },\n            ]\n          }) ?? [],\n        ),\n      ]\n    }),\n  )\n\n  const calls = Object.fromEntries(\n    metadata.pallets.map((pallet) => {\n      return [\n        pallet.name,\n        buildEnumObj(pallet.calls, (name, docs) => ({\n          checksum: checksums.indexOf(\n            checksumBuilder.buildCall(pallet.name, name)!,\n          ),\n          type: `TxDescriptor<${typesBuilder.buildCall(pallet.name, name)}>`,\n          name: `call_${pallet.name}_${name}`,\n          docs,\n        })),\n      ]\n    }),\n  )\n\n  const events = Object.fromEntries(\n    metadata.pallets.map((pallet) => {\n      return [\n        pallet.name,\n        buildEnumObj(pallet.events, (name, docs) => ({\n          checksum: checksums.indexOf(\n            checksumBuilder.buildEvent(pallet.name, name)!,\n          ),\n          type: `PlainDescriptor<${typesBuilder.buildEvent(\n            pallet.name,\n            name,\n          )}>`,\n          name: `evt_${pallet.name}_${name}`,\n          docs,\n        })),\n      ]\n    }),\n  )\n\n  const errors = Object.fromEntries(\n    metadata.pallets.map((pallet) => {\n      return [\n        pallet.name,\n        buildEnumObj(pallet.errors, (name, docs) => {\n          return {\n            checksum: checksums.indexOf(\n              checksumBuilder.buildError(pallet.name, name)!,\n            ),\n            type: `PlainDescriptor<${typesBuilder.buildError(\n              pallet.name,\n              name,\n            )}>`,\n            name: `err_${pallet.name}_${name}`,\n            docs,\n          }\n        }),\n      ]\n    }),\n  )\n\n  const runtimeCalls = Object.fromEntries(\n    metadata.apis.map((api) => [\n      api.name,\n      {\n        docs: api.docs,\n        methods: Object.fromEntries(\n          api.methods.map((method) => {\n            const { args, value } = typesBuilder.buildRuntimeCall(\n              api.name,\n              method.name,\n            )\n            return [\n              method.name,\n              {\n                checksum: checksums.indexOf(\n                  checksumBuilder.buildRuntimeCall(api.name, method.name)!,\n                ),\n                type: `RuntimeDescriptor<${args}, ${value}>`,\n                name: `runtime_${api.name}_${method.name}`,\n                docs: method.docs,\n              },\n            ]\n          }),\n        ),\n      },\n    ]),\n  )\n\n  const mapDescriptor = <T, R>(\n    descriptor: Record<string, Record<string, T>>,\n    mapFn: (value: T, pallet: string, name: string) => R,\n  ): Record<string, Record<string, R>> =>\n    filterObject(\n      mapObject(descriptor, (v, pallet) =>\n        mapObject(v, (value, name) => mapFn(value, pallet, name)),\n      ),\n      (v) => Object.keys(v).length > 0,\n    )\n\n  const extractValue = (input: { docs: string[]; type: string }) => ({\n    docs: input.docs,\n    value: input.type,\n  })\n\n  const iStorage = mapDescriptor(storage, extractValue)\n  const iCalls = mapDescriptor(calls, extractValue)\n  const iEvents = mapDescriptor(events, extractValue)\n  const iErrors = mapDescriptor(errors, extractValue)\n  const iConstants = mapDescriptor(constants, extractValue)\n\n  const descriptorValues: DescriptorValues = {\n    storage: {},\n    tx: {},\n    events: {},\n    errors: {},\n    constants: {},\n    apis: {},\n  }\n  const mapObjStr = mapObject as <I, O>(\n    input: Record<string, I>,\n    mapper: (i: I, k: string) => O,\n  ) => Record<string, O>\n  Object.keys(storage).forEach((pallet) => {\n    descriptorValues[\"storage\"][pallet] = mapObjStr(\n      storage[pallet],\n      (x, _: string) => x.checksum,\n    )\n    descriptorValues[\"tx\"][pallet] = mapObjStr(calls[pallet], (x) => x.checksum)\n    descriptorValues[\"events\"][pallet] = mapObjStr(\n      events[pallet],\n      (x) => x.checksum,\n    )\n    descriptorValues[\"errors\"][pallet] = mapObjStr(\n      errors[pallet],\n      (x) => x.checksum,\n    )\n    descriptorValues[\"constants\"][pallet] = mapObjStr(\n      constants[pallet],\n      (x) => x.checksum,\n    )\n  })\n\n  const iRuntimeCalls = mapObject(runtimeCalls, (api) => ({\n    docs: api.docs,\n    value: mapObject(api.methods, ({ docs, type: value }) => ({ docs, value })),\n  }))\n\n  descriptorValues[\"apis\"] = mapObject(runtimeCalls, (api) =>\n    mapObject(api.methods, (x) => x.checksum),\n  )\n\n  const clientImports = [\n    \"StorageDescriptor\",\n    \"PlainDescriptor\",\n    \"AssetDescriptor\",\n    \"TxDescriptor\",\n    \"RuntimeDescriptor\",\n    \"Enum\",\n    \"_Enum\",\n    \"Binary\",\n    \"FixedSizeBinary\",\n    \"FixedSizeArray\",\n    \"QueryFromPalletsDef\",\n    \"TxFromPalletsDef\",\n    \"EventsFromPalletsDef\",\n    \"ErrorsFromPalletsDef\",\n    \"ConstFromPalletsDef\",\n    ...typesBuilder.getClientFileImports(),\n  ]\n\n  const assetPayment = metadata.extrinsic.signedExtensions.find(\n    (x) => x.identifier === \"ChargeAssetTxPayment\",\n  )\n\n  let _assetId: null | number = null\n  if (assetPayment) {\n    const assetTxPayment = getLookupFn(metadata.lookup)(assetPayment.type)\n    if (assetTxPayment.type === \"struct\") {\n      const optionalAssetId = assetTxPayment.value.asset_id\n      if (optionalAssetId.type === \"option\") _assetId = optionalAssetId.value.id\n    }\n  }\n\n  const asset =\n    _assetId === null\n      ? null\n      : {\n          checksum: checksumBuilder.buildDefinition(_assetId),\n          type: typesBuilder.buildTypeDefinition(_assetId),\n        }\n\n  const imports = `import {${clientImports.join(\", \")}} from \"${paths.client}\";\n  import {${typesBuilder.getTypeFileImports().join(\", \")}} from \"${\n    paths.types\n  }\";\n\n  const descriptorValues = import(\"${paths.descriptorValues}\").then(module => module[\"${prefix}\"]);\n  const checksums = import(\"${paths.checksums}\").then(module => 'default' in module ? module.default : module);\n  `\n\n  const descriptorTypes = `${imports}\n\ntype AnonymousEnum<T extends {}> = T & {\n  __anonymous: true\n}\n\ntype MyTuple<T> = [T, ...T[]]\n\ntype SeparateUndefined<T> = undefined extends T\n  ? undefined | Exclude<T, undefined>\n  : T\n\n\ntype Anonymize<T> = SeparateUndefined<\n  T extends FixedSizeBinary<infer L>\n    ? number extends L\n      ? Binary\n      : FixedSizeBinary<L>\n    : T extends\n          | string\n          | number\n          | bigint\n          | boolean\n          | void\n          | undefined\n          | null\n          | symbol\n          | Uint8Array\n          | Enum<any>\n      ? T\n      : T extends AnonymousEnum<infer V>\n        ? Enum<V>\n        : T extends MyTuple<any>\n          ? {\n              [K in keyof T]: T[K]\n            }\n          : T extends []\n            ? []\n            : T extends FixedSizeArray<infer L, infer T>\n              ? number extends L\n                ? Array<T>\n                : FixedSizeArray<L, T>\n              : {\n                  [K in keyof T & string]: T[K]\n                }\n>\n\ntype IStorage = ${customStringifyObject(iStorage)};\ntype ICalls = ${customStringifyObject(iCalls)};\ntype IEvent = ${customStringifyObject(iEvents)};\ntype IError = ${customStringifyObject(iErrors)};\ntype IConstants = ${customStringifyObject(iConstants)};\ntype IRuntimeCalls = ${customStringifyObject(iRuntimeCalls)};\ntype IAsset = AssetDescriptor<${asset?.type ?? \"void\"}>\nconst asset: IAsset = \"${asset?.checksum ?? \"\"}\" as IAsset\n\ntype PalletsTypedef = {\n  __storage: IStorage,\n  __tx: ICalls,\n  __event: IEvent,\n  __error: IError,\n  __const: IConstants\n}\n\ntype IDescriptors = {\n  descriptors: {\n    pallets: PalletsTypedef,\n    apis: IRuntimeCalls\n  } & Promise<any>,\n  asset: IAsset,\n  checksums: Promise<string[]>\n};\nconst _allDescriptors = { descriptors: descriptorValues, asset, checksums } as any as IDescriptors;\nexport default _allDescriptors;\n\nexport type ${prefix}Queries = QueryFromPalletsDef<PalletsTypedef>\nexport type ${prefix}Calls = TxFromPalletsDef<PalletsTypedef>\nexport type ${prefix}Events = EventsFromPalletsDef<PalletsTypedef>\nexport type ${prefix}Errors = ErrorsFromPalletsDef<PalletsTypedef>\nexport type ${prefix}Constants = ConstFromPalletsDef<PalletsTypedef>\n\nexport type ${prefix}WhitelistEntry =\n  | PalletKey\n  | ApiKey<IRuntimeCalls>\n  | \\`query.\\${NestedKey<PalletsTypedef['__storage']>}\\`\n  | \\`tx.\\${NestedKey<PalletsTypedef['__tx']>}\\`\n  | \\`event.\\${NestedKey<PalletsTypedef['__event']>}\\`\n  | \\`error.\\${NestedKey<PalletsTypedef['__error']>}\\`\n  | \\`const.\\${NestedKey<PalletsTypedef['__const']>}\\`\n\ntype PalletKey = \\`*.\\${keyof PalletsTypedef & string}\\`\ntype NestedKey<D extends Record<string, Record<string, any>>> =\n  | \"*\"\n  | {\n      [P in keyof D & string]:\n        | \\`\\${P}.*\\`\n        | {\n            [N in keyof D[P] & string]: \\`\\${P}.\\${N}\\`\n          }[keyof D[P] & string]\n    }[keyof D & string]\n\ntype ApiKey<D extends Record<string, Record<string, any>>> =\n  | \"api.*\"\n  | {\n      [P in keyof D & string]:\n        | \\`api.\\${P}.*\\`\n        | {\n            [N in keyof D[P] & string]: \\`api.\\${P}.\\${N}\\`\n          }[keyof (keyof D[P]) & string]\n    }[keyof D & string]\n`\n\n  return { descriptorTypes, descriptorValues }\n}\n","import { getChecksumBuilder } from \"@polkadot-api/metadata-builders\"\nimport type { V14, V15 } from \"@polkadot-api/substrate-bindings\"\nimport { DescriptorValues, generateDescriptors } from \"./generate-descriptors\"\nimport { generateTypes } from \"./generate-types\"\nimport { getUsedChecksums } from \"./get-used-checksums\"\nimport knownTypes, { KnownTypes } from \"./known-types\"\nimport { Variable, defaultDeclarations, getTypesBuilder } from \"./types-builder\"\nimport { applyWhitelist } from \"./whitelist\"\nimport { mapObject } from \"@polkadot-api/utils\"\n\nexport const generateMultipleDescriptors = (\n  chains: Array<{\n    key: string\n    metadata: V14 | V15\n    knownTypes: KnownTypes\n  }>,\n  paths: {\n    client: string\n    checksums: string\n    types: string\n    descriptorValues: string\n  },\n  options: {\n    whitelist?: string[]\n  } = {},\n) => {\n  const chainData = chains.map((chain) => {\n    const metadata = options.whitelist\n      ? applyWhitelist(chain.metadata, options.whitelist)\n      : chain.metadata\n    const builder = getChecksumBuilder(metadata)\n    return {\n      ...chain,\n      metadata,\n      builder,\n      checksums: getUsedChecksums(metadata, builder),\n      knownTypes: {\n        ...knownTypes,\n        ...chain.knownTypes,\n      },\n    }\n  })\n  resolveConflicts(chainData)\n\n  const checksums = Array.from(\n    new Set(chainData.flatMap((chain) => Array.from(chain.checksums))),\n  )\n\n  const declarations = defaultDeclarations()\n  const chainFiles = chainData.map((chain) =>\n    generateDescriptors(\n      chain.metadata,\n      checksums,\n      getTypesBuilder(declarations, chain.metadata, chain.knownTypes),\n      chain.builder,\n      capitalize(chain.key),\n      paths,\n    ),\n  )\n\n  const descriptorsFileContent = generateDescriptorValuesContent(\n    Object.fromEntries(\n      chainFiles.map((file, i) => [chainData[i].key, file.descriptorValues]),\n    ),\n  )\n\n  return {\n    descriptorsFileContent,\n    descriptorTypesFileContent: chainFiles.map((file) => file.descriptorTypes),\n    checksums,\n    typesFileContent: generateTypes(declarations, paths),\n    publicTypes: getPublicTypes(declarations.variables),\n  }\n}\n\nfunction getPublicTypes(variables: Map<string, Variable>) {\n  return Array.from(variables.values())\n    .filter((variable) => variable.type.startsWith(\"Enum<\"))\n    .map((variable) => variable.name)\n}\n\nfunction resolveConflicts(\n  chainData: Array<{\n    key: string\n    checksums: Set<string>\n    knownTypes: KnownTypes\n  }>,\n) {\n  const usedNames = new Map<string, Map<string, Set<string>>>()\n\n  chainData.forEach((chain) =>\n    chain.checksums.forEach((checksum) => {\n      const name = chain.knownTypes[checksum]\n      if (!name) return\n      if (!usedNames.has(name)) {\n        usedNames.set(name, new Map())\n      }\n      if (!usedNames.get(name)!.has(chain.key)) {\n        usedNames.get(name)!.set(chain.key, new Set())\n      }\n      usedNames.get(name)!.get(chain.key)!.add(checksum)\n    }),\n  )\n\n  const conflictedChecksums = Array.from(usedNames.values()).flatMap(\n    (chainToChecksums) => {\n      const checksums = new Set(\n        Array.from(chainToChecksums.values()).flatMap((v) => [...v]),\n      )\n      if (checksums.size === 1) return []\n      const allAreTheSame = Array.from(chainToChecksums.values()).every(\n        (chainChecksums) => chainChecksums.size === checksums.size,\n      )\n      if (allAreTheSame) return []\n\n      return [...checksums]\n    },\n  )\n\n  Array.from(new Set(conflictedChecksums)).forEach((checksum) =>\n    chainData.forEach((chain) => {\n      const name = chain.knownTypes[checksum]\n      if (name) {\n        chain.knownTypes[checksum] = capitalize(chain.key) + name\n      }\n    }),\n  )\n}\n\nfunction capitalize(value: string) {\n  return value.slice(0, 1).toUpperCase() + value.slice(1)\n}\n\nfunction generateDescriptorValuesContent(\n  descriptorValues: Record<string, DescriptorValues>,\n) {\n  const usages: Record<string, number> = {}\n  const countUsages = (obj: Record<string, any>): void =>\n    Object.entries(obj).forEach(([key, value]) => {\n      usages[key] = usages[key] ?? 0\n      usages[key]++\n      if (typeof value === \"object\") countUsages(value)\n    })\n  countUsages(descriptorValues)\n\n  const tokens: Array<string> = []\n  const tokenToIdx: Record<string, number> = {}\n  const minifyKeys = <T extends Record<string | number, any>>(obj: T): T =>\n    Object.fromEntries(\n      Object.entries(obj).map(([key, value]) => {\n        const newValue = typeof value === \"number\" ? value : minifyKeys(value)\n        if (usages[key] <= 1) return [key, newValue]\n        if (!(key in tokenToIdx)) {\n          tokenToIdx[key] = tokens.length\n          tokens.push(key)\n        }\n        return [tokenToIdx[key], newValue]\n      }),\n    ) as T\n  const minified = mapObject(descriptorValues, minifyKeys)\n\n  const getTreeKey = (tree: Record<string, unknown>): string =>\n    Object.entries(tree)\n      .sort(([a], [b]) => a.localeCompare(b))\n      .map(\n        ([key, value]) =>\n          `[${key}:${typeof value === \"object\" ? getTreeKey(value as any) : value}]`,\n      )\n      .join(\"\")\n\n  type Transformed = Record<string, number | Record<string, number>>\n  /**\n   * Modifies in-place, changes type to Transformed.\n   */\n  const findCommonTrees = (\n    values: Array<Record<string, Record<string, unknown>>>,\n  ) => {\n    const treeUsages: Record<string, number> = {}\n    const keys = values.map((obj) =>\n      mapObject(obj, (tree) => {\n        const key = getTreeKey(tree)\n        treeUsages[key] = treeUsages[key] ?? 0\n        treeUsages[key]++\n        return key\n      }),\n    )\n\n    const commonTrees: Array<Record<string, unknown>> = []\n    const keyToCommonTree: Record<string, number> = {}\n    values.forEach((obj, i) =>\n      Object.entries(obj).forEach(([objKey, tree]) => {\n        const key = keys[i][objKey]\n        if (treeUsages[key] > 1) {\n          if (!(key in keyToCommonTree)) {\n            keyToCommonTree[key] = commonTrees.length\n            commonTrees.push(tree)\n          }\n          ;(obj as Transformed)[objKey] = keyToCommonTree[key]\n        }\n      }),\n    )\n\n    return commonTrees\n  }\n\n  const commonTrees = findCommonTrees(\n    Object.keys(Object.values(minified)[0]).flatMap((type) =>\n      Object.values(minified).map((d) => d[type as keyof DescriptorValues]),\n    ),\n  )\n\n  const data = JSON.stringify([minified, commonTrees, tokens])\n\n  return `\n    const [minified, commonTrees, tokens] = JSON.parse(\\`${data}\\`);\n\n    const replaceTokens = <T>(obj: Record<string | number, T>): Record<string, T> =>\n      Object.fromEntries(\n        Object.entries(obj).map(([key, value]) => {\n          const unwrappedValue =\n            typeof value === \"object\" ? replaceTokens(value as any) : value\n          const numericKey = Number(key)\n          if (Number.isNaN(numericKey)) {\n            return [key, unwrappedValue]\n          }\n          return [tokens[numericKey], unwrappedValue]\n        }),\n      ) as Record<string, T>\n    const tokenizedCommonTrees = commonTrees.map(replaceTokens)\n    \n    const unwrap = (\n      obj: Record<string, object | number>,\n      depth: number,\n    ): Record<string, object> =>\n      depth === 0\n        ? (obj as Record<string, object>)\n        : Object.fromEntries(\n            Object.entries(obj).map(([key, value]) => [\n              key,\n              unwrap(\n                typeof value === \"object\" ? value : tokenizedCommonTrees[value],\n                depth - 1,\n              ),\n            ]),\n          )\n    \n    const getChainDescriptors = (key: string) =>\n      unwrap(replaceTokens(minified[key]), 2)\n\n    ${Object.keys(descriptorValues)\n      .map(\n        (key) =>\n          `export const ${capitalize(key)} = getChainDescriptors(\"${key}\")`,\n      )\n      .join(\"\\n\")}\n  `\n}\n","import { CodeDeclarations } from \"./types-builder\"\n\nexport const generateTypes = (\n  declarations: CodeDeclarations,\n  paths: {\n    client: string\n  },\n) => {\n  const clientImports = [\n    \"Enum\",\n    \"_Enum\",\n    \"GetEnum\",\n    \"FixedSizeBinary\",\n    \"FixedSizeArray\",\n    \"Binary\",\n    ...declarations.imports,\n  ]\n\n  const imports = `import {${clientImports.join(\", \")}} from \"${paths.client}\";`\n\n  const baseTypes = [...declarations.variables.values()]\n    .map(({ name, type }) =>\n      type.startsWith(\"Enum<\")\n        ? `export type ${name} = ${type};\\nexport const ${name} = _Enum as unknown as GetEnum<${name}>;`\n        : `export type ${name} = ${type};`,\n    )\n    .join(\"\\n\\n\")\n\n  return `${imports}\n\n  type AnonymousEnum<T extends {}> = T & {\n    __anonymous: true\n  }\n\n  type MyTuple<T> = [T, ...T[]]\n\n  type SeparateUndefined<T> = undefined extends T\n    ? undefined | Exclude<T, undefined>\n    : T\n\n  type Anonymize<T> = SeparateUndefined<\n    T extends FixedSizeBinary<infer L>\n      ? number extends L\n        ? Binary\n        : FixedSizeBinary<L>\n      : T extends\n            | string\n            | number\n            | bigint\n            | boolean\n            | void\n            | undefined\n            | null\n            | symbol\n            | Uint8Array\n            | Enum<any>\n        ? T\n        : T extends AnonymousEnum<infer V>\n          ? Enum<V>\n          : T extends MyTuple<any>\n            ? {\n                [K in keyof T]: T[K]\n              }\n            : T extends []\n              ? []\n              : T extends FixedSizeArray<infer L, infer T>\n                ? number extends L\n                  ? Array<T>\n                  : FixedSizeArray<L, T>\n                : {\n                    [K in keyof T & string]: T[K]\n                  }\n  >\n\n  ${baseTypes}\n  `\n}\n","import { getChecksumBuilder } from \"@polkadot-api/metadata-builders\"\nimport { V14, V15 } from \"@polkadot-api/substrate-bindings\"\n\nexport const getUsedChecksums = (\n  metadata: V14 | V15,\n  builder = getChecksumBuilder(metadata),\n) => {\n  const buildEnum = (val: number | undefined, cb: (name: string) => void) => {\n    if (val === undefined) return\n\n    const lookup = metadata.lookup[val]\n    if (lookup.def.tag !== \"variant\") throw null\n    lookup.def.value.forEach((x) => cb(x.name))\n  }\n\n  const checksums = new Set<string>()\n\n  metadata.pallets.forEach((pallet) => {\n    pallet.storage?.items.forEach(({ name }) =>\n      checksums.add(builder.buildStorage(pallet.name, name)!),\n    ) ?? []\n    pallet.constants.forEach(({ name }) =>\n      checksums.add(builder.buildConstant(pallet.name, name)!),\n    )\n    buildEnum(pallet.calls, (name) =>\n      checksums.add(builder.buildCall(pallet.name, name)!),\n    )\n    buildEnum(pallet.events, (name) =>\n      checksums.add(builder.buildEvent(pallet.name, name)!),\n    )\n    buildEnum(pallet.errors, (name) =>\n      checksums.add(builder.buildError(pallet.name, name)!),\n    )\n  })\n\n  metadata.apis.forEach((api) =>\n    api.methods.forEach((method) =>\n      checksums.add(builder.buildRuntimeCall(api.name, method.name)!),\n    ),\n  )\n\n  return new Set([...checksums, ...builder.getAllGeneratedChecksums()])\n}\n","import { mapObject } from \"@polkadot-api/utils\"\n\nexport type KnownTypes = Record<string, string>\nexport type RepositoryEntry =\n  | string\n  | { name: string; paths?: string[]; type?: string; chains?: string }\n\nexport const knownTypesRepository: Record<string, RepositoryEntry> = {\n  \"7bvp9q4ceuk7\": {\n    name: \"DigestItem\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.generic.digest.DigestItem\"],\n    type: \"Enum(PreRuntime, Consensus, Seal, Other, RuntimeEnvironmentUpdated)\",\n  },\n  \"90bksimft5ia2\": {\n    name: \"DispatchClass\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"frame_support.dispatch.DispatchClass\"],\n    type: \"Enum(Normal, Operational, Mandatory)\",\n  },\n  edh5jo3t7dgka: {\n    name: \"DispatchError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.DispatchError\"],\n    type: \"Enum(Other, CannotLookup, BadOrigin, Module, ConsumerRemaining, NoProviders, TooManyConsumers, Token, Arithmetic, Transactional, Exhausted, Corruption, Unavailable, RootNotAllowed)\",\n  },\n  \"5ltp1mv4fr7n7\": {\n    name: \"TokenError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.TokenError\"],\n    type: \"Enum(FundsUnavailable, OnlyProvider, BelowMinimum, CannotCreate, UnknownAsset, Frozen, Unsupported, CannotCreateHold, NotExpendable, Blocked)\",\n  },\n  \"87r8lmtt997st\": {\n    name: \"ArithmeticError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_arithmetic.ArithmeticError\"],\n    type: \"Enum(Underflow, Overflow, DivisionByZero)\",\n  },\n  f87qnbuqe30lh: {\n    name: \"TransactionalError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.TransactionalError\"],\n    type: \"Enum(LimitReached, NoLayer)\",\n  },\n  \"7u481jea1442o\": {\n    name: \"BalanceStatus\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"frame_support.traits.tokens.misc.BalanceStatus\"],\n    type: \"Enum(Free, Reserved)\",\n  },\n  cjonl4a47pcm8: {\n    name: \"TransactionPaymentEvent\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_transaction_payment.pallet.Event\"],\n    type: \"Enum(TransactionFeePaid)\",\n  },\n  \"1078dp8vlrjh3\": {\n    name: \"SessionEvent\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_session.pallet.Event\"],\n    type: \"Enum(NewSession)\",\n  },\n  bnmfm52c5n7nq: {\n    name: \"XcmV4TraitsOutcome\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"staging_xcm.v4.traits.Outcome\"],\n    type: \"Enum(Complete, Incomplete, Error)\",\n  },\n  \"8j0abm9jkapk2\": {\n    name: \"XcmV3TraitsError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.traits.Error\"],\n    type: \"Enum(Overflow, Unimplemented, UntrustedReserveLocation, UntrustedTeleportLocation, LocationFull, LocationNotInvertible, BadOrigin, InvalidLocation, AssetNotFound, FailedToTransactAsset, NotWithdrawable, LocationCannotHold, ExceedsMaxMessageSize, DestinationUnsupported, Transport, Unroutable, UnknownClaim, FailedToDecode, MaxWeightInvalid, NotHoldingFees, TooExpensive, Trap, ExpectationFalse, PalletNotFound, NameMismatch, VersionIncompatible, HoldingWouldOverflow, ExportError, ReanchorFailed, NoDeal, FeesNotMet, LockError, NoPermission, Unanchored, NotDepositable, UnhandledXcmVersion, WeightLimitReached, Barrier, WeightNotComputable, ExceedsStackLimit)\",\n  },\n  faafmcb1jmm2o: {\n    name: \"XcmV3Junctions\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.junctions.Junctions\", \"staging_xcm.v4.junctions.Junctions\"],\n    type: \"Enum(Here, X1, X2, X3, X4, X5, X6, X7, X8)\",\n  },\n  \"6ag633d941o7v\": {\n    name: \"XcmV3Junction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.junction.Junction\", \"staging_xcm.v4.junction.Junction\"],\n    type: \"Enum(Parachain, AccountId32, AccountIndex64, AccountKey20, PalletInstance, GeneralIndex, GeneralKey, OnlyChild, Plurality, GlobalConsensus)\",\n  },\n  \"982q4n5eor6ih\": {\n    name: \"XcmV3JunctionNetworkId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.junction.NetworkId\", \"staging_xcm.v4.junction.NetworkId\"],\n    type: \"Enum(ByGenesis, ByFork, Polkadot, Kusama, Westend, Rococo, Wococo, Ethereum, BitcoinCore, BitcoinCash, PolkadotBulletin)\",\n  },\n  bd6859lkk2107: {\n    name: \"XcmV3JunctionBodyId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.junction.BodyId\"],\n    type: \"Enum(Unit, Moniker, Index, Executive, Technical, Legislative, Judicial, Defense, Administration, Treasury)\",\n  },\n  f5frjbmqcgt5k: {\n    name: \"XcmV2JunctionBodyPart\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.junction.BodyPart\", \"xcm.v2.BodyPart\"],\n    type: \"Enum(Voice, Members, Fraction, AtLeastProportion, MoreThanProportion)\",\n  },\n  andndh150vhd7: {\n    name: \"XcmV4Instruction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"staging_xcm.v4.Instruction\"],\n    type: \"Enum(WithdrawAsset, ReserveAssetDeposited, ReceiveTeleportedAsset, QueryResponse, TransferAsset, TransferReserveAsset, Transact, HrmpNewChannelOpenRequest, HrmpChannelAccepted, HrmpChannelClosing, ClearOrigin, DescendOrigin, ReportError, DepositAsset, DepositReserveAsset, ExchangeAsset, InitiateReserveWithdraw, InitiateTeleport, ReportHolding, BuyExecution, RefundSurplus, SetErrorHandler, SetAppendix, ClearError, ClaimAsset, Trap, SubscribeVersion, UnsubscribeVersion, BurnAsset, ExpectAsset, ExpectOrigin, ExpectError, ExpectTransactStatus, QueryPallet, ExpectPallet, ReportTransactStatus, ClearTransactStatus, UniversalOrigin, ExportMessage, LockAsset, UnlockAsset, NoteUnlockable, RequestUnlock, SetFeesMode, SetTopic, ClearTopic, AliasOrigin, UnpaidExecution)\",\n  },\n  d2d2vjc8h66mf: {\n    name: \"XcmV3MultiassetFungibility\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\n      \"xcm.v3.multiasset.Fungibility\",\n      \"staging_xcm.v4.asset.Fungibility\",\n    ],\n    type: \"Enum(Fungible, NonFungible)\",\n  },\n  \"9d6sev8uj006q\": {\n    name: \"XcmV3MultiassetAssetInstance\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\n      \"xcm.v3.multiasset.AssetInstance\",\n      \"staging_xcm.v4.asset.AssetInstance\",\n    ],\n    type: \"Enum(Undefined, Index, Array4, Array8, Array16, Array32)\",\n  },\n  csmfdagrgtkj5: {\n    name: \"XcmV4Response\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"staging_xcm.v4.Response\"],\n    type: \"Enum(Null, Assets, ExecutionResult, Version, PalletsInfo, DispatchResult)\",\n  },\n  \"5g0925eiftlcf\": {\n    name: \"XcmV3MaybeErrorCode\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.MaybeErrorCode\"],\n    type: \"Enum(Success, Error, TruncatedError)\",\n  },\n  \"2dcitigd3tk41\": {\n    name: \"XcmV2OriginKind\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.OriginKind\"],\n    type: \"Enum(Native, SovereignAccount, Superuser, Xcm)\",\n  },\n  biemf2h6nh9pa: {\n    name: \"XcmV4AssetAssetFilter\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"staging_xcm.v4.asset.AssetFilter\"],\n    type: \"Enum(Definite, Wild)\",\n  },\n  e252kk4p31sv6: {\n    name: \"XcmV4AssetWildAsset\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"staging_xcm.v4.asset.WildAsset\"],\n    type: \"Enum(All, AllOf, AllCounted, AllOfCounted)\",\n  },\n  cg1p3hrtv6n5f: {\n    name: \"XcmV2MultiassetWildFungibility\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\n      \"xcm.v2.multiasset.WildFungibility\",\n      \"xcm.v3.multiasset.WildFungibility\",\n      \"staging_xcm.v4.asset.WildFungibility\",\n    ],\n    type: \"Enum(Fungible, NonFungible)\",\n  },\n  \"769fta165mequ\": {\n    name: \"XcmV3WeightLimit\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.WeightLimit\"],\n    type: \"Enum(Unlimited, Limited)\",\n  },\n  \"7vujittrav0br\": {\n    name: \"XcmVersionedAssets\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.VersionedAssets\"],\n    type: \"Enum(V2, V3, V4)\",\n  },\n  es1oivk962n6f: {\n    name: \"XcmV2MultiassetAssetId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multiasset.AssetId\"],\n    type: \"Enum(Concrete, Abstract)\",\n  },\n  aquvu9nu2es05: {\n    name: \"XcmV2MultilocationJunctions\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multilocation.Junctions\"],\n    type: \"Enum(Here, X1, X2, X3, X4, X5, X6, X7, X8)\",\n  },\n  \"505kan7sticn1\": {\n    name: \"XcmV2Junction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.junction.Junction\"],\n    type: \"Enum(Parachain, AccountId32, AccountIndex64, AccountKey20, PalletInstance, GeneralIndex, GeneralKey, OnlyChild, Plurality)\",\n  },\n  \"710b6mh49al4f\": {\n    name: \"XcmV2NetworkId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.NetworkId\"],\n    type: \"Enum(Any, Named, Polkadot, Kusama)\",\n  },\n  \"46j01db9schbn\": {\n    name: \"XcmV2BodyId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.BodyId\"],\n    type: \"Enum(Unit, Named, Index, Executive, Technical, Legislative, Judicial, Defense, Administration, Treasury)\",\n  },\n  \"1e4e6h17tes8n\": {\n    name: \"XcmV2MultiassetFungibility\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multiasset.Fungibility\"],\n    type: \"Enum(Fungible, NonFungible)\",\n  },\n  \"11avansl9buvp\": {\n    name: \"XcmV2MultiassetAssetInstance\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multiasset.AssetInstance\"],\n    type: \"Enum(Undefined, Index, Array4, Array8, Array16, Array32, Blob)\",\n  },\n  \"4cajo1lbs9cmt\": {\n    name: \"XcmV3MultiassetAssetId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.multiasset.AssetId\"],\n    type: \"Enum(Concrete, Abstract)\",\n  },\n  ap9sokavcmq5o: {\n    name: \"XcmVersionedLocation\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.VersionedLocation\"],\n    type: \"Enum(V2, V3, V4)\",\n  },\n  \"4hum2k6q9amhf\": {\n    name: \"ProcessMessageError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"frame_support.traits.messages.ProcessMessageError\"],\n    type: \"Enum(BadFormat, Corrupt, Unsupported, Overweight, Yield)\",\n  },\n  b1t99vn44417o: {\n    name: \"UtilityEvent\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_utility.pallet.Event\"],\n    type: \"Enum(BatchInterrupted, BatchCompleted, BatchCompletedWithErrors, ItemCompleted, ItemFailed, DispatchedAs)\",\n  },\n  \"5830pdel8nng3\": {\n    name: \"MultisigEvent\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_multisig.pallet.Event\"],\n    type: \"Enum(NewMultisig, MultisigApproval, MultisigExecuted, MultisigCancelled)\",\n  },\n  \"302o6h1bqiqgu\": {\n    name: \"PreimageEvent\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_preimage.pallet.Event\"],\n    type: \"Enum(Noted, Requested, Cleared)\",\n  },\n  \"890aui9hh0f9q\": {\n    name: \"AssetRateEvent\",\n    chains:\n      \"polkadot, polkadot.collectives, rococo, westend, westend.collectives\",\n    paths: [\"pallet_asset_rate.pallet.Event\"],\n    type: \"Enum(AssetRateCreated, AssetRateRemoved, AssetRateUpdated)\",\n  },\n  cc0rvpoin8ucr: {\n    name: \"VersionedLocatableAsset\",\n    chains:\n      \"polkadot, polkadot.collectives, rococo, westend, westend.collectives\",\n    paths: [\"polkadot_runtime_common.impls.VersionedLocatableAsset\"],\n    type: \"Enum(V3, V4)\",\n  },\n  cuaiiptinb4jf: {\n    name: \"Version\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_vesting.Releases\", \"pallet_alliance.types.Version\"],\n    type: \"Enum(V0, V1)\",\n  },\n  cgde8bg5ldqpa: {\n    name: \"PreimagesBounded\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"frame_support.traits.preimages.Bounded\"],\n    type: \"Enum(Legacy, Inline, Lookup)\",\n  },\n  \"5a3qnpcq081o6\": {\n    name: \"MultiAddress\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.multiaddress.MultiAddress\"],\n    type: \"Enum(Id, Index, Raw, Address32, Address20)\",\n  },\n  \"3vrnp048j3b2d\": {\n    name: \"BalancesAdjustmentDirection\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_balances.types.AdjustmentDirection\"],\n    type: \"Enum(Increase, Decrease)\",\n  },\n  m2dj93rjj6ks: {\n    name: \"XcmVersionedXcm\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.VersionedXcm\"],\n    type: \"Enum(V2, V3, V4)\",\n  },\n  ml0q5vk4ei4e: {\n    name: \"XcmV2Instruction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.Instruction\"],\n    type: \"Enum(WithdrawAsset, ReserveAssetDeposited, ReceiveTeleportedAsset, QueryResponse, TransferAsset, TransferReserveAsset, Transact, HrmpNewChannelOpenRequest, HrmpChannelAccepted, HrmpChannelClosing, ClearOrigin, DescendOrigin, ReportError, DepositAsset, DepositReserveAsset, ExchangeAsset, InitiateReserveWithdraw, InitiateTeleport, QueryHolding, BuyExecution, RefundSurplus, SetErrorHandler, SetAppendix, ClearError, ClaimAsset, Trap, SubscribeVersion, UnsubscribeVersion)\",\n  },\n  \"30v4njes1avsr\": {\n    name: \"XcmV2Response\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.Response\"],\n    type: \"Enum(Null, Assets, ExecutionResult, Version)\",\n  },\n  amc6gl7bd9por: {\n    name: \"XcmV2TraitsError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.traits.Error\"],\n    type: \"Enum(Overflow, Unimplemented, UntrustedReserveLocation, UntrustedTeleportLocation, MultiLocationFull, MultiLocationNotInvertible, BadOrigin, InvalidLocation, AssetNotFound, FailedToTransactAsset, NotWithdrawable, LocationCannotHold, ExceedsMaxMessageSize, DestinationUnsupported, Transport, Unroutable, UnknownClaim, FailedToDecode, MaxWeightInvalid, NotHoldingFees, TooExpensive, Trap, UnhandledXcmVersion, WeightLimitReached, Barrier, WeightNotComputable)\",\n  },\n  fddrr93rdab23: {\n    name: \"XcmV2MultiAssetFilter\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multiasset.MultiAssetFilter\"],\n    type: \"Enum(Definite, Wild)\",\n  },\n  \"3jnpd4dmb650\": {\n    name: \"XcmV2MultiassetWildMultiAsset\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multiasset.WildMultiAsset\"],\n    type: \"Enum(All, AllOf)\",\n  },\n  adqdire0qjg0e: {\n    name: \"XcmV2WeightLimit\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.WeightLimit\"],\n    type: \"Enum(Unlimited, Limited)\",\n  },\n  \"8c614g2bc4iej\": {\n    name: \"XcmV3Instruction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.Instruction\"],\n    type: \"Enum(WithdrawAsset, ReserveAssetDeposited, ReceiveTeleportedAsset, QueryResponse, TransferAsset, TransferReserveAsset, Transact, HrmpNewChannelOpenRequest, HrmpChannelAccepted, HrmpChannelClosing, ClearOrigin, DescendOrigin, ReportError, DepositAsset, DepositReserveAsset, ExchangeAsset, InitiateReserveWithdraw, InitiateTeleport, ReportHolding, BuyExecution, RefundSurplus, SetErrorHandler, SetAppendix, ClearError, ClaimAsset, Trap, SubscribeVersion, UnsubscribeVersion, BurnAsset, ExpectAsset, ExpectOrigin, ExpectError, ExpectTransactStatus, QueryPallet, ExpectPallet, ReportTransactStatus, ClearTransactStatus, UniversalOrigin, ExportMessage, LockAsset, UnlockAsset, NoteUnlockable, RequestUnlock, SetFeesMode, SetTopic, ClearTopic, AliasOrigin, UnpaidExecution)\",\n  },\n  \"7ffbrur6hobca\": {\n    name: \"XcmV3Response\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.Response\"],\n    type: \"Enum(Null, Assets, ExecutionResult, Version, PalletsInfo, DispatchResult)\",\n  },\n  ukot04uppvug: {\n    name: \"XcmV3MultiassetMultiAssetFilter\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.multiasset.MultiAssetFilter\"],\n    type: \"Enum(Definite, Wild)\",\n  },\n  \"332pk9bjbk7p3\": {\n    name: \"XcmV3MultiassetWildMultiAsset\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.multiasset.WildMultiAsset\"],\n    type: \"Enum(All, AllOf, AllCounted, AllOfCounted)\",\n  },\n  a3gvv195g4jot: {\n    name: \"DispatchRawOrigin\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"frame_support.dispatch.RawOrigin\"],\n    type: \"Enum(Root, Signed, None)\",\n  },\n  \"5svrq9ei0ks3q\": {\n    name: \"XcmPalletOrigin\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_xcm.pallet.Origin\"],\n    type: \"Enum(Xcm, Response)\",\n  },\n  e3otks9vj8a3b: {\n    name: \"TraitsScheduleDispatchTime\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"frame_support.traits.schedule.DispatchTime\"],\n    type: \"Enum(At, After)\",\n  },\n  \"68cld6q6s1gvo\": {\n    name: \"TreasuryEvent\",\n    chains:\n      \"polkadot, polkadot.collectives, rococo, westend, westend.collectives\",\n    paths: [\"pallet_treasury.pallet.Event\"],\n    type: \"Enum(Proposed, Spending, Awarded, Rejected, Burnt, Rollover, Deposit, SpendApproved, UpdatedInactive, AssetSpendApproved, AssetSpendVoided, Paid, PaymentFailed, SpendProcessed)\",\n  },\n  bl1lrline4to8: {\n    name: \"Phase\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"frame_system.Phase\"],\n    type: \"Enum(ApplyExtrinsic, Finalization, Initialization)\",\n  },\n  f331um1stp6g0: {\n    name: \"UpgradeGoAhead\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\n      \"polkadot_primitives.v6.UpgradeGoAhead\",\n      \"polkadot_primitives.v7.UpgradeGoAhead\",\n    ],\n    type: \"Enum(Abort, GoAhead)\",\n  },\n  \"9pobt6o24rqdc\": {\n    name: \"UpgradeRestriction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\n      \"polkadot_primitives.v6.UpgradeRestriction\",\n      \"polkadot_primitives.v7.UpgradeRestriction\",\n    ],\n    type: \"Enum(Present)\",\n  },\n  bgr9ooktct68l: {\n    name: \"BalancesTypesReasons\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_balances.types.Reasons\"],\n    type: \"Enum(Fee, Misc, All)\",\n  },\n  \"3nveejfjt6cjg\": {\n    name: \"WestendRuntimeRuntimeHoldReason\",\n    chains: \"polkadot.collectives, westend, westend.collectives\",\n    paths: [\n      \"collectives_polkadot_runtime.RuntimeHoldReason\",\n      \"westend_runtime.RuntimeHoldReason\",\n      \"collectives_westend_runtime.RuntimeHoldReason\",\n    ],\n    type: \"Enum(Preimage)\",\n  },\n  hpogi4p6q6h5: {\n    name: \"PreimagePalletHoldReason\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_preimage.pallet.HoldReason\"],\n    type: \"Enum(Preimage)\",\n  },\n  fcqan2gt5adqc: {\n    name: \"TransactionPaymentReleases\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_transaction_payment.Releases\"],\n    type: \"Enum(V1Ancient, V2)\",\n  },\n  \"1pja0i3r5p1gp\": {\n    name: \"XcmPalletQueryStatus\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_xcm.pallet.QueryStatus\"],\n    type: \"Enum(Pending, VersionNotifier, Ready)\",\n  },\n  \"543plq9vh7s3m\": {\n    name: \"XcmVersionedResponse\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.VersionedResponse\"],\n    type: \"Enum(V2, V3, V4)\",\n  },\n  \"6c90ieeim9tjd\": {\n    name: \"XcmPalletVersionMigrationStage\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_xcm.pallet.VersionMigrationStage\"],\n    type: \"Enum(MigrateSupportedVersion, MigrateVersionNotifiers, NotifyCurrentTargets, MigrateAndNotifyOldTargets)\",\n  },\n  fou8ip7o6q00t: {\n    name: \"XcmVersionedAssetId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.VersionedAssetId\"],\n    type: \"Enum(V3, V4)\",\n  },\n  \"515gfvv2a6c4o\": {\n    name: \"PreimageOldRequestStatus\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_preimage.OldRequestStatus\"],\n    type: \"Enum(Unrequested, Requested)\",\n  },\n  \"2gj0h0im54fqd\": {\n    name: \"PreimageRequestStatus\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_preimage.RequestStatus\"],\n    type: \"Enum(Unrequested, Requested)\",\n  },\n  \"926pkc9itkbdk\": {\n    name: \"ReferendaTypesCurve\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_referenda.types.Curve\"],\n    type: \"Enum(LinearDecreasing, SteppedDecreasing, Reciprocal)\",\n  },\n  \"8mdo9fqa201s6\": {\n    name: \"TreasuryPaymentState\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_treasury.PaymentState\"],\n    type: \"Enum(Pending, Attempted, Failed)\",\n  },\n  bkbo8vqdq5g5a: {\n    name: \"MultiSignature\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.MultiSignature\"],\n    type: \"Enum(Ed25519, Sr25519, Ecdsa)\",\n  },\n  \"8slcnsmtfbubd\": {\n    name: \"ExtensionsCheckMortality\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.generic.era.Era\"],\n    type: \"Enum(Immortal, Mortal1, Mortal2, Mortal3, Mortal4, Mortal5, Mortal6, Mortal7, Mortal8, Mortal9, Mortal10, Mortal11, Mortal12, Mortal13, Mortal14, Mortal15, Mortal16, Mortal17, Mortal18, Mortal19, Mortal20, Mortal21, Mortal22, Mortal23, Mortal24, Mortal25, Mortal26, Mortal27, Mortal28, Mortal29, Mortal30, Mortal31, Mortal32, Mortal33, Mortal34, Mortal35, Mortal36, Mortal37, Mortal38, Mortal39, Mortal40, Mortal41, Mortal42, Mortal43, Mortal44, Mortal45, Mortal46, Mortal47, Mortal48, Mortal49, Mortal50, Mortal51, Mortal52, Mortal53, Mortal54, Mortal55, Mortal56, Mortal57, Mortal58, Mortal59, Mortal60, Mortal61, Mortal62, Mortal63, Mortal64, Mortal65, Mortal66, Mortal67, Mortal68, Mortal69, Mortal70, Mortal71, Mortal72, Mortal73, Mortal74, Mortal75, Mortal76, Mortal77, Mortal78, Mortal79, Mortal80, Mortal81, Mortal82, Mortal83, Mortal84, Mortal85, Mortal86, Mortal87, Mortal88, Mortal89, Mortal90, Mortal91, Mortal92, Mortal93, Mortal94, Mortal95, Mortal96, Mortal97, Mortal98, Mortal99, Mortal100, Mortal101, Mortal102, Mortal103, Mortal104, Mortal105, Mortal106, Mortal107, Mortal108, Mortal109, Mortal110, Mortal111, Mortal112, Mortal113, Mortal114, Mortal115, Mortal116, Mortal117, Mortal118, Mortal119, Mortal120, Mortal121, Mortal122, Mortal123, Mortal124, Mortal125, Mortal126, Mortal127, Mortal128, Mortal129, Mortal130, Mortal131, Mortal132, Mortal133, Mortal134, Mortal135, Mortal136, Mortal137, Mortal138, Mortal139, Mortal140, Mortal141, Mortal142, Mortal143, Mortal144, Mortal145, Mortal146, Mortal147, Mortal148, Mortal149, Mortal150, Mortal151, Mortal152, Mortal153, Mortal154, Mortal155, Mortal156, Mortal157, Mortal158, Mortal159, Mortal160, Mortal161, Mortal162, Mortal163, Mortal164, Mortal165, Mortal166, Mortal167, Mortal168, Mortal169, Mortal170, Mortal171, Mortal172, Mortal173, Mortal174, Mortal175, Mortal176, Mortal177, Mortal178, Mortal179, Mortal180, Mortal181, Mortal182, Mortal183, Mortal184, Mortal185, Mortal186, Mortal187, Mortal188, Mortal189, Mortal190, Mortal191, Mortal192, Mortal193, Mortal194, Mortal195, Mortal196, Mortal197, Mortal198, Mortal199, Mortal200, Mortal201, Mortal202, Mortal203, Mortal204, Mortal205, Mortal206, Mortal207, Mortal208, Mortal209, Mortal210, Mortal211, Mortal212, Mortal213, Mortal214, Mortal215, Mortal216, Mortal217, Mortal218, Mortal219, Mortal220, Mortal221, Mortal222, Mortal223, Mortal224, Mortal225, Mortal226, Mortal227, Mortal228, Mortal229, Mortal230, Mortal231, Mortal232, Mortal233, Mortal234, Mortal235, Mortal236, Mortal237, Mortal238, Mortal239, Mortal240, Mortal241, Mortal242, Mortal243, Mortal244, Mortal245, Mortal246, Mortal247, Mortal248, Mortal249, Mortal250, Mortal251, Mortal252, Mortal253, Mortal254, Mortal255)\",\n  },\n  \"8ur8bpe8ahbdb\": {\n    name: \"TransactionValidityError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.transaction_validity.TransactionValidityError\"],\n    type: \"Enum(Invalid, Unknown)\",\n  },\n  \"9jj84pbmaraa\": {\n    name: \"TransactionValidityInvalidTransaction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.transaction_validity.InvalidTransaction\"],\n    type: \"Enum(Call, Payment, Future, Stale, BadProof, AncientBirthBlock, ExhaustsResources, Custom, BadMandatory, MandatoryValidation, BadSigner)\",\n  },\n  avhrl5td7rf4q: {\n    name: \"TransactionValidityUnknownTransaction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.transaction_validity.UnknownTransaction\"],\n    type: \"Enum(CannotLookup, NoUnsignedValidator, Custom)\",\n  },\n  cpkfkhj5jq924: {\n    name: \"TransactionValidityTransactionSource\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.transaction_validity.TransactionSource\"],\n    type: \"Enum(InBlock, Local, External)\",\n  },\n  e4o50pgs5mq4e: {\n    name: \"AssetsEvent\",\n    chains:\n      \"polkadot.assetHub, kusama.assetHub, rococo.assetHub, westend.assetHub\",\n    paths: [\"pallet_assets.pallet.Event\"],\n    type: \"Enum(Created, Issued, Transferred, Burned, TeamChanged, OwnerChanged, Frozen, Thawed, AssetFrozen, AssetThawed, AccountsDestroyed, ApprovalsDestroyed, DestructionStarted, Destroyed, ForceCreated, MetadataSet, MetadataCleared, ApprovedTransfer, ApprovalCancelled, TransferredApproved, AssetStatusChanged, AssetMinBalanceChanged, Touched, Blocked)\",\n  },\n  cenmqk68rcank: {\n    name: \"PolkadotRuntimeEvent\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.RuntimeEvent\"],\n    type: \"Enum(System, Scheduler, Preimage, Indices, Balances, TransactionPayment, Staking, Offences, Session, Grandpa, ImOnline, Treasury, ConvictionVoting, Referenda, Whitelist, Claims, Vesting, Utility, Identity, Proxy, Multisig, Bounties, ChildBounties, ElectionProviderMultiPhase, VoterList, NominationPools, FastUnstake, ParaInclusion, Paras, Hrmp, ParasDisputes, Registrar, Slots, Auctions, Crowdloan, StateTrieMigration, XcmPallet, MessageQueue, AssetRate)\",\n  },\n  \"88qf3i6ugbvsp\": {\n    name: \"IndicesEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_indices.pallet.Event\"],\n    type: \"Enum(IndexAssigned, IndexFreed, IndexFrozen)\",\n  },\n  \"3bd4nvc4e2g3p\": {\n    name: \"StakingEvent\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_staking.pallet.pallet.Event\"],\n    type: \"Enum(EraPaid, Rewarded, Slashed, SlashReported, OldSlashingReportDiscarded, StakersElected, Bonded, Unbonded, Withdrawn, Kicked, StakingElectionFailed, Chilled, PayoutStarted, ValidatorPrefsSet, SnapshotVotersSizeExceeded, SnapshotTargetsSizeExceeded, ForceEra, ControllerBatchDeprecated)\",\n  },\n  \"4peoofcn0loqr\": {\n    name: \"StakingRewardDestination\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_staking.RewardDestination\"],\n    type: \"Enum(Staked, Stash, Controller, Account, None)\",\n  },\n  bs10onqorvq4b: {\n    name: \"StakingForcing\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_staking.Forcing\"],\n    type: \"Enum(NotForcing, ForceNew, ForceNone, ForceAlways)\",\n  },\n  \"1tac42poi01n8\": {\n    name: \"OffencesEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_offences.pallet.Event\"],\n    type: \"Enum(Offence)\",\n  },\n  cg9t1ptkdnbi3: {\n    name: \"GrandpaEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_grandpa.pallet.Event\"],\n    type: \"Enum(NewAuthorities, Paused, Resumed)\",\n  },\n  \"9jqrili6gan6u\": {\n    name: \"ImOnlineEvent\",\n    chains: \"polkadot, kusama\",\n    paths: [\n      \"polkadot_runtime.pallet_im_online.pallet.Event\",\n      \"pallet_im_online.pallet.Event\",\n    ],\n    type: \"Enum(HeartbeatReceived, AllGood, SomeOffline)\",\n  },\n  ajkhn97prklo5: {\n    name: \"ConvictionVotingEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_conviction_voting.pallet.Event\"],\n    type: \"Enum(Delegated, Undelegated)\",\n  },\n  \"60a08att731k3\": {\n    name: \"PolkadotRuntimeRuntimeCall\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.RuntimeCall\"],\n    type: \"Enum(System, Scheduler, Preimage, Babe, Timestamp, Indices, Balances, Staking, Session, Grandpa, Treasury, ConvictionVoting, Referenda, Whitelist, Claims, Vesting, Utility, Identity, Proxy, Multisig, Bounties, ChildBounties, ElectionProviderMultiPhase, VoterList, NominationPools, FastUnstake, Configuration, ParasShared, ParaInclusion, ParaInherent, Paras, Initializer, Hrmp, ParasDisputes, ParasSlashing, Registrar, Slots, Auctions, Crowdloan, StateTrieMigration, XcmPallet, MessageQueue, AssetRate, Beefy)\",\n  },\n  ek17d55ubjjm9: {\n    name: \"BabeDigestsNextConfigDescriptor\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"sp_consensus_babe.digests.NextConfigDescriptor\"],\n    type: \"Enum(V1)\",\n  },\n  \"3g7a8g60ho721\": {\n    name: \"BabeAllowedSlots\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"sp_consensus_babe.AllowedSlots\"],\n    type: \"Enum(PrimarySlots, PrimaryAndSecondaryPlainSlots, PrimaryAndSecondaryVRFSlots)\",\n  },\n  fms5l9j358vie: {\n    name: \"StakingPalletConfigOpBig\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\n      \"pallet_staking.pallet.pallet.ConfigOp\",\n      \"pallet_nomination_pools.ConfigOp\",\n    ],\n    type: \"Enum(Noop, Set, Remove)\",\n  },\n  bb454pgf9ofrq: {\n    name: \"StakingPalletConfigOp\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\n      \"pallet_staking.pallet.pallet.ConfigOp\",\n      \"pallet_nomination_pools.ConfigOp\",\n    ],\n    type: \"Enum(Noop, Set, Remove)\",\n  },\n  brvqfk00lp42n: {\n    name: \"GrandpaEquivocation\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"sp_consensus_grandpa.Equivocation\"],\n    type: \"Enum(Prevote, Precommit)\",\n  },\n  cee77qkk3c81t: {\n    name: \"ConvictionVotingVoteAccountVote\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_conviction_voting.vote.AccountVote\"],\n    type: \"Enum(Standard, Split, SplitAbstain)\",\n  },\n  \"85ca14rjo42j5\": {\n    name: \"VotingConviction\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_conviction_voting.conviction.Conviction\"],\n    type: \"Enum(None, Locked1x, Locked2x, Locked3x, Locked4x, Locked5x, Locked6x)\",\n  },\n  bnvffgg4ckmsj: {\n    name: \"PolkadotRuntimeOriginCaller\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.OriginCaller\"],\n    type: \"Enum(system, Origins, ParachainsOrigin, XcmPallet, Void)\",\n  },\n  c0rsdcbsdt7kf: {\n    name: \"GovernanceOrigin\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.governance.origins.pallet_custom_origins.Origin\"],\n    type: \"Enum(StakingAdmin, Treasurer, FellowshipAdmin, GeneralAdmin, AuctionAdmin, LeaseAdmin, ReferendumCanceller, ReferendumKiller, SmallTipper, BigTipper, SmallSpender, MediumSpender, BigSpender, WhitelistedCaller, WishForChange)\",\n  },\n  \"49em457ob9ou0\": {\n    name: \"ParachainsOrigin\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.origin.pallet.Origin\"],\n    type: \"Enum(Parachain)\",\n  },\n  \"9lvi13skegcil\": {\n    name: \"ClaimsStatementKind\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"polkadot_runtime_common.claims.StatementKind\"],\n    type: \"Enum(Regular, Saft)\",\n  },\n  \"629bfqn3u6tle\": {\n    name: \"IdentityData\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_identity.types.Data\"],\n    type: \"Enum(None, Raw0, Raw1, Raw2, Raw3, Raw4, Raw5, Raw6, Raw7, Raw8, Raw9, Raw10, Raw11, Raw12, Raw13, Raw14, Raw15, Raw16, Raw17, Raw18, Raw19, Raw20, Raw21, Raw22, Raw23, Raw24, Raw25, Raw26, Raw27, Raw28, Raw29, Raw30, Raw31, Raw32, BlakeTwo256, Sha256, Keccak256, ShaThree256)\",\n  },\n  \"7ujvudkvg12so\": {\n    name: \"IdentityJudgement\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_identity.types.Judgement\"],\n    type: \"Enum(Unknown, FeePaid, Reasonable, KnownGood, OutOfDate, LowQuality, Erroneous)\",\n  },\n  \"3tnqcv58l4e62\": {\n    name: \"ProxyType\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.ProxyType\"],\n    type: \"Enum(Any, NonTransfer, Governance, Staking, IdentityJudgement, CancelProxy, Auction, NominationPools)\",\n  },\n  \"2bvq1blgrln1s\": {\n    name: \"NominationPoolsBondExtra\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.BondExtra\"],\n    type: \"Enum(FreeBalance, Rewards)\",\n  },\n  \"22g1a3o3q475f\": {\n    name: \"NominationPoolsPoolState\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.PoolState\"],\n    type: \"Enum(Open, Blocked, Destroying)\",\n  },\n  \"5tbcfetjk0h9h\": {\n    name: \"NominationPoolsConfigOp\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.ConfigOp\"],\n    type: \"Enum(Noop, Set, Remove)\",\n  },\n  \"8g50cqebfncn4\": {\n    name: \"NominationPoolsClaimPermission\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.ClaimPermission\"],\n    type: \"Enum(Permissioned, PermissionlessCompound, PermissionlessWithdraw, PermissionlessAll)\",\n  },\n  \"1lanl0ouai2l7\": {\n    name: \"NominationPoolsCommissionClaimPermission\",\n    chains: \"polkadot, westend\",\n    paths: [\"pallet_nomination_pools.CommissionClaimPermission\"],\n    type: \"Enum(Permissionless, Account)\",\n  },\n  \"9fihu1euvgfa\": {\n    name: \"PolkadotPrimitivesV6ExecutorParamsExecutorParam\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.executor_params.ExecutorParam\",\n      \"polkadot_primitives.v7.executor_params.ExecutorParam\",\n    ],\n    type: \"Enum(MaxMemoryPages, StackLogicalMax, StackNativeMax, PrecheckingMaxMemory, PvfPrepTimeout, PvfExecTimeout, WasmExtBulkMemory)\",\n  },\n  c7d5cscq9c6gi: {\n    name: \"PolkadotPrimitivesV6PvfPrepKind\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.PvfPrepKind\",\n      \"polkadot_primitives.v7.PvfPrepKind\",\n    ],\n    type: \"Enum(Precheck, Prepare)\",\n  },\n  \"4k4r9im11cdan\": {\n    name: \"PvfExecKind\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.PvfExecKind\",\n      \"polkadot_primitives.v6.PvfExecTimeoutKind\",\n      \"polkadot_primitives.v7.PvfExecKind\",\n    ],\n    type: \"Enum(Backing, Approval)\",\n  },\n  fqkhvelo2q77o: {\n    name: \"ValidityAttestation\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.ValidityAttestation\",\n      \"polkadot_primitives.v7.ValidityAttestation\",\n    ],\n    type: \"Enum(Implicit, Explicit)\",\n  },\n  bs56nuk6pe5bp: {\n    name: \"PolkadotPrimitivesV6DisputeStatement\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.DisputeStatement\",\n      \"polkadot_primitives.v7.DisputeStatement\",\n    ],\n    type: \"Enum(Valid, Invalid)\",\n  },\n  bta4mfoh73fpt: {\n    name: \"PolkadotPrimitivesV6ValidDisputeStatementKind\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.ValidDisputeStatementKind\",\n      \"polkadot_primitives.v7.ValidDisputeStatementKind\",\n    ],\n    type: \"Enum(Explicit, BackingSeconded, BackingValid, ApprovalChecking, ApprovalCheckingMultipleCandidates)\",\n  },\n  f9rpgkuafvsb4: {\n    name: \"InvalidDisputeStatementKind\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.InvalidDisputeStatementKind\",\n      \"polkadot_primitives.v7.InvalidDisputeStatementKind\",\n    ],\n    type: \"Enum(Explicit)\",\n  },\n  \"8jjr2rgj6aa2v\": {\n    name: \"SlashingOffenceKind\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.slashing.SlashingOffenceKind\",\n      \"polkadot_primitives.v7.slashing.SlashingOffenceKind\",\n    ],\n    type: \"Enum(ForInvalid, AgainstValid)\",\n  },\n  d7em8997pfm92: {\n    name: \"MultiSigner\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"sp_runtime.MultiSigner\"],\n    type: \"Enum(Ed25519, Sr25519, Ecdsa)\",\n  },\n  \"4sjnuvedkqa2r\": {\n    name: \"ParachainsInclusionAggregateMessageOrigin\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.inclusion.AggregateMessageOrigin\"],\n    type: \"Enum(Ump)\",\n  },\n  \"29a9v38btsv3g\": {\n    name: \"ParachainsInclusionUmpQueueId\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.inclusion.UmpQueueId\"],\n    type: \"Enum(Para)\",\n  },\n  \"9iria2mpol0si\": {\n    name: \"WhitelistEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_whitelist.pallet.Event\"],\n    type: \"Enum(CallWhitelisted, WhitelistedCallRemoved, WhitelistedCallDispatched)\",\n  },\n  \"2v2nj97k9o9e\": {\n    name: \"CommonClaimsEvent\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"polkadot_runtime_common.claims.pallet.Event\"],\n    type: \"Enum(Claimed)\",\n  },\n  d226b5du5oie9: {\n    name: \"VestingEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_vesting.pallet.Event\"],\n    type: \"Enum(VestingUpdated, VestingCompleted)\",\n  },\n  \"11i3h84sudutq\": {\n    name: \"ProxyEvent\",\n    chains: \"polkadot\",\n    paths: [\"pallet_proxy.pallet.Event\"],\n    type: \"Enum(ProxyExecuted, PureCreated, Announced, ProxyAdded, ProxyRemoved)\",\n  },\n  ei6k1tdcht3q: {\n    name: \"BountiesEvent\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"pallet_bounties.pallet.Event\"],\n    type: \"Enum(BountyProposed, BountyRejected, BountyBecameActive, BountyAwarded, BountyClaimed, BountyCanceled, BountyExtended, BountyApproved, CuratorProposed, CuratorUnassigned, CuratorAccepted)\",\n  },\n  a5gvqckojmehj: {\n    name: \"ChildBountiesEvent\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"pallet_child_bounties.pallet.Event\"],\n    type: \"Enum(Added, Awarded, Claimed, Canceled)\",\n  },\n  c5529239bmt3g: {\n    name: \"ElectionProviderMultiPhaseEvent\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_election_provider_multi_phase.pallet.Event\"],\n    type: \"Enum(SolutionStored, ElectionFinalized, ElectionFailed, Rewarded, Slashed, PhaseTransitioned)\",\n  },\n  htopdh9noje5: {\n    name: \"ElectionProviderMultiPhaseElectionCompute\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_election_provider_multi_phase.ElectionCompute\"],\n    type: \"Enum(OnChain, Signed, Unsigned, Fallback, Emergency)\",\n  },\n  \"1ra0103q36u4i\": {\n    name: \"ElectionProviderMultiPhasePhase\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_election_provider_multi_phase.Phase\"],\n    type: \"Enum(Off, Signed, Unsigned, Emergency)\",\n  },\n  \"2qbmdeolj2cue\": {\n    name: \"BagsListEvent\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_bags_list.pallet.Event\"],\n    type: \"Enum(Rebagged, ScoreUpdated)\",\n  },\n  \"14qmevhulqskl\": {\n    name: \"NominationPoolsEvent\",\n    chains: \"polkadot, westend\",\n    paths: [\"pallet_nomination_pools.pallet.Event\"],\n    type: \"Enum(Created, Bonded, PaidOut, Unbonded, Withdrawn, Destroyed, StateChanged, MemberRemoved, RolesUpdated, PoolSlashed, UnbondingPoolSlashed, PoolCommissionUpdated, PoolMaxCommissionUpdated, PoolCommissionChangeRateUpdated, PoolCommissionClaimPermissionUpdated, PoolCommissionClaimed, MinBalanceDeficitAdjusted, MinBalanceExcessAdjusted)\",\n  },\n  dri14nid3e46g: {\n    name: \"FastUnstakeEvent\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_fast_unstake.pallet.Event\"],\n    type: \"Enum(Unstaked, Slashed, BatchChecked, BatchFinished, InternalError)\",\n  },\n  dp2d78gpqj4r6: {\n    name: \"ParachainsInclusionEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.inclusion.pallet.Event\"],\n    type: \"Enum(CandidateBacked, CandidateIncluded, CandidateTimedOut, UpwardMessagesReceived)\",\n  },\n  cb4i7efmuhik2: {\n    name: \"ParachainsParasEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.paras.pallet.Event\"],\n    type: \"Enum(CurrentCodeUpdated, CurrentHeadUpdated, CodeUpgradeScheduled, NewHeadNoted, ActionQueued, PvfCheckStarted, PvfCheckAccepted, PvfCheckRejected)\",\n  },\n  c4alvt16n58rg: {\n    name: \"ParachainsHrmpEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.hrmp.pallet.Event\"],\n    type: \"Enum(OpenChannelRequested, OpenChannelCanceled, OpenChannelAccepted, ChannelClosed, HrmpChannelForceOpened, HrmpSystemChannelOpened, OpenChannelDepositsUpdated)\",\n  },\n  \"8vj9hqgjobpdo\": {\n    name: \"ParachainsDisputesEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.disputes.pallet.Event\"],\n    type: \"Enum(DisputeInitiated, DisputeConcluded, Revert)\",\n  },\n  a2kllcmf9u10g: {\n    name: \"ParachainsDisputeLocation\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.disputes.DisputeLocation\"],\n    type: \"Enum(Local, Remote)\",\n  },\n  \"6hem0avr1eoco\": {\n    name: \"ParachainsDisputeResult\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.disputes.DisputeResult\"],\n    type: \"Enum(Valid, Invalid)\",\n  },\n  \"1pil5vhej188n\": {\n    name: \"CommonParasRegistrarEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_common.paras_registrar.pallet.Event\"],\n    type: \"Enum(Registered, Deregistered, Reserved, Swapped)\",\n  },\n  fdctp8g6s725t: {\n    name: \"CommonSlotsEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_common.slots.pallet.Event\"],\n    type: \"Enum(NewLeasePeriod, Leased)\",\n  },\n  b1eprmg9d9eh2: {\n    name: \"CommonAuctionsEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_common.auctions.pallet.Event\"],\n    type: \"Enum(AuctionStarted, AuctionClosed, Reserved, Unreserved, ReserveConfiscated, BidAccepted, WinningOffset)\",\n  },\n  aoe6t9b9v4nhr: {\n    name: \"CommonCrowdloanEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_common.crowdloan.pallet.Event\"],\n    type: \"Enum(Created, Contributed, Withdrew, PartiallyRefunded, AllRefunded, Dissolved, HandleBidResult, Edited, MemoUpdated, AddedToNewRaise)\",\n  },\n  eknqsk8t6a8oo: {\n    name: \"MessageQueueEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_message_queue.pallet.Event\"],\n    type: \"Enum(ProcessingFailed, Processed, OverweightEnqueued, PageReaped)\",\n  },\n  \"9uqvk3mspevjn\": {\n    name: \"BabeDigestsPreDigest\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\"sp_consensus_babe.digests.PreDigest\"],\n    type: \"Enum(Primary, SecondaryPlain, SecondaryVRF)\",\n  },\n  c1jnealhlqk0n: {\n    name: \"WestendRuntimeRuntimeFreezeReason\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\n      \"polkadot_runtime.RuntimeFreezeReason\",\n      \"staging_kusama_runtime.RuntimeFreezeReason\",\n      \"westend_runtime.RuntimeFreezeReason\",\n    ],\n    type: \"Enum(NominationPools)\",\n  },\n  \"8b4gf7pjdvue3\": {\n    name: \"NominationPoolsPalletFreezeReason\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.pallet.FreezeReason\"],\n    type: \"Enum(PoolMinBalance)\",\n  },\n  \"66mc66cqnpat1\": {\n    name: \"GrandpaStoredState\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_grandpa.StoredState\"],\n    type: \"Enum(Live, PendingPause, Paused, PendingResume)\",\n  },\n  e5ojv0odma80: {\n    name: \"ConvictionVotingVoteVoting\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_conviction_voting.vote.Voting\"],\n    type: \"Enum(Casting, Delegating)\",\n  },\n  \"8eicfpc71dtp2\": {\n    name: \"BountiesBountyStatus\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"pallet_bounties.BountyStatus\"],\n    type: \"Enum(Proposed, Approved, Funded, CuratorProposed, Active, PendingPayout)\",\n  },\n  \"8fgf6e6g02u7k\": {\n    name: \"ChildBountyStatus\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"pallet_child_bounties.ChildBountyStatus\"],\n    type: \"Enum(Added, CuratorProposed, Active, PendingPayout)\",\n  },\n  \"5h5t0elhnbseq\": {\n    name: \"BagsListListListError\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_bags_list.list.ListError\"],\n    type: \"Enum(Duplicate, NotHeavier, NotInSameBag, NodeNotFound)\",\n  },\n  \"8s9terlv6i0tr\": {\n    name: \"NominationPoolsPalletDefensiveError\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.pallet.DefensiveError\"],\n    type: \"Enum(NotEnoughSpaceInUnbondPool, PoolNotFound, RewardPoolNotFound, SubPoolsNotFound, BondedStashKilledPrematurely)\",\n  },\n  d7hag4aqiaqqv: {\n    name: \"PolkadotRuntimeParachainsSchedulerPalletCoreOccupied\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.scheduler.pallet.CoreOccupied\"],\n    type: \"Enum(Free, Paras)\",\n  },\n  f6qqn0nd8o1nf: {\n    name: \"PolkadotRuntimeParachainsSchedulerCommonAssignment\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.scheduler.common.Assignment\"],\n    type: \"Enum(Pool, Bulk)\",\n  },\n  \"14vn72umovb89\": {\n    name: \"PolkadotRuntimeParachainsParasPvfCheckCause\",\n    chains: \"polkadot, kusama\",\n    paths: [\"polkadot_runtime_parachains.paras.PvfCheckCause\"],\n    type: \"Enum(Onboarding, Upgrade)\",\n  },\n  \"341grmvm6j3e5\": {\n    name: \"ParachainsParasParaLifecycle\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.paras.ParaLifecycle\"],\n    type: \"Enum(Onboarding, Parathread, Parachain, UpgradingParathread, DowngradingParachain, OffboardingParathread, OffboardingParachain)\",\n  },\n  \"1rjg0rh02tt4m\": {\n    name: \"CommonCrowdloanLastContribution\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_common.crowdloan.LastContribution\"],\n    type: \"Enum(Never, PreEnding, Ending)\",\n  },\n  b5fd0r2ju9g0l: {\n    name: \"CoreState\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.CoreState\",\n      \"polkadot_primitives.v7.CoreState\",\n    ],\n    type: \"Enum(Occupied, Scheduled, Free)\",\n  },\n  \"4vbt6tkj8bvqs\": {\n    name: \"OccupiedCoreAssumption\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.OccupiedCoreAssumption\",\n      \"polkadot_primitives.v7.OccupiedCoreAssumption\",\n    ],\n    type: \"Enum(Included, TimedOut, Free)\",\n  },\n  \"129huic8ces20\": {\n    name: \"CandidateEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.CandidateEvent\",\n      \"polkadot_primitives.v7.CandidateEvent\",\n    ],\n    type: \"Enum(CandidateBacked, CandidateIncluded, CandidateTimedOut)\",\n  },\n  \"6rjjsd07rc200\": {\n    name: \"MmrPrimitivesError\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"sp_mmr_primitives.Error\"],\n    type: \"Enum(InvalidNumericOp, Push, GetRoot, Commit, GenerateProof, Verify, LeafNotFound, PalletNotIncluded, InvalidLeafIndex, InvalidBestKnownBlock)\",\n  },\n  \"5lqhrmabiigof\": {\n    name: \"RuntimeError\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.RuntimeError\"],\n    type: \"Enum(System, Scheduler, Preimage, Babe, Indices, Balances, Staking, Session, Grandpa, Treasury, ConvictionVoting, Referenda, Whitelist, Claims, Vesting, Utility, Identity, Proxy, Multisig, Bounties, ChildBounties, ElectionProviderMultiPhase, VoterList, NominationPools, FastUnstake, Configuration, ParaInclusion, ParaInherent, Paras, Hrmp, ParasDisputes, ParasSlashing, Registrar, Slots, Auctions, Crowdloan, StateTrieMigration, XcmPallet, MessageQueue, AssetRate, Beefy)\",\n  },\n  \"86spl6bcfm5it\": {\n    name: \"KsmXcmV3Junctions\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.junctions.Junctions\"],\n    type: \"Enum(Here, X1, X2, X3, X4, X5, X6, X7, X8)\",\n  },\n  aqrmqn3umgltq: {\n    name: \"KsmXcmV3Junction\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.junction.Junction\"],\n    type: \"Enum(Parachain, AccountId32, AccountIndex64, AccountKey20, PalletInstance, GeneralIndex, GeneralKey, OnlyChild, Plurality, GlobalConsensus)\",\n  },\n  \"4k01tahcim329\": {\n    name: \"KsmXcmV3JunctionNetworkId\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.junction.NetworkId\"],\n    type: \"Enum(ByGenesis, ByFork, Polkadot, Kusama, Westend, Rococo, Wococo, Ethereum, BitcoinCore, BitcoinCash)\",\n  },\n  c00osfu517iss: {\n    name: \"KsmXcmV3MultiassetAssetId\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.multiasset.AssetId\"],\n    type: \"Enum(Concrete, Abstract)\",\n  },\n  dbg08q7edq40c: {\n    name: \"XcmVersionedMultiLocation\",\n    chains: \"kusama\",\n    paths: [\"xcm.VersionedMultiLocation\"],\n    type: \"Enum(V2, V3)\",\n  },\n  \"3f4te0335d8h1\": {\n    name: \"WestendRuntimeGovernanceOriginsPalletCustomOriginsOrigin\",\n    chains: \"kusama, rococo, westend\",\n    paths: [\n      \"staging_kusama_runtime.governance.origins.pallet_custom_origins.Origin\",\n      \"rococo_runtime.governance.origins.pallet_custom_origins.Origin\",\n      \"westend_runtime.governance.origins.pallet_custom_origins.Origin\",\n    ],\n    type: \"Enum(StakingAdmin, Treasurer, FellowshipAdmin, GeneralAdmin, AuctionAdmin, LeaseAdmin, ReferendumCanceller, ReferendumKiller, SmallTipper, BigTipper, SmallSpender, MediumSpender, BigSpender, WhitelistedCaller, FellowshipInitiates, Fellows, FellowshipExperts, FellowshipMasters, Fellowship1Dan, Fellowship2Dan, Fellowship3Dan, Fellowship4Dan, Fellowship5Dan, Fellowship6Dan, Fellowship7Dan, Fellowship8Dan, Fellowship9Dan)\",\n  },\n  \"1r9hjo7723qso\": {\n    name: \"KsmXcmPalletOrigin\",\n    chains: \"kusama\",\n    paths: [\"pallet_xcm.pallet.Origin\"],\n    type: \"Enum(Xcm, Response)\",\n  },\n  apijri6pqtqte: {\n    name: \"IdentityField\",\n    chains: \"kusama\",\n    paths: [\"pallet_identity.simple.IdentityField\"],\n    type: \"Enum(Display, Legal, Web, Riot, Email, PgpFingerprint, Image, Twitter)\",\n  },\n  \"2s1qfdh76bati\": {\n    name: \"PolkadotPrimitivesV5ExecutorParam\",\n    chains: \"kusama\",\n    paths: [\"polkadot_primitives.v6.executor_params.ExecutorParam\"],\n    type: \"Enum(MaxMemoryPages, StackLogicalMax, StackNativeMax, PrecheckingMaxMemory, PvfPrepTimeout, PvfExecTimeout, WasmExtBulkMemory)\",\n  },\n  \"1p5n9bbuf71e9\": {\n    name: \"PolkadotPrimitivesV5PvfPrepTimeoutKind\",\n    chains: \"kusama\",\n    paths: [\"polkadot_primitives.v6.PvfPrepTimeoutKind\"],\n    type: \"Enum(Precheck, Lenient)\",\n  },\n  b7nns1qbu48af: {\n    name: \"PolkadotPrimitivesV5DisputeStatement\",\n    chains: \"kusama\",\n    paths: [\"polkadot_primitives.v6.DisputeStatement\"],\n    type: \"Enum(Valid, Invalid)\",\n  },\n  e33c1balm2hk9: {\n    name: \"PolkadotPrimitivesV5ValidDisputeStatementKind\",\n    chains: \"kusama\",\n    paths: [\"polkadot_primitives.v6.ValidDisputeStatementKind\"],\n    type: \"Enum(Explicit, BackingSeconded, BackingValid, ApprovalChecking)\",\n  },\n  \"5f1g9rtdd19nm\": {\n    name: \"KsmXcmVersionedXcm\",\n    chains: \"kusama\",\n    paths: [\"xcm.VersionedXcm\"],\n    type: \"Enum(V2, V3)\",\n  },\n  css00hl25cgl4: {\n    name: \"KsmXcmV3Instruction\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.Instruction\"],\n    type: \"Enum(WithdrawAsset, ReserveAssetDeposited, ReceiveTeleportedAsset, QueryResponse, TransferAsset, TransferReserveAsset, Transact, HrmpNewChannelOpenRequest, HrmpChannelAccepted, HrmpChannelClosing, ClearOrigin, DescendOrigin, ReportError, DepositAsset, DepositReserveAsset, ExchangeAsset, InitiateReserveWithdraw, InitiateTeleport, ReportHolding, BuyExecution, RefundSurplus, SetErrorHandler, SetAppendix, ClearError, ClaimAsset, Trap, SubscribeVersion, UnsubscribeVersion, BurnAsset, ExpectAsset, ExpectOrigin, ExpectError, ExpectTransactStatus, QueryPallet, ExpectPallet, ReportTransactStatus, ClearTransactStatus, UniversalOrigin, ExportMessage, LockAsset, UnlockAsset, NoteUnlockable, RequestUnlock, SetFeesMode, SetTopic, ClearTopic, AliasOrigin, UnpaidExecution)\",\n  },\n  \"4e56rm9p07o27\": {\n    name: \"KsmXcmV3Response\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.Response\"],\n    type: \"Enum(Null, Assets, ExecutionResult, Version, PalletsInfo, DispatchResult)\",\n  },\n  \"9enf1rh4u3kii\": {\n    name: \"XcmV3MultiAssetFilter\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.multiasset.MultiAssetFilter\"],\n    type: \"Enum(Definite, Wild)\",\n  },\n  dhb8s9d0ie70f: {\n    name: \"XcmV3WildMultiAsset\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.multiasset.WildMultiAsset\"],\n    type: \"Enum(All, AllOf, AllCounted, AllOfCounted)\",\n  },\n  k93katrmbiat: {\n    name: \"XcmVersionedMultiAssets\",\n    chains: \"kusama\",\n    paths: [\"xcm.VersionedMultiAssets\"],\n    type: \"Enum(V2, V3)\",\n  },\n  a4b928jbpau7j: {\n    name: \"RecoveryEvent\",\n    chains: \"kusama, rococo, westend\",\n    paths: [\"pallet_recovery.pallet.Event\"],\n    type: \"Enum(RecoveryCreated, RecoveryInitiated, RecoveryVouched, RecoveryClosed, AccountRecovered, RecoveryRemoved)\",\n  },\n  b01fvb3ofrhi8: {\n    name: \"XcmV3TraitsOutcome\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.traits.Outcome\"],\n    type: \"Enum(Complete, Incomplete, Error)\",\n  },\n  arof15is9j858: {\n    name: \"KsmBabeDigestsPreDigest\",\n    chains: \"kusama\",\n    paths: [\"sp_consensus_babe.digests.PreDigest\"],\n    type: \"Enum(Primary, SecondaryPlain, SecondaryVRF)\",\n  },\n  b19964q7gq7o9: {\n    name: \"PolkadotPrimitivesV5CoreOccupied\",\n    chains: \"kusama\",\n    paths: [\"polkadot_runtime_parachains.scheduler.pallet.CoreOccupied\"],\n    type: \"Enum(Free, Paras)\",\n  },\n  \"9us7218h9qeio\": {\n    name: \"KsmXcmPalletQueryStatus\",\n    chains: \"kusama\",\n    paths: [\"pallet_xcm.pallet.QueryStatus\"],\n    type: \"Enum(Pending, VersionNotifier, Ready)\",\n  },\n  fjsumieiq38rh: {\n    name: \"KsmXcmVersionedResponse\",\n    chains: \"kusama\",\n    paths: [\"xcm.VersionedResponse\"],\n    type: \"Enum(V2, V3)\",\n  },\n  \"9j0cetcqgjtaf\": {\n    name: \"KsmXcmVersionedAssetId\",\n    chains: \"kusama\",\n    paths: [\"xcm.VersionedAssetId\"],\n    type: \"Enum(V3)\",\n  },\n  j50joavafcok: {\n    name: \"WestendRuntimeOriginCaller\",\n    chains: \"rococo, westend\",\n    paths: [\"rococo_runtime.OriginCaller\", \"westend_runtime.OriginCaller\"],\n    type: \"Enum(system, Origins, ParachainsOrigin, XcmPallet, Void)\",\n  },\n  cgoc620vdl0ci: {\n    name: \"BrokerCoretimeInterfaceCoreAssignment\",\n    chains: \"rococo, westend\",\n    paths: [\"pallet_broker.coretime_interface.CoreAssignment\"],\n    type: \"Enum(Idle, Pool, Task)\",\n  },\n  \"910lmkjcsvii\": {\n    name: \"PolkadotRuntimeCommonAssignedSlotsSlotLeasePeriodStart\",\n    chains: \"rococo, westend\",\n    paths: [\"polkadot_runtime_common.assigned_slots.SlotLeasePeriodStart\"],\n    type: \"Enum(Current, Next)\",\n  },\n  \"9ct52rvkkel07\": {\n    name: \"PolkadotRuntimeParachainsAssignerOnDemandEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.assigner_on_demand.pallet.Event\"],\n    type: \"Enum(OnDemandOrderPlaced, SpotTrafficSet)\",\n  },\n  \"7t5v4k056sf3d\": {\n    name: \"PolkadotRuntimeParachainsCoretimeEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.coretime.pallet.Event\"],\n    type: \"Enum(RevenueInfoRequested, CoreAssigned)\",\n  },\n  \"43e3ummb3h5dn\": {\n    name: \"PolkadotRuntimeCommonIdentityMigratorEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"polkadot_runtime_common.identity_migrator.pallet.Event\"],\n    type: \"Enum(IdentityReaped, DepositUpdated)\",\n  },\n  cn24k411b4s6t: {\n    name: \"PolkadotRuntimeCommonAssignedSlotsEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"polkadot_runtime_common.assigned_slots.pallet.Event\"],\n    type: \"Enum(PermanentSlotAssigned, TemporarySlotAssigned, MaxPermanentSlotsChanged, MaxTemporarySlotsChanged)\",\n  },\n  tofo38uukr3h: {\n    name: \"RootTestingEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"pallet_root_testing.pallet.Event\"],\n    type: \"Enum(DefensiveTestCall)\",\n  },\n  \"346qm7n7jcer7\": {\n    name: \"SudoEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"pallet_sudo.pallet.Event\"],\n    type: \"Enum(Sudid, KeyChanged, KeyRemoved, SudoAsDone)\",\n  },\n  \"2pnuv6i9ju403\": {\n    name: \"ReferendaTypesReferendumInfo\",\n    chains: \"rococo, westend\",\n    paths: [\"pallet_referenda.types.ReferendumInfo\"],\n    type: \"Enum(Ongoing, Approved, Rejected, Cancelled, TimedOut, Killed)\",\n  },\n  fbiij71gdkvth: {\n    name: \"WestendRuntimeProxyType\",\n    chains: \"westend\",\n    paths: [\"westend_runtime.ProxyType\"],\n    type: \"Enum(Any, NonTransfer, Governance, Staking, SudoBalances, IdentityJudgement, CancelProxy, Auction, NominationPools)\",\n  },\n}\n\nconst knownTypes: KnownTypes = mapObject(\n  knownTypesRepository,\n  (entry: RepositoryEntry) => (typeof entry === \"string\" ? entry : entry.name),\n)\nexport default knownTypes\n","import type { V14, V15 } from \"@polkadot-api/substrate-bindings\"\n\nexport function applyWhitelist(\n  metadata: V14 | V15,\n  whitelist: string[] | null,\n): V14 | V15 {\n  if (!whitelist) return metadata\n\n  const allApis = whitelist.includes(\"api.*\")\n  const fullApiRegex = /^api\\.(\\w+)\\.\\*$/\n  const fullApiIncluded = whitelist\n    .map((w) => fullApiRegex.exec(w)?.[1])\n    .filter((v) => !!v)\n  const apis = allApis\n    ? metadata.apis\n    : metadata.apis\n        .map((api) => {\n          if (fullApiIncluded.includes(api.name)) return api\n\n          return {\n            ...api,\n            methods: api.methods.filter((method) =>\n              whitelist.includes(`api.${api.name}.${method.name}`),\n            ),\n          }\n        })\n        .filter((api) => api.methods.length > 0)\n\n  const fullPalletRegex = /^\\*\\.(\\w+)$/\n  const fullPallets = whitelist\n    .map((w) => fullPalletRegex.exec(w)?.[1])\n    .filter((v) => !!v)\n\n  const filterEnum = (\n    whitelistPrefix: string,\n    palletName: string,\n    lookupIdx: number | undefined,\n  ) => {\n    if (!lookupIdx) return lookupIdx\n    if (\n      whitelist.includes(`${whitelistPrefix}.*`) ||\n      whitelist.includes(`${whitelistPrefix}.${palletName}.*`)\n    )\n      return lookupIdx\n\n    const def = metadata.lookup[lookupIdx].def\n    if (def.tag !== \"variant\") throw new Error(whitelistPrefix + \" not an enum\")\n\n    const prefixNotIncluded = whitelist.every(\n      (e) => !e.startsWith(`${whitelistPrefix}.${palletName}`),\n    )\n\n    const value = prefixNotIncluded\n      ? []\n      : def.value.filter(({ name }) =>\n          whitelist.includes(`${whitelistPrefix}.${palletName}.${name}`),\n        )\n\n    const idx = metadata.lookup.length\n    metadata.lookup.push({\n      ...metadata.lookup[lookupIdx],\n      id: idx,\n      def: {\n        tag: \"variant\",\n        value,\n      },\n    })\n    return idx\n  }\n  const getEnumLength = (lookupIdx: number | undefined) => {\n    if (!lookupIdx) return 0\n    const def = metadata.lookup[lookupIdx].def\n    if (def.tag !== \"variant\") throw new Error(\"not an enum\")\n    return def.value.length\n  }\n\n  const filterList = <T extends { name: string }>(\n    whitelistPrefix: string,\n    palletName: string,\n    list: Array<T>,\n  ) => {\n    if (\n      whitelist.includes(`${whitelistPrefix}.*`) ||\n      whitelist.includes(`${whitelistPrefix}.${palletName}.*`)\n    )\n      return list\n\n    const prefixNotIncluded = whitelist.every(\n      (e) => !e.startsWith(`${whitelistPrefix}.${palletName}`),\n    )\n    if (prefixNotIncluded) return []\n\n    return list.filter(({ name }) =>\n      whitelist.includes(`${whitelistPrefix}.${palletName}.${name}`),\n    )\n  }\n\n  const pallets = metadata.pallets\n    .map((pallet) => {\n      if (fullPallets.includes(pallet.name)) return pallet\n\n      return {\n        ...pallet,\n        calls: filterEnum(\"tx\", pallet.name, pallet.calls),\n        constants: filterList(\"const\", pallet.name, pallet.constants),\n        errors: filterEnum(\"error\", pallet.name, pallet.errors),\n        events: filterEnum(\"event\", pallet.name, pallet.events),\n        storage: pallet.storage\n          ? {\n              ...pallet.storage,\n              items: filterList(\"query\", pallet.name, pallet.storage.items),\n            }\n          : undefined,\n      }\n    })\n    .filter(\n      (pallet) =>\n        getEnumLength(pallet.calls) +\n        pallet.constants.length +\n        getEnumLength(pallet.errors) +\n        getEnumLength(pallet.events) +\n        (pallet.storage?.items.length ?? 0),\n    )\n\n  return {\n    ...metadata,\n    apis,\n    pallets,\n  }\n}\n"],"mappings":"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","names":["knownTypes","checksum","name","variable","anonymize","value","inner","import_metadata_builders","knownTypes","import_metadata_builders","import_utils","import_metadata_builders","import_metadata_builders","import_utils","import_utils","commonTrees"]}