{"version":3,"sources":["../../src/index.ts","../../src/types-builder.ts","../../src/with-cache.ts","../../src/get-new-types.ts","../../src/generate-descriptors.ts","../../src/generate-multiple-descriptors.ts","../../src/generate-types.ts","../../src/get-used-checksums.ts","../../src/known-types.ts","../../src/whitelist.ts"],"sourcesContent":["export * from \"./types-builder\"\nexport * from \"./get-new-types\"\nexport * from \"./generate-descriptors\"\nexport * from \"./generate-multiple-descriptors\"\nexport { knownTypesRepository } from \"./known-types\"\n","import { StringRecord, V14, V15 } from \"@polkadot-api/substrate-bindings\"\nimport {\n  LookupEntry,\n  getLookupFn,\n  getChecksumBuilder,\n  TupleVar,\n  StructVar,\n  ArrayVar,\n} from \"@polkadot-api/metadata-builders\"\nimport { withCache } from \"./with-cache\"\nimport { mapObject } from \"@polkadot-api/utils\"\n\ntype MetadataPrimitives =\n  | \"bool\"\n  | \"char\"\n  | \"str\"\n  | \"u8\"\n  | \"u16\"\n  | \"u32\"\n  | \"u64\"\n  | \"u128\"\n  | \"u256\"\n  | \"i8\"\n  | \"i16\"\n  | \"i32\"\n  | \"i64\"\n  | \"i128\"\n  | \"i256\"\n\nexport const primitiveTypes: Record<\n  MetadataPrimitives | \"compactNumber\" | \"compactBn\",\n  string\n> = {\n  bool: \"boolean\",\n  char: \"string\",\n  str: \"string\",\n  u8: \"number\",\n  u16: \"number\",\n  u32: \"number\",\n  u64: \"bigint\",\n  u128: \"bigint\",\n  u256: \"bigint\",\n  i8: \"number\",\n  i16: \"number\",\n  i32: \"number\",\n  i64: \"bigint\",\n  i128: \"bigint\",\n  i256: \"bigint\",\n  compactNumber: \"number\",\n  compactBn: \"bigint\",\n}\n\nexport interface Variable {\n  name: string\n\n  checksum: string\n  type: string\n}\n\nexport interface CodeDeclarations {\n  imports: Set<string>\n  variables: Map<string, Variable>\n  takenNames: Set<string>\n}\n\nexport const defaultDeclarations = (): CodeDeclarations => ({\n  imports: new Set(),\n  variables: new Map(),\n  takenNames: new Set(),\n})\n\ninterface TypeForEntry {\n  type: string\n  import?: \"globalTypes\" | \"client\"\n}\nconst typesImport = (varName: string): TypeForEntry => ({\n  type: varName,\n  import: \"globalTypes\",\n})\nconst clientImport = (varName: string): TypeForEntry => ({\n  type: varName,\n  import: \"client\",\n})\n\nconst _buildSyntax = (\n  input: LookupEntry,\n  cache: Map<number, TypeForEntry>,\n  stack: Set<number>,\n  declarations: CodeDeclarations,\n  getChecksum: (id: number | StructVar | TupleVar | ArrayVar) => string | null,\n  knownTypes: Record<string, string>,\n): TypeForEntry => {\n  const addImport = (entry: TypeForEntry) => {\n    if (entry.import === \"client\") declarations.imports.add(entry.type)\n  }\n\n  const getName = (checksum: string) => {\n    if (!knownTypes[checksum]) return `I${checksum}`\n\n    const originalName = knownTypes[checksum]\n    let name = originalName\n    let i = 1\n    while (declarations.takenNames.has(name)) name = originalName + i++\n\n    declarations.takenNames.add(name)\n    return name\n  }\n\n  const anonymize = (varName: string) => {\n    if (!varName.startsWith(\"I\")) return varName\n    const checksum = varName.slice(1)\n    return declarations.variables.has(checksum)\n      ? `Anonymize<${varName}>`\n      : varName\n  }\n\n  if (input.type === \"primitive\") return { type: primitiveTypes[input.value] }\n  if (input.type === \"void\") return { type: \"undefined\" }\n  if (input.type === \"AccountId20\") return clientImport(\"HexString\")\n  if (input.type === \"AccountId32\") return clientImport(\"SS58String\")\n  if (input.type === \"compact\")\n    return {\n      type: input.isBig\n        ? \"bigint\"\n        : input.isBig === null\n          ? \"number | bigint\"\n          : \"number\",\n    }\n  if (input.type === \"bitSequence\")\n    return { type: \"{bytes: Uint8Array, bitsLen: number}\" }\n\n  if (\n    input.type === \"sequence\" &&\n    input.value.type === \"primitive\" &&\n    input.value.value === \"u8\"\n  )\n    return { type: \"Binary\" }\n\n  const checksum = getChecksum(input.id)!\n\n  // Problem: checksum WndPalletEvent = 5ofh7hnvff54m; DotPalletEvent = KsmPalletEvent = 2gc4echvba3ni\n  // declarations.variables is checksum -> Var, but now we can have two names for the same checksum\n  // currently, the second chain will reuse the first name, so ksm types will have DotPalletEvent (and KsmPalletEvent doesn't exist)\n  // TODO declarations.variables should have a way of having multiple type definitions for the same checksum\n  // TODO declarations.takenNames should be solved on `resolveConflicts` instead.\n  if (declarations.variables.has(checksum)) {\n    const entry = declarations.variables.get(checksum)!\n    return typesImport(entry.name)\n  }\n\n  const buildNextSyntax = (nextInput: LookupEntry) =>\n    buildSyntax(nextInput, cache, stack, declarations, getChecksum, knownTypes)\n\n  const buildVector = (id: string, inner: LookupEntry): TypeForEntry => {\n    const name = getName(id)\n    const variable: Variable = {\n      checksum: id,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(id, variable)\n    const innerType = buildNextSyntax(inner)\n    addImport(innerType)\n\n    variable.type = `Array<${anonymize(innerType.type)}>`\n    return typesImport(name)\n  }\n\n  const buildArray = (\n    id: string,\n    inner: LookupEntry,\n    length: number,\n  ): TypeForEntry => {\n    const name = getName(id)\n    const variable: Variable = {\n      checksum: id,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(id, variable)\n\n    if (inner.type === \"primitive\" && inner.value === \"u8\") {\n      variable.type = `FixedSizeBinary<${length}>`\n    } else {\n      const innerType = buildNextSyntax(inner)\n      addImport(innerType)\n      variable.type = `FixedSizeArray<${length}, ${anonymize(innerType.type)}>`\n    }\n\n    return typesImport(name)\n  }\n\n  const buildTuple = (id: string, value: LookupEntry[]): TypeForEntry => {\n    const name = getName(id)\n    const variable: Variable = {\n      checksum: id,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(id, variable)\n    const innerTypes = value.map(buildNextSyntax)\n    innerTypes.forEach(addImport)\n    variable.type = `[${innerTypes.map((v) => anonymize(v.type)).join(\", \")}]`\n\n    return typesImport(name)\n  }\n\n  const buildStruct = (\n    id: string,\n    value: StringRecord<LookupEntry>,\n  ): TypeForEntry => {\n    const name = getName(id)\n    const variable: Variable = {\n      checksum: id,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(id, variable)\n    const deps = mapObject(value, buildNextSyntax)\n    Object.values(deps).forEach(addImport)\n    variable.type = `{${Object.entries(deps)\n      .map(([key, val]) => `${JSON.stringify(key)}: ${anonymize(val.type)}`)\n      .join(\", \")}}`\n\n    return typesImport(name)\n  }\n\n  if (input.type === \"array\") {\n    return buildArray(checksum, input.value, input.len)\n  }\n\n  if (input.type === \"sequence\") return buildVector(checksum, input.value)\n  if (input.type === \"tuple\") return buildTuple(checksum, input.value)\n  if (input.type === \"struct\") return buildStruct(checksum, input.value)\n\n  if (input.type === \"option\") {\n    const name = getName(checksum)\n    const variable: Variable = {\n      checksum,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(checksum, variable)\n\n    const innerType = buildNextSyntax(input.value)\n    addImport(innerType)\n\n    variable.type = `${anonymize(innerType.type)} | undefined`\n    return typesImport(name)\n  }\n\n  if (input.type === \"result\") {\n    declarations.imports.add(\"ResultPayload\")\n    const name = getName(checksum)\n    const variable: Variable = {\n      checksum,\n      type: \"\",\n      name,\n    }\n    declarations.variables.set(checksum, variable)\n    const ok = buildNextSyntax(input.value.ok)\n    const ko = buildNextSyntax(input.value.ko)\n    ;[ok, ko].forEach(addImport)\n    variable.type = `ResultPayload<${anonymize(ok.type)}, ${anonymize(\n      ko.type,\n    )}>`\n\n    return typesImport(name)\n  }\n\n  // it has to be an enum by now\n  const isKnown = !!knownTypes[checksum]\n\n  const name = getName(checksum)\n  const variable: Variable = {\n    checksum,\n    type: \"\",\n    name,\n  }\n  declarations.variables.set(checksum, variable)\n\n  const dependencies = Object.values(input.value).map((value) => {\n    const anonymize = (value: string) => `Anonymize<${value}>`\n    if (value.type === \"lookupEntry\") {\n      const inner = buildNextSyntax(value.value)\n      addImport(inner)\n      return anonymize(inner.type)\n    }\n\n    if (value.type === \"void\") return \"undefined\"\n\n    let innerChecksum = getChecksum(value)!\n\n    const inner = (() => {\n      switch (value.type) {\n        case \"array\":\n          return buildArray(innerChecksum, value.value, value.len)\n        case \"struct\":\n          return buildStruct(innerChecksum, value.value)\n        case \"tuple\":\n          return buildTuple(innerChecksum, value.value)\n      }\n    })()\n    addImport(inner)\n    return anonymize(inner.type)\n  })\n\n  const obj = Object.keys(input.value)\n    .map((key, idx) => `\"${key}\": ${dependencies[idx]}`)\n    .join(\", \")\n  variable.type = isKnown ? `Enum<{${obj}}>` : `AnonymousEnum<{${obj}}>`\n  return typesImport(name)\n}\n\nconst buildSyntax = withCache(\n  _buildSyntax,\n  (_getter, entry, declarations, getChecksum): TypeForEntry =>\n    typesImport(declarations.variables.get(getChecksum(entry.id)!)!.name),\n  (x) => x,\n)\n\nexport const getTypesBuilder = (\n  declarations: CodeDeclarations,\n  metadata: V14 | V15,\n  // checksum -> desired-name\n  knownTypes: Record<string, string>,\n) => {\n  const typeFileImports = new Set<string>()\n  const clientFileImports = new Set<string>()\n\n  const importType = (entry: TypeForEntry) => {\n    if (entry.import === \"client\") {\n      clientFileImports.add(entry.type)\n    } else if (entry.import === \"globalTypes\") {\n      typeFileImports.add(entry.type)\n    }\n    return entry.type\n  }\n\n  const lookupData = metadata.lookup\n  const getLookupEntryDef = getLookupFn(lookupData)\n  const checksumBuilder = getChecksumBuilder(metadata)\n\n  const getChecksum = (id: number | StructVar | TupleVar | ArrayVar): string =>\n    typeof id === \"number\"\n      ? checksumBuilder.buildDefinition(id)!\n      : checksumBuilder.buildComposite(id)!\n\n  const cache = new Map()\n  const buildDefinition = (id: number) =>\n    buildSyntax(\n      getLookupEntryDef(id),\n      cache,\n      new Set(),\n      declarations,\n      getChecksum,\n      knownTypes,\n    )\n\n  const buildTypeDefinition = (id: number) => {\n    const tmp = buildDefinition(id)\n    importType(tmp)\n\n    if (!tmp.import || tmp.import === \"client\") return tmp.type\n\n    const checksum = checksumBuilder.buildDefinition(id)!\n    if (knownTypes[checksum]) return tmp.type\n\n    return `Anonymize<${tmp.type}>`\n  }\n\n  const buildStorage = (pallet: string, entry: string) => {\n    const storageEntry = metadata.pallets\n      .find((x) => x.name === pallet)!\n      .storage!.items.find((s) => s.name === entry)!\n\n    if (storageEntry.type.tag === \"plain\")\n      return {\n        key: \"[]\",\n        val: `${buildTypeDefinition(storageEntry.type.value)}`,\n      }\n\n    const { key, value } = storageEntry.type.value\n    const val = buildTypeDefinition(value)\n\n    const returnKey =\n      storageEntry.type.value.hashers.length === 1\n        ? `[Key: ${buildTypeDefinition(key)}]`\n        : buildTypeDefinition(key)\n\n    return { key: returnKey, val }\n  }\n\n  const buildRuntimeCall = (api: string, method: string) => {\n    const entry = metadata.apis\n      .find((x) => x.name === api)\n      ?.methods.find((x) => x.name === method)\n    if (!entry) throw null\n\n    const innerTuple = entry.inputs\n      .map(({ name, type }) => `${name}: ${buildTypeDefinition(type)}`)\n      .join(\", \")\n\n    return {\n      args: `[${innerTuple}]`,\n      value: buildTypeDefinition(entry.output),\n    }\n  }\n\n  const buildVariant =\n    (type: \"errors\" | \"events\" | \"calls\") => (pallet: string, name: string) => {\n      const lookupEntry = getLookupEntryDef(\n        metadata.pallets.find((x) => x.name === pallet)![type]! as number,\n      )\n      if (lookupEntry.type !== \"enum\") throw null\n\n      // Generate the type that has all the variants - This is so the consumer can import the type, even if it's not used directly by the descriptor file\n      buildDefinition(lookupEntry.id)\n\n      const innerLookup = lookupEntry.value[name]\n\n      if (innerLookup.type === \"lookupEntry\") {\n        const tmp = buildDefinition(innerLookup.value.id)\n        importType(tmp)\n\n        return `Anonymize<${tmp.type}>`\n      } else if (innerLookup.type === \"void\") {\n        return \"undefined\"\n      } else {\n        const result = declarations.variables.get(\n          getChecksum(innerLookup),\n        )!.name\n        typeFileImports.add(result)\n\n        return `Anonymize<${result}>`\n      }\n    }\n\n  const buildConstant = (pallet: string, constantName: string) => {\n    const storageEntry = metadata.pallets\n      .find((x) => x.name === pallet)!\n      .constants!.find((s) => s.name === constantName)!\n\n    return buildTypeDefinition(storageEntry.type)\n  }\n\n  return {\n    buildTypeDefinition,\n    buildDefinition,\n    buildStorage,\n    buildEvent: buildVariant(\"events\"),\n    buildError: buildVariant(\"errors\"),\n    buildCall: buildVariant(\"calls\"),\n    buildRuntimeCall,\n    buildConstant,\n    getTypeFileImports: () => Array.from(typeFileImports),\n    getClientFileImports: () => Array.from(clientFileImports),\n  }\n}\n","import type { LookupEntry } from \"@polkadot-api/metadata-builders\"\n\ntype FnWithStack<Other extends Array<any>, T> = (\n  input: LookupEntry,\n  cache: Map<number, T>,\n  stack: Set<number>,\n  ...rest: Other\n) => T\n\nexport const withCache =\n  <Other extends Array<any>, T>(\n    fn: FnWithStack<Other, T>,\n    onEnterCircular: (\n      cacheGetter: () => T,\n      circular: LookupEntry,\n      ...rest: Other\n    ) => T,\n    onExitCircular: (\n      outter: T,\n      inner: T,\n      circular: LookupEntry,\n      ...rest: Other\n    ) => T,\n  ): FnWithStack<Other, T> =>\n  (input, cache, stack, ...rest) => {\n    const { id } = input\n    if (cache.has(id)) return cache.get(id)!\n\n    if (stack.has(id)) {\n      const res = onEnterCircular(() => cache.get(id)!, input, ...rest)\n      cache.set(id, res)\n      return res\n    }\n\n    stack.add(id)\n    let result = fn(input, cache, stack, ...rest)\n    stack.delete(id)\n\n    if (cache.has(id)) {\n      result = onExitCircular(result, cache.get(id)!, input, ...rest)\n    }\n\n    cache.set(id, result)\n    return result\n  }\n","import {\n  getChecksumBuilder,\n  getLookupFn,\n} from \"@polkadot-api/metadata-builders\"\nimport type { V14, V15 } from \"@polkadot-api/substrate-bindings\"\nimport { KnownTypes } from \"./known-types\"\nimport { defaultDeclarations, getTypesBuilder } from \"./types-builder\"\n\ntype ArraVal<T extends Array<any>> = T extends Array<infer V> ? V : unknown\n\nexport const getNewTypes = (\n  metadata: V14 | V15,\n  knownTypes: KnownTypes,\n  getTypeName: (data: ArraVal<V15[\"lookup\"]>) => string | null,\n) => {\n  const checksumBuilder = getChecksumBuilder(metadata)\n  let declarations = defaultDeclarations()\n  let typesBuilder = getTypesBuilder(declarations, metadata, knownTypes)\n  const lookup = getLookupFn(metadata.lookup)\n\n  let ignoredIds = new Set<number>(\n    \"outerEnums\" in metadata\n      ? [\n          metadata.outerEnums.call,\n          metadata.outerEnums.error,\n          metadata.outerEnums.event,\n        ]\n      : [],\n  )\n\n  ;(\"outerEnums\" in metadata\n    ? [metadata.outerEnums.call, metadata.outerEnums.event]\n    : []\n  )\n    .map(lookup)\n    .forEach((entry) => {\n      if (entry.type !== \"enum\") throw null\n      Object.values(entry.value).forEach((inner) => {\n        if (inner.type === \"void\") return\n        ignoredIds.add(Object.values(inner.value)[0].id)\n      })\n    })\n\n  const wannabes: KnownTypes = {}\n  const nameToChecksum = new Map<string, { path: string[]; checksum: string }>()\n\n  metadata.lookup.forEach((x) => {\n    const result = checksumBuilder.buildDefinition(x.id)!\n    typesBuilder.buildDefinition(x.id)\n    const variable = declarations.variables.get(result)\n\n    if (\n      !variable ||\n      !variable.type.startsWith(\"AnonymousEnum<\") ||\n      variable.checksum in wannabes\n    )\n      return\n\n    const typeName = getTypeName(x)\n    if (!typeName) return\n\n    let finalTypeName = typeName\n    for (let i = 1; nameToChecksum.has(finalTypeName); i++)\n      finalTypeName = typeName + i\n\n    wannabes[variable.checksum] = finalTypeName\n    nameToChecksum.set(finalTypeName, {\n      checksum: variable.checksum,\n      path: x.path,\n    })\n  })\n\n  declarations = defaultDeclarations()\n  typesBuilder = getTypesBuilder(declarations, metadata, wannabes)\n\n  metadata.lookup.forEach(({ id }) => {\n    typesBuilder.buildDefinition(id)\n  })\n\n  return Object.fromEntries(\n    [...nameToChecksum].map(([name, { checksum, path }]) => {\n      return [\n        checksum,\n        {\n          name,\n          checksum,\n          type: declarations.variables.get(checksum)!.type,\n          path,\n        },\n      ]\n    }),\n  )\n}\n","import {\n  getChecksumBuilder,\n  getLookupFn,\n} from \"@polkadot-api/metadata-builders\"\nimport type { V14, V15 } from \"@polkadot-api/substrate-bindings\"\nimport { filterObject, mapObject } from \"@polkadot-api/utils\"\nimport { getTypesBuilder } from \"./types-builder\"\n\nconst isDocs = (x: any) => {\n  if (typeof x !== \"object\") return false\n  const keys = new Set(Object.keys(x))\n  if (keys.size !== 2) return false\n  return keys.has(\"docs\") && keys.has(\"value\")\n}\n\nconst customStringifyObject = (\n  input: string | Record<string, any> | Array<any>,\n): string => {\n  if (typeof input === \"string\" || typeof input === \"number\") return input\n\n  if (Array.isArray(input))\n    return `[${input.map(customStringifyObject).join(\", \")}]`\n\n  return `{${Object.entries(\n    mapObject(input, (x) => (isDocs(x) ? x : customStringifyObject(x))),\n  )\n    .map(([key, value]) => {\n      if (isDocs(value)) {\n        return `\\n\\n/**\\n${value.docs\n          .map((doc: string) => ` *${doc}`)\n          .join(\"\\n\")}\\n */\\n${key}: ${customStringifyObject(value.value)}`\n      }\n      return `${key}: ${value}`\n    })\n    .join(\",\\n\")}}`\n}\n\n// type -> pallet -> name\nexport type DescriptorValues = Record<\n  \"storage\" | \"tx\" | \"events\" | \"errors\" | \"constants\" | \"apis\",\n  Record<string, Record<string, number>>\n>\n\nexport const generateDescriptors = (\n  metadata: V14 | V15,\n  checksums: string[],\n  typesBuilder: ReturnType<typeof getTypesBuilder>,\n  checksumBuilder: ReturnType<typeof getChecksumBuilder>,\n  prefix: string,\n  paths: {\n    client: string\n    checksums: string\n    types: string\n    descriptorValues: string\n  },\n) => {\n  const buildEnumObj = <T>(\n    val: number | undefined,\n    cb: (name: string, docs: string[]) => T,\n  ): Record<string, T> => {\n    if (val === undefined) return {}\n\n    const lookup = metadata.lookup[val]\n    if (lookup.def.tag !== \"variant\") throw null\n    return Object.fromEntries(\n      lookup.def.value.map((x) => {\n        return [x.name!, cb(x.name, x.docs)]\n      }),\n    )\n  }\n\n  const storage = Object.fromEntries(\n    metadata.pallets.map((pallet) => {\n      return [\n        pallet.name,\n        Object.fromEntries(\n          pallet.storage?.items.map(({ name, modifier, docs }) => {\n            const { key, val } = typesBuilder.buildStorage(pallet.name, name)\n            const checksum = checksumBuilder.buildStorage(pallet.name, name)!\n            const type = `StorageDescriptor<${key}, ${val}, ${!modifier}>`\n            return [\n              name,\n              {\n                checksum: checksums.indexOf(checksum),\n                type,\n                name: `stg_${pallet.name}_${name}`,\n                docs,\n              },\n            ]\n          }) ?? [],\n        ),\n      ]\n    }),\n  )\n\n  const constants = Object.fromEntries(\n    metadata.pallets.map((pallet) => {\n      return [\n        pallet.name,\n        Object.fromEntries(\n          pallet.constants?.map(({ name, docs }) => {\n            const checksum = checksumBuilder.buildConstant(pallet.name, name)!\n            const type = `PlainDescriptor<${typesBuilder.buildConstant(\n              pallet.name,\n              name,\n            )}>`\n            return [\n              name,\n              {\n                checksum: checksums.indexOf(checksum),\n                type,\n                name: `const_${pallet.name}_${name}`,\n                docs,\n              },\n            ]\n          }) ?? [],\n        ),\n      ]\n    }),\n  )\n\n  const calls = Object.fromEntries(\n    metadata.pallets.map((pallet) => {\n      return [\n        pallet.name,\n        buildEnumObj(pallet.calls, (name, docs) => ({\n          checksum: checksums.indexOf(\n            checksumBuilder.buildCall(pallet.name, name)!,\n          ),\n          type: `TxDescriptor<${typesBuilder.buildCall(pallet.name, name)}>`,\n          name: `call_${pallet.name}_${name}`,\n          docs,\n        })),\n      ]\n    }),\n  )\n\n  const events = Object.fromEntries(\n    metadata.pallets.map((pallet) => {\n      return [\n        pallet.name,\n        buildEnumObj(pallet.events, (name, docs) => ({\n          checksum: checksums.indexOf(\n            checksumBuilder.buildEvent(pallet.name, name)!,\n          ),\n          type: `PlainDescriptor<${typesBuilder.buildEvent(\n            pallet.name,\n            name,\n          )}>`,\n          name: `evt_${pallet.name}_${name}`,\n          docs,\n        })),\n      ]\n    }),\n  )\n\n  const errors = Object.fromEntries(\n    metadata.pallets.map((pallet) => {\n      return [\n        pallet.name,\n        buildEnumObj(pallet.errors, (name, docs) => {\n          return {\n            checksum: checksums.indexOf(\n              checksumBuilder.buildError(pallet.name, name)!,\n            ),\n            type: `PlainDescriptor<${typesBuilder.buildError(\n              pallet.name,\n              name,\n            )}>`,\n            name: `err_${pallet.name}_${name}`,\n            docs,\n          }\n        }),\n      ]\n    }),\n  )\n\n  const runtimeCalls = Object.fromEntries(\n    metadata.apis.map((api) => [\n      api.name,\n      {\n        docs: api.docs,\n        methods: Object.fromEntries(\n          api.methods.map((method) => {\n            const { args, value } = typesBuilder.buildRuntimeCall(\n              api.name,\n              method.name,\n            )\n            return [\n              method.name,\n              {\n                checksum: checksums.indexOf(\n                  checksumBuilder.buildRuntimeCall(api.name, method.name)!,\n                ),\n                type: `RuntimeDescriptor<${args}, ${value}>`,\n                name: `runtime_${api.name}_${method.name}`,\n                docs: method.docs,\n              },\n            ]\n          }),\n        ),\n      },\n    ]),\n  )\n\n  const mapDescriptor = <T, R>(\n    descriptor: Record<string, Record<string, T>>,\n    mapFn: (value: T, pallet: string, name: string) => R,\n  ): Record<string, Record<string, R>> =>\n    filterObject(\n      mapObject(descriptor, (v, pallet) =>\n        mapObject(v, (value, name) => mapFn(value, pallet, name)),\n      ),\n      (v) => Object.keys(v).length > 0,\n    )\n\n  const extractValue = (input: { docs: string[]; type: string }) => ({\n    docs: input.docs,\n    value: input.type,\n  })\n\n  const iStorage = mapDescriptor(storage, extractValue)\n  const iCalls = mapDescriptor(calls, extractValue)\n  const iEvents = mapDescriptor(events, extractValue)\n  const iErrors = mapDescriptor(errors, extractValue)\n  const iConstants = mapDescriptor(constants, extractValue)\n\n  const descriptorValues: DescriptorValues = {\n    storage: {},\n    tx: {},\n    events: {},\n    errors: {},\n    constants: {},\n    apis: {},\n  }\n  const mapObjStr = mapObject as <I, O>(\n    input: Record<string, I>,\n    mapper: (i: I, k: string) => O,\n  ) => Record<string, O>\n  Object.keys(storage).forEach((pallet) => {\n    descriptorValues[\"storage\"][pallet] = mapObjStr(\n      storage[pallet],\n      (x, _: string) => x.checksum,\n    )\n    descriptorValues[\"tx\"][pallet] = mapObjStr(calls[pallet], (x) => x.checksum)\n    descriptorValues[\"events\"][pallet] = mapObjStr(\n      events[pallet],\n      (x) => x.checksum,\n    )\n    descriptorValues[\"errors\"][pallet] = mapObjStr(\n      errors[pallet],\n      (x) => x.checksum,\n    )\n    descriptorValues[\"constants\"][pallet] = mapObjStr(\n      constants[pallet],\n      (x) => x.checksum,\n    )\n  })\n\n  const iRuntimeCalls = mapObject(runtimeCalls, (api) => ({\n    docs: api.docs,\n    value: mapObject(api.methods, ({ docs, type: value }) => ({ docs, value })),\n  }))\n\n  descriptorValues[\"apis\"] = mapObject(runtimeCalls, (api) =>\n    mapObject(api.methods, (x) => x.checksum),\n  )\n\n  const clientImports = [\n    \"StorageDescriptor\",\n    \"PlainDescriptor\",\n    \"AssetDescriptor\",\n    \"TxDescriptor\",\n    \"RuntimeDescriptor\",\n    \"Enum\",\n    \"_Enum\",\n    \"Binary\",\n    \"FixedSizeBinary\",\n    \"FixedSizeArray\",\n    \"QueryFromPalletsDef\",\n    \"TxFromPalletsDef\",\n    \"EventsFromPalletsDef\",\n    \"ErrorsFromPalletsDef\",\n    \"ConstFromPalletsDef\",\n    ...typesBuilder.getClientFileImports(),\n  ]\n\n  const assetPayment = metadata.extrinsic.signedExtensions.find(\n    (x) => x.identifier === \"ChargeAssetTxPayment\",\n  )\n\n  let _assetId: null | number = null\n  if (assetPayment) {\n    const assetTxPayment = getLookupFn(metadata.lookup)(assetPayment.type)\n    if (assetTxPayment.type === \"struct\") {\n      const optionalAssetId = assetTxPayment.value.asset_id\n      if (optionalAssetId.type === \"option\") _assetId = optionalAssetId.value.id\n    }\n  }\n\n  const asset =\n    _assetId === null\n      ? null\n      : {\n          checksum: checksumBuilder.buildDefinition(_assetId),\n          type: typesBuilder.buildTypeDefinition(_assetId),\n        }\n\n  const imports = `import {${clientImports.join(\", \")}} from \"${paths.client}\";\n  import {${typesBuilder.getTypeFileImports().join(\", \")}} from \"${\n    paths.types\n  }\";\n\n  const descriptorValues = import(\"${paths.descriptorValues}\").then(module => module[\"${prefix}\"]);\n  const checksums = import(\"${paths.checksums}\").then(module => 'default' in module ? module.default : module);\n  `\n\n  const descriptorTypes = `${imports}\n\ntype AnonymousEnum<T extends {}> = T & {\n  __anonymous: true\n}\n\ntype MyTuple<T> = [T, ...T[]]\n\ntype SeparateUndefined<T> = undefined extends T\n  ? undefined | Exclude<T, undefined>\n  : T\n\n\ntype Anonymize<T> = SeparateUndefined<\n  T extends FixedSizeBinary<infer L>\n    ? number extends L\n      ? Binary\n      : FixedSizeBinary<L>\n    : T extends\n          | string\n          | number\n          | bigint\n          | boolean\n          | void\n          | undefined\n          | null\n          | symbol\n          | Uint8Array\n          | Enum<any>\n      ? T\n      : T extends AnonymousEnum<infer V>\n        ? Enum<V>\n        : T extends MyTuple<any>\n          ? {\n              [K in keyof T]: T[K]\n            }\n          : T extends []\n            ? []\n            : T extends FixedSizeArray<infer L, infer T>\n              ? number extends L\n                ? Array<T>\n                : FixedSizeArray<L, T>\n              : {\n                  [K in keyof T & string]: T[K]\n                }\n>\n\ntype IStorage = ${customStringifyObject(iStorage)};\ntype ICalls = ${customStringifyObject(iCalls)};\ntype IEvent = ${customStringifyObject(iEvents)};\ntype IError = ${customStringifyObject(iErrors)};\ntype IConstants = ${customStringifyObject(iConstants)};\ntype IRuntimeCalls = ${customStringifyObject(iRuntimeCalls)};\ntype IAsset = AssetDescriptor<${asset?.type ?? \"void\"}>\nconst asset: IAsset = \"${asset?.checksum ?? \"\"}\" as IAsset\n\ntype PalletsTypedef = {\n  __storage: IStorage,\n  __tx: ICalls,\n  __event: IEvent,\n  __error: IError,\n  __const: IConstants\n}\n\ntype IDescriptors = {\n  descriptors: {\n    pallets: PalletsTypedef,\n    apis: IRuntimeCalls\n  } & Promise<any>,\n  asset: IAsset,\n  checksums: Promise<string[]>\n};\nconst _allDescriptors = { descriptors: descriptorValues, asset, checksums } as any as IDescriptors;\nexport default _allDescriptors;\n\nexport type ${prefix}Queries = QueryFromPalletsDef<PalletsTypedef>\nexport type ${prefix}Calls = TxFromPalletsDef<PalletsTypedef>\nexport type ${prefix}Events = EventsFromPalletsDef<PalletsTypedef>\nexport type ${prefix}Errors = ErrorsFromPalletsDef<PalletsTypedef>\nexport type ${prefix}Constants = ConstFromPalletsDef<PalletsTypedef>\n\nexport type ${prefix}WhitelistEntry =\n  | PalletKey\n  | ApiKey<IRuntimeCalls>\n  | \\`query.\\${NestedKey<PalletsTypedef['__storage']>}\\`\n  | \\`tx.\\${NestedKey<PalletsTypedef['__tx']>}\\`\n  | \\`event.\\${NestedKey<PalletsTypedef['__event']>}\\`\n  | \\`error.\\${NestedKey<PalletsTypedef['__error']>}\\`\n  | \\`const.\\${NestedKey<PalletsTypedef['__const']>}\\`\n\ntype PalletKey = \\`*.\\${keyof PalletsTypedef & string}\\`\ntype NestedKey<D extends Record<string, Record<string, any>>> =\n  | \"*\"\n  | {\n      [P in keyof D & string]:\n        | \\`\\${P}.*\\`\n        | {\n            [N in keyof D[P] & string]: \\`\\${P}.\\${N}\\`\n          }[keyof D[P] & string]\n    }[keyof D & string]\n\ntype ApiKey<D extends Record<string, Record<string, any>>> =\n  | \"api.*\"\n  | {\n      [P in keyof D & string]:\n        | \\`api.\\${P}.*\\`\n        | {\n            [N in keyof D[P] & string]: \\`api.\\${P}.\\${N}\\`\n          }[keyof (keyof D[P]) & string]\n    }[keyof D & string]\n`\n\n  return { descriptorTypes, descriptorValues }\n}\n","import { getChecksumBuilder } from \"@polkadot-api/metadata-builders\"\nimport type { V14, V15 } from \"@polkadot-api/substrate-bindings\"\nimport { DescriptorValues, generateDescriptors } from \"./generate-descriptors\"\nimport { generateTypes } from \"./generate-types\"\nimport { getUsedChecksums } from \"./get-used-checksums\"\nimport knownTypes, { KnownTypes } from \"./known-types\"\nimport { Variable, defaultDeclarations, getTypesBuilder } from \"./types-builder\"\nimport { applyWhitelist } from \"./whitelist\"\nimport { mapObject } from \"@polkadot-api/utils\"\n\nexport const generateMultipleDescriptors = (\n  chains: Array<{\n    key: string\n    metadata: V14 | V15\n    knownTypes: KnownTypes\n  }>,\n  paths: {\n    client: string\n    checksums: string\n    types: string\n    descriptorValues: string\n  },\n  options: {\n    whitelist?: string[]\n  } = {},\n) => {\n  const chainData = chains.map((chain) => {\n    const metadata = options.whitelist\n      ? applyWhitelist(chain.metadata, options.whitelist)\n      : chain.metadata\n    const builder = getChecksumBuilder(metadata)\n    return {\n      ...chain,\n      metadata,\n      builder,\n      checksums: getUsedChecksums(metadata, builder),\n      knownTypes: {\n        ...knownTypes,\n        ...chain.knownTypes,\n      },\n    }\n  })\n  resolveConflicts(chainData)\n\n  const checksums = Array.from(\n    new Set(chainData.flatMap((chain) => Array.from(chain.checksums))),\n  )\n\n  const declarations = defaultDeclarations()\n  const chainFiles = chainData.map((chain) =>\n    generateDescriptors(\n      chain.metadata,\n      checksums,\n      getTypesBuilder(declarations, chain.metadata, chain.knownTypes),\n      chain.builder,\n      capitalize(chain.key),\n      paths,\n    ),\n  )\n\n  const descriptorsFileContent = generateDescriptorValuesContent(\n    Object.fromEntries(\n      chainFiles.map((file, i) => [chainData[i].key, file.descriptorValues]),\n    ),\n  )\n\n  return {\n    descriptorsFileContent,\n    descriptorTypesFileContent: chainFiles.map((file) => file.descriptorTypes),\n    checksums,\n    typesFileContent: generateTypes(declarations, paths),\n    publicTypes: getPublicTypes(declarations.variables),\n  }\n}\n\nfunction getPublicTypes(variables: Map<string, Variable>) {\n  return Array.from(variables.values())\n    .filter((variable) => variable.type.startsWith(\"Enum<\"))\n    .map((variable) => variable.name)\n}\n\nfunction resolveConflicts(\n  chainData: Array<{\n    key: string\n    checksums: Set<string>\n    knownTypes: KnownTypes\n  }>,\n) {\n  const usedNames = new Map<string, Map<string, Set<string>>>()\n\n  chainData.forEach((chain) =>\n    chain.checksums.forEach((checksum) => {\n      const name = chain.knownTypes[checksum]\n      if (!name) return\n      if (!usedNames.has(name)) {\n        usedNames.set(name, new Map())\n      }\n      if (!usedNames.get(name)!.has(chain.key)) {\n        usedNames.get(name)!.set(chain.key, new Set())\n      }\n      usedNames.get(name)!.get(chain.key)!.add(checksum)\n    }),\n  )\n\n  const conflictedChecksums = Array.from(usedNames.values()).flatMap(\n    (chainToChecksums) => {\n      const checksums = new Set(\n        Array.from(chainToChecksums.values()).flatMap((v) => [...v]),\n      )\n      if (checksums.size === 1) return []\n      const allAreTheSame = Array.from(chainToChecksums.values()).every(\n        (chainChecksums) => chainChecksums.size === checksums.size,\n      )\n      if (allAreTheSame) return []\n\n      return [...checksums]\n    },\n  )\n\n  Array.from(new Set(conflictedChecksums)).forEach((checksum) =>\n    chainData.forEach((chain) => {\n      const name = chain.knownTypes[checksum]\n      if (name) {\n        chain.knownTypes[checksum] = capitalize(chain.key) + name\n      }\n    }),\n  )\n}\n\nfunction capitalize(value: string) {\n  return value.slice(0, 1).toUpperCase() + value.slice(1)\n}\n\nfunction generateDescriptorValuesContent(\n  descriptorValues: Record<string, DescriptorValues>,\n) {\n  const usages: Record<string, number> = {}\n  const countUsages = (obj: Record<string, any>): void =>\n    Object.entries(obj).forEach(([key, value]) => {\n      usages[key] = usages[key] ?? 0\n      usages[key]++\n      if (typeof value === \"object\") countUsages(value)\n    })\n  countUsages(descriptorValues)\n\n  const tokens: Array<string> = []\n  const tokenToIdx: Record<string, number> = {}\n  const minifyKeys = <T extends Record<string | number, any>>(obj: T): T =>\n    Object.fromEntries(\n      Object.entries(obj).map(([key, value]) => {\n        const newValue = typeof value === \"number\" ? value : minifyKeys(value)\n        if (usages[key] <= 1) return [key, newValue]\n        if (!(key in tokenToIdx)) {\n          tokenToIdx[key] = tokens.length\n          tokens.push(key)\n        }\n        return [tokenToIdx[key], newValue]\n      }),\n    ) as T\n  const minified = mapObject(descriptorValues, minifyKeys)\n\n  const getTreeKey = (tree: Record<string, unknown>): string =>\n    Object.entries(tree)\n      .sort(([a], [b]) => a.localeCompare(b))\n      .map(\n        ([key, value]) =>\n          `[${key}:${typeof value === \"object\" ? getTreeKey(value as any) : value}]`,\n      )\n      .join(\"\")\n\n  type Transformed = Record<string, number | Record<string, number>>\n  /**\n   * Modifies in-place, changes type to Transformed.\n   */\n  const findCommonTrees = (\n    values: Array<Record<string, Record<string, unknown>>>,\n  ) => {\n    const treeUsages: Record<string, number> = {}\n    const keys = values.map((obj) =>\n      mapObject(obj, (tree) => {\n        const key = getTreeKey(tree)\n        treeUsages[key] = treeUsages[key] ?? 0\n        treeUsages[key]++\n        return key\n      }),\n    )\n\n    const commonTrees: Array<Record<string, unknown>> = []\n    const keyToCommonTree: Record<string, number> = {}\n    values.forEach((obj, i) =>\n      Object.entries(obj).forEach(([objKey, tree]) => {\n        const key = keys[i][objKey]\n        if (treeUsages[key] > 1) {\n          if (!(key in keyToCommonTree)) {\n            keyToCommonTree[key] = commonTrees.length\n            commonTrees.push(tree)\n          }\n          ;(obj as Transformed)[objKey] = keyToCommonTree[key]\n        }\n      }),\n    )\n\n    return commonTrees\n  }\n\n  const commonTrees = findCommonTrees(\n    Object.keys(Object.values(minified)[0]).flatMap((type) =>\n      Object.values(minified).map((d) => d[type as keyof DescriptorValues]),\n    ),\n  )\n\n  const data = JSON.stringify([minified, commonTrees, tokens])\n\n  return `\n    const [minified, commonTrees, tokens] = JSON.parse(\\`${data}\\`);\n\n    const replaceTokens = <T>(obj: Record<string | number, T>): Record<string, T> =>\n      Object.fromEntries(\n        Object.entries(obj).map(([key, value]) => {\n          const unwrappedValue =\n            typeof value === \"object\" ? replaceTokens(value as any) : value\n          const numericKey = Number(key)\n          if (Number.isNaN(numericKey)) {\n            return [key, unwrappedValue]\n          }\n          return [tokens[numericKey], unwrappedValue]\n        }),\n      ) as Record<string, T>\n    const tokenizedCommonTrees = commonTrees.map(replaceTokens)\n    \n    const unwrap = (\n      obj: Record<string, object | number>,\n      depth: number,\n    ): Record<string, object> =>\n      depth === 0\n        ? (obj as Record<string, object>)\n        : Object.fromEntries(\n            Object.entries(obj).map(([key, value]) => [\n              key,\n              unwrap(\n                typeof value === \"object\" ? value : tokenizedCommonTrees[value],\n                depth - 1,\n              ),\n            ]),\n          )\n    \n    const getChainDescriptors = (key: string) =>\n      unwrap(replaceTokens(minified[key]), 2)\n\n    ${Object.keys(descriptorValues)\n      .map(\n        (key) =>\n          `export const ${capitalize(key)} = getChainDescriptors(\"${key}\")`,\n      )\n      .join(\"\\n\")}\n  `\n}\n","import { CodeDeclarations } from \"./types-builder\"\n\nexport const generateTypes = (\n  declarations: CodeDeclarations,\n  paths: {\n    client: string\n  },\n) => {\n  const clientImports = [\n    \"Enum\",\n    \"_Enum\",\n    \"GetEnum\",\n    \"FixedSizeBinary\",\n    \"FixedSizeArray\",\n    \"Binary\",\n    ...declarations.imports,\n  ]\n\n  const imports = `import {${clientImports.join(\", \")}} from \"${paths.client}\";`\n\n  const baseTypes = [...declarations.variables.values()]\n    .map(({ name, type }) =>\n      type.startsWith(\"Enum<\")\n        ? `export type ${name} = ${type};\\nexport const ${name} = _Enum as unknown as GetEnum<${name}>;`\n        : `export type ${name} = ${type};`,\n    )\n    .join(\"\\n\\n\")\n\n  return `${imports}\n\n  type AnonymousEnum<T extends {}> = T & {\n    __anonymous: true\n  }\n\n  type MyTuple<T> = [T, ...T[]]\n\n  type SeparateUndefined<T> = undefined extends T\n    ? undefined | Exclude<T, undefined>\n    : T\n\n  type Anonymize<T> = SeparateUndefined<\n    T extends FixedSizeBinary<infer L>\n      ? number extends L\n        ? Binary\n        : FixedSizeBinary<L>\n      : T extends\n            | string\n            | number\n            | bigint\n            | boolean\n            | void\n            | undefined\n            | null\n            | symbol\n            | Uint8Array\n            | Enum<any>\n        ? T\n        : T extends AnonymousEnum<infer V>\n          ? Enum<V>\n          : T extends MyTuple<any>\n            ? {\n                [K in keyof T]: T[K]\n              }\n            : T extends []\n              ? []\n              : T extends FixedSizeArray<infer L, infer T>\n                ? number extends L\n                  ? Array<T>\n                  : FixedSizeArray<L, T>\n                : {\n                    [K in keyof T & string]: T[K]\n                  }\n  >\n\n  ${baseTypes}\n  `\n}\n","import { getChecksumBuilder } from \"@polkadot-api/metadata-builders\"\nimport { V14, V15 } from \"@polkadot-api/substrate-bindings\"\n\nexport const getUsedChecksums = (\n  metadata: V14 | V15,\n  builder = getChecksumBuilder(metadata),\n) => {\n  const buildEnum = (val: number | undefined, cb: (name: string) => void) => {\n    if (val === undefined) return\n\n    const lookup = metadata.lookup[val]\n    if (lookup.def.tag !== \"variant\") throw null\n    lookup.def.value.forEach((x) => cb(x.name))\n  }\n\n  const checksums = new Set<string>()\n\n  metadata.pallets.forEach((pallet) => {\n    pallet.storage?.items.forEach(({ name }) =>\n      checksums.add(builder.buildStorage(pallet.name, name)!),\n    ) ?? []\n    pallet.constants.forEach(({ name }) =>\n      checksums.add(builder.buildConstant(pallet.name, name)!),\n    )\n    buildEnum(pallet.calls, (name) =>\n      checksums.add(builder.buildCall(pallet.name, name)!),\n    )\n    buildEnum(pallet.events, (name) =>\n      checksums.add(builder.buildEvent(pallet.name, name)!),\n    )\n    buildEnum(pallet.errors, (name) =>\n      checksums.add(builder.buildError(pallet.name, name)!),\n    )\n  })\n\n  metadata.apis.forEach((api) =>\n    api.methods.forEach((method) =>\n      checksums.add(builder.buildRuntimeCall(api.name, method.name)!),\n    ),\n  )\n\n  return new Set([...checksums, ...builder.getAllGeneratedChecksums()])\n}\n","import { mapObject } from \"@polkadot-api/utils\"\n\nexport type KnownTypes = Record<string, string>\nexport type RepositoryEntry =\n  | string\n  | { name: string; paths?: string[]; type?: string; chains?: string }\n\nexport const knownTypesRepository: Record<string, RepositoryEntry> = {\n  \"7bvp9q4ceuk7\": {\n    name: \"DigestItem\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.generic.digest.DigestItem\"],\n    type: \"Enum(PreRuntime, Consensus, Seal, Other, RuntimeEnvironmentUpdated)\",\n  },\n  \"90bksimft5ia2\": {\n    name: \"DispatchClass\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"frame_support.dispatch.DispatchClass\"],\n    type: \"Enum(Normal, Operational, Mandatory)\",\n  },\n  edh5jo3t7dgka: {\n    name: \"DispatchError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.DispatchError\"],\n    type: \"Enum(Other, CannotLookup, BadOrigin, Module, ConsumerRemaining, NoProviders, TooManyConsumers, Token, Arithmetic, Transactional, Exhausted, Corruption, Unavailable, RootNotAllowed)\",\n  },\n  \"5ltp1mv4fr7n7\": {\n    name: \"TokenError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.TokenError\"],\n    type: \"Enum(FundsUnavailable, OnlyProvider, BelowMinimum, CannotCreate, UnknownAsset, Frozen, Unsupported, CannotCreateHold, NotExpendable, Blocked)\",\n  },\n  \"87r8lmtt997st\": {\n    name: \"ArithmeticError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_arithmetic.ArithmeticError\"],\n    type: \"Enum(Underflow, Overflow, DivisionByZero)\",\n  },\n  f87qnbuqe30lh: {\n    name: \"TransactionalError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.TransactionalError\"],\n    type: \"Enum(LimitReached, NoLayer)\",\n  },\n  \"7u481jea1442o\": {\n    name: \"BalanceStatus\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"frame_support.traits.tokens.misc.BalanceStatus\"],\n    type: \"Enum(Free, Reserved)\",\n  },\n  cjonl4a47pcm8: {\n    name: \"TransactionPaymentEvent\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_transaction_payment.pallet.Event\"],\n    type: \"Enum(TransactionFeePaid)\",\n  },\n  \"1078dp8vlrjh3\": {\n    name: \"SessionEvent\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_session.pallet.Event\"],\n    type: \"Enum(NewSession)\",\n  },\n  bnmfm52c5n7nq: {\n    name: \"XcmV4TraitsOutcome\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"staging_xcm.v4.traits.Outcome\"],\n    type: \"Enum(Complete, Incomplete, Error)\",\n  },\n  \"8j0abm9jkapk2\": {\n    name: \"XcmV3TraitsError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.traits.Error\"],\n    type: \"Enum(Overflow, Unimplemented, UntrustedReserveLocation, UntrustedTeleportLocation, LocationFull, LocationNotInvertible, BadOrigin, InvalidLocation, AssetNotFound, FailedToTransactAsset, NotWithdrawable, LocationCannotHold, ExceedsMaxMessageSize, DestinationUnsupported, Transport, Unroutable, UnknownClaim, FailedToDecode, MaxWeightInvalid, NotHoldingFees, TooExpensive, Trap, ExpectationFalse, PalletNotFound, NameMismatch, VersionIncompatible, HoldingWouldOverflow, ExportError, ReanchorFailed, NoDeal, FeesNotMet, LockError, NoPermission, Unanchored, NotDepositable, UnhandledXcmVersion, WeightLimitReached, Barrier, WeightNotComputable, ExceedsStackLimit)\",\n  },\n  faafmcb1jmm2o: {\n    name: \"XcmV3Junctions\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.junctions.Junctions\", \"staging_xcm.v4.junctions.Junctions\"],\n    type: \"Enum(Here, X1, X2, X3, X4, X5, X6, X7, X8)\",\n  },\n  \"6ag633d941o7v\": {\n    name: \"XcmV3Junction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.junction.Junction\", \"staging_xcm.v4.junction.Junction\"],\n    type: \"Enum(Parachain, AccountId32, AccountIndex64, AccountKey20, PalletInstance, GeneralIndex, GeneralKey, OnlyChild, Plurality, GlobalConsensus)\",\n  },\n  \"982q4n5eor6ih\": {\n    name: \"XcmV3JunctionNetworkId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.junction.NetworkId\", \"staging_xcm.v4.junction.NetworkId\"],\n    type: \"Enum(ByGenesis, ByFork, Polkadot, Kusama, Westend, Rococo, Wococo, Ethereum, BitcoinCore, BitcoinCash, PolkadotBulletin)\",\n  },\n  bd6859lkk2107: {\n    name: \"XcmV3JunctionBodyId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.junction.BodyId\"],\n    type: \"Enum(Unit, Moniker, Index, Executive, Technical, Legislative, Judicial, Defense, Administration, Treasury)\",\n  },\n  f5frjbmqcgt5k: {\n    name: \"XcmV2JunctionBodyPart\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.junction.BodyPart\", \"xcm.v2.BodyPart\"],\n    type: \"Enum(Voice, Members, Fraction, AtLeastProportion, MoreThanProportion)\",\n  },\n  andndh150vhd7: {\n    name: \"XcmV4Instruction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"staging_xcm.v4.Instruction\"],\n    type: \"Enum(WithdrawAsset, ReserveAssetDeposited, ReceiveTeleportedAsset, QueryResponse, TransferAsset, TransferReserveAsset, Transact, HrmpNewChannelOpenRequest, HrmpChannelAccepted, HrmpChannelClosing, ClearOrigin, DescendOrigin, ReportError, DepositAsset, DepositReserveAsset, ExchangeAsset, InitiateReserveWithdraw, InitiateTeleport, ReportHolding, BuyExecution, RefundSurplus, SetErrorHandler, SetAppendix, ClearError, ClaimAsset, Trap, SubscribeVersion, UnsubscribeVersion, BurnAsset, ExpectAsset, ExpectOrigin, ExpectError, ExpectTransactStatus, QueryPallet, ExpectPallet, ReportTransactStatus, ClearTransactStatus, UniversalOrigin, ExportMessage, LockAsset, UnlockAsset, NoteUnlockable, RequestUnlock, SetFeesMode, SetTopic, ClearTopic, AliasOrigin, UnpaidExecution)\",\n  },\n  d2d2vjc8h66mf: {\n    name: \"XcmV3MultiassetFungibility\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\n      \"xcm.v3.multiasset.Fungibility\",\n      \"staging_xcm.v4.asset.Fungibility\",\n    ],\n    type: \"Enum(Fungible, NonFungible)\",\n  },\n  \"9d6sev8uj006q\": {\n    name: \"XcmV3MultiassetAssetInstance\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\n      \"xcm.v3.multiasset.AssetInstance\",\n      \"staging_xcm.v4.asset.AssetInstance\",\n    ],\n    type: \"Enum(Undefined, Index, Array4, Array8, Array16, Array32)\",\n  },\n  csmfdagrgtkj5: {\n    name: \"XcmV4Response\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"staging_xcm.v4.Response\"],\n    type: \"Enum(Null, Assets, ExecutionResult, Version, PalletsInfo, DispatchResult)\",\n  },\n  \"5g0925eiftlcf\": {\n    name: \"XcmV3MaybeErrorCode\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.MaybeErrorCode\"],\n    type: \"Enum(Success, Error, TruncatedError)\",\n  },\n  \"2dcitigd3tk41\": {\n    name: \"XcmV2OriginKind\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.OriginKind\"],\n    type: \"Enum(Native, SovereignAccount, Superuser, Xcm)\",\n  },\n  biemf2h6nh9pa: {\n    name: \"XcmV4AssetAssetFilter\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"staging_xcm.v4.asset.AssetFilter\"],\n    type: \"Enum(Definite, Wild)\",\n  },\n  e252kk4p31sv6: {\n    name: \"XcmV4AssetWildAsset\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"staging_xcm.v4.asset.WildAsset\"],\n    type: \"Enum(All, AllOf, AllCounted, AllOfCounted)\",\n  },\n  cg1p3hrtv6n5f: {\n    name: \"XcmV2MultiassetWildFungibility\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\n      \"xcm.v2.multiasset.WildFungibility\",\n      \"xcm.v3.multiasset.WildFungibility\",\n      \"staging_xcm.v4.asset.WildFungibility\",\n    ],\n    type: \"Enum(Fungible, NonFungible)\",\n  },\n  \"769fta165mequ\": {\n    name: \"XcmV3WeightLimit\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.WeightLimit\"],\n    type: \"Enum(Unlimited, Limited)\",\n  },\n  \"7vujittrav0br\": {\n    name: \"XcmVersionedAssets\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.VersionedAssets\"],\n    type: \"Enum(V2, V3, V4)\",\n  },\n  es1oivk962n6f: {\n    name: \"XcmV2MultiassetAssetId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multiasset.AssetId\"],\n    type: \"Enum(Concrete, Abstract)\",\n  },\n  aquvu9nu2es05: {\n    name: \"XcmV2MultilocationJunctions\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multilocation.Junctions\"],\n    type: \"Enum(Here, X1, X2, X3, X4, X5, X6, X7, X8)\",\n  },\n  \"505kan7sticn1\": {\n    name: \"XcmV2Junction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.junction.Junction\"],\n    type: \"Enum(Parachain, AccountId32, AccountIndex64, AccountKey20, PalletInstance, GeneralIndex, GeneralKey, OnlyChild, Plurality)\",\n  },\n  \"710b6mh49al4f\": {\n    name: \"XcmV2NetworkId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.NetworkId\"],\n    type: \"Enum(Any, Named, Polkadot, Kusama)\",\n  },\n  \"46j01db9schbn\": {\n    name: \"XcmV2BodyId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.BodyId\"],\n    type: \"Enum(Unit, Named, Index, Executive, Technical, Legislative, Judicial, Defense, Administration, Treasury)\",\n  },\n  \"1e4e6h17tes8n\": {\n    name: \"XcmV2MultiassetFungibility\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multiasset.Fungibility\"],\n    type: \"Enum(Fungible, NonFungible)\",\n  },\n  \"11avansl9buvp\": {\n    name: \"XcmV2MultiassetAssetInstance\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multiasset.AssetInstance\"],\n    type: \"Enum(Undefined, Index, Array4, Array8, Array16, Array32, Blob)\",\n  },\n  \"4cajo1lbs9cmt\": {\n    name: \"XcmV3MultiassetAssetId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.multiasset.AssetId\"],\n    type: \"Enum(Concrete, Abstract)\",\n  },\n  ap9sokavcmq5o: {\n    name: \"XcmVersionedLocation\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.VersionedLocation\"],\n    type: \"Enum(V2, V3, V4)\",\n  },\n  \"4hum2k6q9amhf\": {\n    name: \"ProcessMessageError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"frame_support.traits.messages.ProcessMessageError\"],\n    type: \"Enum(BadFormat, Corrupt, Unsupported, Overweight, Yield)\",\n  },\n  b1t99vn44417o: {\n    name: \"UtilityEvent\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_utility.pallet.Event\"],\n    type: \"Enum(BatchInterrupted, BatchCompleted, BatchCompletedWithErrors, ItemCompleted, ItemFailed, DispatchedAs)\",\n  },\n  \"5830pdel8nng3\": {\n    name: \"MultisigEvent\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_multisig.pallet.Event\"],\n    type: \"Enum(NewMultisig, MultisigApproval, MultisigExecuted, MultisigCancelled)\",\n  },\n  \"302o6h1bqiqgu\": {\n    name: \"PreimageEvent\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_preimage.pallet.Event\"],\n    type: \"Enum(Noted, Requested, Cleared)\",\n  },\n  \"890aui9hh0f9q\": {\n    name: \"AssetRateEvent\",\n    chains:\n      \"polkadot, polkadot.collectives, rococo, westend, westend.collectives\",\n    paths: [\"pallet_asset_rate.pallet.Event\"],\n    type: \"Enum(AssetRateCreated, AssetRateRemoved, AssetRateUpdated)\",\n  },\n  cc0rvpoin8ucr: {\n    name: \"VersionedLocatableAsset\",\n    chains:\n      \"polkadot, polkadot.collectives, rococo, westend, westend.collectives\",\n    paths: [\"polkadot_runtime_common.impls.VersionedLocatableAsset\"],\n    type: \"Enum(V3, V4)\",\n  },\n  cuaiiptinb4jf: {\n    name: \"Version\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_vesting.Releases\", \"pallet_alliance.types.Version\"],\n    type: \"Enum(V0, V1)\",\n  },\n  cgde8bg5ldqpa: {\n    name: \"PreimagesBounded\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"frame_support.traits.preimages.Bounded\"],\n    type: \"Enum(Legacy, Inline, Lookup)\",\n  },\n  \"5a3qnpcq081o6\": {\n    name: \"MultiAddress\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.multiaddress.MultiAddress\"],\n    type: \"Enum(Id, Index, Raw, Address32, Address20)\",\n  },\n  \"3vrnp048j3b2d\": {\n    name: \"BalancesAdjustmentDirection\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_balances.types.AdjustmentDirection\"],\n    type: \"Enum(Increase, Decrease)\",\n  },\n  m2dj93rjj6ks: {\n    name: \"XcmVersionedXcm\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.VersionedXcm\"],\n    type: \"Enum(V2, V3, V4)\",\n  },\n  ml0q5vk4ei4e: {\n    name: \"XcmV2Instruction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.Instruction\"],\n    type: \"Enum(WithdrawAsset, ReserveAssetDeposited, ReceiveTeleportedAsset, QueryResponse, TransferAsset, TransferReserveAsset, Transact, HrmpNewChannelOpenRequest, HrmpChannelAccepted, HrmpChannelClosing, ClearOrigin, DescendOrigin, ReportError, DepositAsset, DepositReserveAsset, ExchangeAsset, InitiateReserveWithdraw, InitiateTeleport, QueryHolding, BuyExecution, RefundSurplus, SetErrorHandler, SetAppendix, ClearError, ClaimAsset, Trap, SubscribeVersion, UnsubscribeVersion)\",\n  },\n  \"30v4njes1avsr\": {\n    name: \"XcmV2Response\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.Response\"],\n    type: \"Enum(Null, Assets, ExecutionResult, Version)\",\n  },\n  amc6gl7bd9por: {\n    name: \"XcmV2TraitsError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.traits.Error\"],\n    type: \"Enum(Overflow, Unimplemented, UntrustedReserveLocation, UntrustedTeleportLocation, MultiLocationFull, MultiLocationNotInvertible, BadOrigin, InvalidLocation, AssetNotFound, FailedToTransactAsset, NotWithdrawable, LocationCannotHold, ExceedsMaxMessageSize, DestinationUnsupported, Transport, Unroutable, UnknownClaim, FailedToDecode, MaxWeightInvalid, NotHoldingFees, TooExpensive, Trap, UnhandledXcmVersion, WeightLimitReached, Barrier, WeightNotComputable)\",\n  },\n  fddrr93rdab23: {\n    name: \"XcmV2MultiAssetFilter\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multiasset.MultiAssetFilter\"],\n    type: \"Enum(Definite, Wild)\",\n  },\n  \"3jnpd4dmb650\": {\n    name: \"XcmV2MultiassetWildMultiAsset\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.multiasset.WildMultiAsset\"],\n    type: \"Enum(All, AllOf)\",\n  },\n  adqdire0qjg0e: {\n    name: \"XcmV2WeightLimit\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v2.WeightLimit\"],\n    type: \"Enum(Unlimited, Limited)\",\n  },\n  \"8c614g2bc4iej\": {\n    name: \"XcmV3Instruction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.Instruction\"],\n    type: \"Enum(WithdrawAsset, ReserveAssetDeposited, ReceiveTeleportedAsset, QueryResponse, TransferAsset, TransferReserveAsset, Transact, HrmpNewChannelOpenRequest, HrmpChannelAccepted, HrmpChannelClosing, ClearOrigin, DescendOrigin, ReportError, DepositAsset, DepositReserveAsset, ExchangeAsset, InitiateReserveWithdraw, InitiateTeleport, ReportHolding, BuyExecution, RefundSurplus, SetErrorHandler, SetAppendix, ClearError, ClaimAsset, Trap, SubscribeVersion, UnsubscribeVersion, BurnAsset, ExpectAsset, ExpectOrigin, ExpectError, ExpectTransactStatus, QueryPallet, ExpectPallet, ReportTransactStatus, ClearTransactStatus, UniversalOrigin, ExportMessage, LockAsset, UnlockAsset, NoteUnlockable, RequestUnlock, SetFeesMode, SetTopic, ClearTopic, AliasOrigin, UnpaidExecution)\",\n  },\n  \"7ffbrur6hobca\": {\n    name: \"XcmV3Response\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.Response\"],\n    type: \"Enum(Null, Assets, ExecutionResult, Version, PalletsInfo, DispatchResult)\",\n  },\n  ukot04uppvug: {\n    name: \"XcmV3MultiassetMultiAssetFilter\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.multiasset.MultiAssetFilter\"],\n    type: \"Enum(Definite, Wild)\",\n  },\n  \"332pk9bjbk7p3\": {\n    name: \"XcmV3MultiassetWildMultiAsset\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.v3.multiasset.WildMultiAsset\"],\n    type: \"Enum(All, AllOf, AllCounted, AllOfCounted)\",\n  },\n  a3gvv195g4jot: {\n    name: \"DispatchRawOrigin\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"frame_support.dispatch.RawOrigin\"],\n    type: \"Enum(Root, Signed, None)\",\n  },\n  \"5svrq9ei0ks3q\": {\n    name: \"XcmPalletOrigin\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_xcm.pallet.Origin\"],\n    type: \"Enum(Xcm, Response)\",\n  },\n  e3otks9vj8a3b: {\n    name: \"TraitsScheduleDispatchTime\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"frame_support.traits.schedule.DispatchTime\"],\n    type: \"Enum(At, After)\",\n  },\n  \"68cld6q6s1gvo\": {\n    name: \"TreasuryEvent\",\n    chains:\n      \"polkadot, polkadot.collectives, rococo, westend, westend.collectives\",\n    paths: [\"pallet_treasury.pallet.Event\"],\n    type: \"Enum(Proposed, Spending, Awarded, Rejected, Burnt, Rollover, Deposit, SpendApproved, UpdatedInactive, AssetSpendApproved, AssetSpendVoided, Paid, PaymentFailed, SpendProcessed)\",\n  },\n  bl1lrline4to8: {\n    name: \"Phase\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"frame_system.Phase\"],\n    type: \"Enum(ApplyExtrinsic, Finalization, Initialization)\",\n  },\n  f331um1stp6g0: {\n    name: \"UpgradeGoAhead\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\n      \"polkadot_primitives.v6.UpgradeGoAhead\",\n      \"polkadot_primitives.v7.UpgradeGoAhead\",\n    ],\n    type: \"Enum(Abort, GoAhead)\",\n  },\n  \"9pobt6o24rqdc\": {\n    name: \"UpgradeRestriction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\n      \"polkadot_primitives.v6.UpgradeRestriction\",\n      \"polkadot_primitives.v7.UpgradeRestriction\",\n    ],\n    type: \"Enum(Present)\",\n  },\n  bgr9ooktct68l: {\n    name: \"BalancesTypesReasons\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_balances.types.Reasons\"],\n    type: \"Enum(Fee, Misc, All)\",\n  },\n  \"3nveejfjt6cjg\": {\n    name: \"WestendRuntimeRuntimeHoldReason\",\n    chains: \"polkadot.collectives, westend, westend.collectives\",\n    paths: [\n      \"collectives_polkadot_runtime.RuntimeHoldReason\",\n      \"westend_runtime.RuntimeHoldReason\",\n      \"collectives_westend_runtime.RuntimeHoldReason\",\n    ],\n    type: \"Enum(Preimage)\",\n  },\n  hpogi4p6q6h5: {\n    name: \"PreimagePalletHoldReason\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_preimage.pallet.HoldReason\"],\n    type: \"Enum(Preimage)\",\n  },\n  fcqan2gt5adqc: {\n    name: \"TransactionPaymentReleases\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_transaction_payment.Releases\"],\n    type: \"Enum(V1Ancient, V2)\",\n  },\n  \"1pja0i3r5p1gp\": {\n    name: \"XcmPalletQueryStatus\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_xcm.pallet.QueryStatus\"],\n    type: \"Enum(Pending, VersionNotifier, Ready)\",\n  },\n  \"543plq9vh7s3m\": {\n    name: \"XcmVersionedResponse\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.VersionedResponse\"],\n    type: \"Enum(V2, V3, V4)\",\n  },\n  \"6c90ieeim9tjd\": {\n    name: \"XcmPalletVersionMigrationStage\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"pallet_xcm.pallet.VersionMigrationStage\"],\n    type: \"Enum(MigrateSupportedVersion, MigrateVersionNotifiers, NotifyCurrentTargets, MigrateAndNotifyOldTargets)\",\n  },\n  fou8ip7o6q00t: {\n    name: \"XcmVersionedAssetId\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"xcm.VersionedAssetId\"],\n    type: \"Enum(V3, V4)\",\n  },\n  \"515gfvv2a6c4o\": {\n    name: \"PreimageOldRequestStatus\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_preimage.OldRequestStatus\"],\n    type: \"Enum(Unrequested, Requested)\",\n  },\n  \"2gj0h0im54fqd\": {\n    name: \"PreimageRequestStatus\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_preimage.RequestStatus\"],\n    type: \"Enum(Unrequested, Requested)\",\n  },\n  \"926pkc9itkbdk\": {\n    name: \"ReferendaTypesCurve\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_referenda.types.Curve\"],\n    type: \"Enum(LinearDecreasing, SteppedDecreasing, Reciprocal)\",\n  },\n  \"8mdo9fqa201s6\": {\n    name: \"TreasuryPaymentState\",\n    chains:\n      \"polkadot, polkadot.collectives, kusama, rococo, westend, westend.collectives\",\n    paths: [\"pallet_treasury.PaymentState\"],\n    type: \"Enum(Pending, Attempted, Failed)\",\n  },\n  bkbo8vqdq5g5a: {\n    name: \"MultiSignature\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.MultiSignature\"],\n    type: \"Enum(Ed25519, Sr25519, Ecdsa)\",\n  },\n  \"8slcnsmtfbubd\": {\n    name: \"ExtensionsCheckMortality\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.generic.era.Era\"],\n    type: \"Enum(Immortal, Mortal1, Mortal2, Mortal3, Mortal4, Mortal5, Mortal6, Mortal7, Mortal8, Mortal9, Mortal10, Mortal11, Mortal12, Mortal13, Mortal14, Mortal15, Mortal16, Mortal17, Mortal18, Mortal19, Mortal20, Mortal21, Mortal22, Mortal23, Mortal24, Mortal25, Mortal26, Mortal27, Mortal28, Mortal29, Mortal30, Mortal31, Mortal32, Mortal33, Mortal34, Mortal35, Mortal36, Mortal37, Mortal38, Mortal39, Mortal40, Mortal41, Mortal42, Mortal43, Mortal44, Mortal45, Mortal46, Mortal47, Mortal48, Mortal49, Mortal50, Mortal51, Mortal52, Mortal53, Mortal54, Mortal55, Mortal56, Mortal57, Mortal58, Mortal59, Mortal60, Mortal61, Mortal62, Mortal63, Mortal64, Mortal65, Mortal66, Mortal67, Mortal68, Mortal69, Mortal70, Mortal71, Mortal72, Mortal73, Mortal74, Mortal75, Mortal76, Mortal77, Mortal78, Mortal79, Mortal80, Mortal81, Mortal82, Mortal83, Mortal84, Mortal85, Mortal86, Mortal87, Mortal88, Mortal89, Mortal90, Mortal91, Mortal92, Mortal93, Mortal94, Mortal95, Mortal96, Mortal97, Mortal98, Mortal99, Mortal100, Mortal101, Mortal102, Mortal103, Mortal104, Mortal105, Mortal106, Mortal107, Mortal108, Mortal109, Mortal110, Mortal111, Mortal112, Mortal113, Mortal114, Mortal115, Mortal116, Mortal117, Mortal118, Mortal119, Mortal120, Mortal121, Mortal122, Mortal123, Mortal124, Mortal125, Mortal126, Mortal127, Mortal128, Mortal129, Mortal130, Mortal131, Mortal132, Mortal133, Mortal134, Mortal135, Mortal136, Mortal137, Mortal138, Mortal139, Mortal140, Mortal141, Mortal142, Mortal143, Mortal144, Mortal145, Mortal146, Mortal147, Mortal148, Mortal149, Mortal150, Mortal151, Mortal152, Mortal153, Mortal154, Mortal155, Mortal156, Mortal157, Mortal158, Mortal159, Mortal160, Mortal161, Mortal162, Mortal163, Mortal164, Mortal165, Mortal166, Mortal167, Mortal168, Mortal169, Mortal170, Mortal171, Mortal172, Mortal173, Mortal174, Mortal175, Mortal176, Mortal177, Mortal178, Mortal179, Mortal180, Mortal181, Mortal182, Mortal183, Mortal184, Mortal185, Mortal186, Mortal187, Mortal188, Mortal189, Mortal190, Mortal191, Mortal192, Mortal193, Mortal194, Mortal195, Mortal196, Mortal197, Mortal198, Mortal199, Mortal200, Mortal201, Mortal202, Mortal203, Mortal204, Mortal205, Mortal206, Mortal207, Mortal208, Mortal209, Mortal210, Mortal211, Mortal212, Mortal213, Mortal214, Mortal215, Mortal216, Mortal217, Mortal218, Mortal219, Mortal220, Mortal221, Mortal222, Mortal223, Mortal224, Mortal225, Mortal226, Mortal227, Mortal228, Mortal229, Mortal230, Mortal231, Mortal232, Mortal233, Mortal234, Mortal235, Mortal236, Mortal237, Mortal238, Mortal239, Mortal240, Mortal241, Mortal242, Mortal243, Mortal244, Mortal245, Mortal246, Mortal247, Mortal248, Mortal249, Mortal250, Mortal251, Mortal252, Mortal253, Mortal254, Mortal255)\",\n  },\n  \"8ur8bpe8ahbdb\": {\n    name: \"TransactionValidityError\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.transaction_validity.TransactionValidityError\"],\n    type: \"Enum(Invalid, Unknown)\",\n  },\n  \"9jj84pbmaraa\": {\n    name: \"TransactionValidityInvalidTransaction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.transaction_validity.InvalidTransaction\"],\n    type: \"Enum(Call, Payment, Future, Stale, BadProof, AncientBirthBlock, ExhaustsResources, Custom, BadMandatory, MandatoryValidation, BadSigner)\",\n  },\n  avhrl5td7rf4q: {\n    name: \"TransactionValidityUnknownTransaction\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.transaction_validity.UnknownTransaction\"],\n    type: \"Enum(CannotLookup, NoUnsignedValidator, Custom)\",\n  },\n  cpkfkhj5jq924: {\n    name: \"TransactionValidityTransactionSource\",\n    chains:\n      \"polkadot, polkadot.assetHub, polkadot.bridgeHub, polkadot.collectives, kusama, kusama.assetHub, kusama.bridgeHub, rococo, rococo.assetHub, westend, westend.assetHub, westend.bridgeHub, westend.collectives\",\n    paths: [\"sp_runtime.transaction_validity.TransactionSource\"],\n    type: \"Enum(InBlock, Local, External)\",\n  },\n  e4o50pgs5mq4e: {\n    name: \"AssetsEvent\",\n    chains:\n      \"polkadot.assetHub, kusama.assetHub, rococo.assetHub, westend.assetHub\",\n    paths: [\"pallet_assets.pallet.Event\"],\n    type: \"Enum(Created, Issued, Transferred, Burned, TeamChanged, OwnerChanged, Frozen, Thawed, AssetFrozen, AssetThawed, AccountsDestroyed, ApprovalsDestroyed, DestructionStarted, Destroyed, ForceCreated, MetadataSet, MetadataCleared, ApprovedTransfer, ApprovalCancelled, TransferredApproved, AssetStatusChanged, AssetMinBalanceChanged, Touched, Blocked)\",\n  },\n  cenmqk68rcank: {\n    name: \"PolkadotRuntimeEvent\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.RuntimeEvent\"],\n    type: \"Enum(System, Scheduler, Preimage, Indices, Balances, TransactionPayment, Staking, Offences, Session, Grandpa, ImOnline, Treasury, ConvictionVoting, Referenda, Whitelist, Claims, Vesting, Utility, Identity, Proxy, Multisig, Bounties, ChildBounties, ElectionProviderMultiPhase, VoterList, NominationPools, FastUnstake, ParaInclusion, Paras, Hrmp, ParasDisputes, Registrar, Slots, Auctions, Crowdloan, StateTrieMigration, XcmPallet, MessageQueue, AssetRate)\",\n  },\n  \"88qf3i6ugbvsp\": {\n    name: \"IndicesEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_indices.pallet.Event\"],\n    type: \"Enum(IndexAssigned, IndexFreed, IndexFrozen)\",\n  },\n  \"3bd4nvc4e2g3p\": {\n    name: \"StakingEvent\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_staking.pallet.pallet.Event\"],\n    type: \"Enum(EraPaid, Rewarded, Slashed, SlashReported, OldSlashingReportDiscarded, StakersElected, Bonded, Unbonded, Withdrawn, Kicked, StakingElectionFailed, Chilled, PayoutStarted, ValidatorPrefsSet, SnapshotVotersSizeExceeded, SnapshotTargetsSizeExceeded, ForceEra, ControllerBatchDeprecated)\",\n  },\n  \"4peoofcn0loqr\": {\n    name: \"StakingRewardDestination\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_staking.RewardDestination\"],\n    type: \"Enum(Staked, Stash, Controller, Account, None)\",\n  },\n  bs10onqorvq4b: {\n    name: \"StakingForcing\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_staking.Forcing\"],\n    type: \"Enum(NotForcing, ForceNew, ForceNone, ForceAlways)\",\n  },\n  \"1tac42poi01n8\": {\n    name: \"OffencesEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_offences.pallet.Event\"],\n    type: \"Enum(Offence)\",\n  },\n  cg9t1ptkdnbi3: {\n    name: \"GrandpaEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_grandpa.pallet.Event\"],\n    type: \"Enum(NewAuthorities, Paused, Resumed)\",\n  },\n  \"9jqrili6gan6u\": {\n    name: \"ImOnlineEvent\",\n    chains: \"polkadot, kusama\",\n    paths: [\n      \"polkadot_runtime.pallet_im_online.pallet.Event\",\n      \"pallet_im_online.pallet.Event\",\n    ],\n    type: \"Enum(HeartbeatReceived, AllGood, SomeOffline)\",\n  },\n  ajkhn97prklo5: {\n    name: \"ConvictionVotingEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_conviction_voting.pallet.Event\"],\n    type: \"Enum(Delegated, Undelegated)\",\n  },\n  \"60a08att731k3\": {\n    name: \"PolkadotRuntimeRuntimeCall\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.RuntimeCall\"],\n    type: \"Enum(System, Scheduler, Preimage, Babe, Timestamp, Indices, Balances, Staking, Session, Grandpa, Treasury, ConvictionVoting, Referenda, Whitelist, Claims, Vesting, Utility, Identity, Proxy, Multisig, Bounties, ChildBounties, ElectionProviderMultiPhase, VoterList, NominationPools, FastUnstake, Configuration, ParasShared, ParaInclusion, ParaInherent, Paras, Initializer, Hrmp, ParasDisputes, ParasSlashing, Registrar, Slots, Auctions, Crowdloan, StateTrieMigration, XcmPallet, MessageQueue, AssetRate, Beefy)\",\n  },\n  ek17d55ubjjm9: {\n    name: \"BabeDigestsNextConfigDescriptor\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"sp_consensus_babe.digests.NextConfigDescriptor\"],\n    type: \"Enum(V1)\",\n  },\n  \"3g7a8g60ho721\": {\n    name: \"BabeAllowedSlots\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"sp_consensus_babe.AllowedSlots\"],\n    type: \"Enum(PrimarySlots, PrimaryAndSecondaryPlainSlots, PrimaryAndSecondaryVRFSlots)\",\n  },\n  fms5l9j358vie: {\n    name: \"StakingPalletConfigOpBig\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\n      \"pallet_staking.pallet.pallet.ConfigOp\",\n      \"pallet_nomination_pools.ConfigOp\",\n    ],\n    type: \"Enum(Noop, Set, Remove)\",\n  },\n  bb454pgf9ofrq: {\n    name: \"StakingPalletConfigOp\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\n      \"pallet_staking.pallet.pallet.ConfigOp\",\n      \"pallet_nomination_pools.ConfigOp\",\n    ],\n    type: \"Enum(Noop, Set, Remove)\",\n  },\n  brvqfk00lp42n: {\n    name: \"GrandpaEquivocation\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"sp_consensus_grandpa.Equivocation\"],\n    type: \"Enum(Prevote, Precommit)\",\n  },\n  cee77qkk3c81t: {\n    name: \"ConvictionVotingVoteAccountVote\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_conviction_voting.vote.AccountVote\"],\n    type: \"Enum(Standard, Split, SplitAbstain)\",\n  },\n  \"85ca14rjo42j5\": {\n    name: \"VotingConviction\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_conviction_voting.conviction.Conviction\"],\n    type: \"Enum(None, Locked1x, Locked2x, Locked3x, Locked4x, Locked5x, Locked6x)\",\n  },\n  bnvffgg4ckmsj: {\n    name: \"PolkadotRuntimeOriginCaller\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.OriginCaller\"],\n    type: \"Enum(system, Origins, ParachainsOrigin, XcmPallet, Void)\",\n  },\n  c0rsdcbsdt7kf: {\n    name: \"GovernanceOrigin\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.governance.origins.pallet_custom_origins.Origin\"],\n    type: \"Enum(StakingAdmin, Treasurer, FellowshipAdmin, GeneralAdmin, AuctionAdmin, LeaseAdmin, ReferendumCanceller, ReferendumKiller, SmallTipper, BigTipper, SmallSpender, MediumSpender, BigSpender, WhitelistedCaller, WishForChange)\",\n  },\n  \"49em457ob9ou0\": {\n    name: \"ParachainsOrigin\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.origin.pallet.Origin\"],\n    type: \"Enum(Parachain)\",\n  },\n  \"9lvi13skegcil\": {\n    name: \"ClaimsStatementKind\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"polkadot_runtime_common.claims.StatementKind\"],\n    type: \"Enum(Regular, Saft)\",\n  },\n  \"629bfqn3u6tle\": {\n    name: \"IdentityData\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_identity.types.Data\"],\n    type: \"Enum(None, Raw0, Raw1, Raw2, Raw3, Raw4, Raw5, Raw6, Raw7, Raw8, Raw9, Raw10, Raw11, Raw12, Raw13, Raw14, Raw15, Raw16, Raw17, Raw18, Raw19, Raw20, Raw21, Raw22, Raw23, Raw24, Raw25, Raw26, Raw27, Raw28, Raw29, Raw30, Raw31, Raw32, BlakeTwo256, Sha256, Keccak256, ShaThree256)\",\n  },\n  \"7ujvudkvg12so\": {\n    name: \"IdentityJudgement\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_identity.types.Judgement\"],\n    type: \"Enum(Unknown, FeePaid, Reasonable, KnownGood, OutOfDate, LowQuality, Erroneous)\",\n  },\n  \"3tnqcv58l4e62\": {\n    name: \"ProxyType\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.ProxyType\"],\n    type: \"Enum(Any, NonTransfer, Governance, Staking, IdentityJudgement, CancelProxy, Auction, NominationPools)\",\n  },\n  \"2bvq1blgrln1s\": {\n    name: \"NominationPoolsBondExtra\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.BondExtra\"],\n    type: \"Enum(FreeBalance, Rewards)\",\n  },\n  \"22g1a3o3q475f\": {\n    name: \"NominationPoolsPoolState\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.PoolState\"],\n    type: \"Enum(Open, Blocked, Destroying)\",\n  },\n  \"5tbcfetjk0h9h\": {\n    name: \"NominationPoolsConfigOp\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.ConfigOp\"],\n    type: \"Enum(Noop, Set, Remove)\",\n  },\n  \"8g50cqebfncn4\": {\n    name: \"NominationPoolsClaimPermission\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.ClaimPermission\"],\n    type: \"Enum(Permissioned, PermissionlessCompound, PermissionlessWithdraw, PermissionlessAll)\",\n  },\n  \"1lanl0ouai2l7\": {\n    name: \"NominationPoolsCommissionClaimPermission\",\n    chains: \"polkadot, westend\",\n    paths: [\"pallet_nomination_pools.CommissionClaimPermission\"],\n    type: \"Enum(Permissionless, Account)\",\n  },\n  \"9fihu1euvgfa\": {\n    name: \"PolkadotPrimitivesV6ExecutorParamsExecutorParam\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.executor_params.ExecutorParam\",\n      \"polkadot_primitives.v7.executor_params.ExecutorParam\",\n    ],\n    type: \"Enum(MaxMemoryPages, StackLogicalMax, StackNativeMax, PrecheckingMaxMemory, PvfPrepTimeout, PvfExecTimeout, WasmExtBulkMemory)\",\n  },\n  c7d5cscq9c6gi: {\n    name: \"PolkadotPrimitivesV6PvfPrepKind\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.PvfPrepKind\",\n      \"polkadot_primitives.v7.PvfPrepKind\",\n    ],\n    type: \"Enum(Precheck, Prepare)\",\n  },\n  \"4k4r9im11cdan\": {\n    name: \"PvfExecKind\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.PvfExecKind\",\n      \"polkadot_primitives.v6.PvfExecTimeoutKind\",\n      \"polkadot_primitives.v7.PvfExecKind\",\n    ],\n    type: \"Enum(Backing, Approval)\",\n  },\n  fqkhvelo2q77o: {\n    name: \"ValidityAttestation\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.ValidityAttestation\",\n      \"polkadot_primitives.v7.ValidityAttestation\",\n    ],\n    type: \"Enum(Implicit, Explicit)\",\n  },\n  bs56nuk6pe5bp: {\n    name: \"PolkadotPrimitivesV6DisputeStatement\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.DisputeStatement\",\n      \"polkadot_primitives.v7.DisputeStatement\",\n    ],\n    type: \"Enum(Valid, Invalid)\",\n  },\n  bta4mfoh73fpt: {\n    name: \"PolkadotPrimitivesV6ValidDisputeStatementKind\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.ValidDisputeStatementKind\",\n      \"polkadot_primitives.v7.ValidDisputeStatementKind\",\n    ],\n    type: \"Enum(Explicit, BackingSeconded, BackingValid, ApprovalChecking, ApprovalCheckingMultipleCandidates)\",\n  },\n  f9rpgkuafvsb4: {\n    name: \"InvalidDisputeStatementKind\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.InvalidDisputeStatementKind\",\n      \"polkadot_primitives.v7.InvalidDisputeStatementKind\",\n    ],\n    type: \"Enum(Explicit)\",\n  },\n  \"8jjr2rgj6aa2v\": {\n    name: \"SlashingOffenceKind\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.slashing.SlashingOffenceKind\",\n      \"polkadot_primitives.v7.slashing.SlashingOffenceKind\",\n    ],\n    type: \"Enum(ForInvalid, AgainstValid)\",\n  },\n  d7em8997pfm92: {\n    name: \"MultiSigner\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"sp_runtime.MultiSigner\"],\n    type: \"Enum(Ed25519, Sr25519, Ecdsa)\",\n  },\n  \"4sjnuvedkqa2r\": {\n    name: \"ParachainsInclusionAggregateMessageOrigin\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.inclusion.AggregateMessageOrigin\"],\n    type: \"Enum(Ump)\",\n  },\n  \"29a9v38btsv3g\": {\n    name: \"ParachainsInclusionUmpQueueId\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.inclusion.UmpQueueId\"],\n    type: \"Enum(Para)\",\n  },\n  \"9iria2mpol0si\": {\n    name: \"WhitelistEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_whitelist.pallet.Event\"],\n    type: \"Enum(CallWhitelisted, WhitelistedCallRemoved, WhitelistedCallDispatched)\",\n  },\n  \"2v2nj97k9o9e\": {\n    name: \"CommonClaimsEvent\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"polkadot_runtime_common.claims.pallet.Event\"],\n    type: \"Enum(Claimed)\",\n  },\n  d226b5du5oie9: {\n    name: \"VestingEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_vesting.pallet.Event\"],\n    type: \"Enum(VestingUpdated, VestingCompleted)\",\n  },\n  \"11i3h84sudutq\": {\n    name: \"ProxyEvent\",\n    chains: \"polkadot\",\n    paths: [\"pallet_proxy.pallet.Event\"],\n    type: \"Enum(ProxyExecuted, PureCreated, Announced, ProxyAdded, ProxyRemoved)\",\n  },\n  ei6k1tdcht3q: {\n    name: \"BountiesEvent\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"pallet_bounties.pallet.Event\"],\n    type: \"Enum(BountyProposed, BountyRejected, BountyBecameActive, BountyAwarded, BountyClaimed, BountyCanceled, BountyExtended, BountyApproved, CuratorProposed, CuratorUnassigned, CuratorAccepted)\",\n  },\n  a5gvqckojmehj: {\n    name: \"ChildBountiesEvent\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"pallet_child_bounties.pallet.Event\"],\n    type: \"Enum(Added, Awarded, Claimed, Canceled)\",\n  },\n  c5529239bmt3g: {\n    name: \"ElectionProviderMultiPhaseEvent\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_election_provider_multi_phase.pallet.Event\"],\n    type: \"Enum(SolutionStored, ElectionFinalized, ElectionFailed, Rewarded, Slashed, PhaseTransitioned)\",\n  },\n  htopdh9noje5: {\n    name: \"ElectionProviderMultiPhaseElectionCompute\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_election_provider_multi_phase.ElectionCompute\"],\n    type: \"Enum(OnChain, Signed, Unsigned, Fallback, Emergency)\",\n  },\n  \"1ra0103q36u4i\": {\n    name: \"ElectionProviderMultiPhasePhase\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_election_provider_multi_phase.Phase\"],\n    type: \"Enum(Off, Signed, Unsigned, Emergency)\",\n  },\n  \"2qbmdeolj2cue\": {\n    name: \"BagsListEvent\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_bags_list.pallet.Event\"],\n    type: \"Enum(Rebagged, ScoreUpdated)\",\n  },\n  \"14qmevhulqskl\": {\n    name: \"NominationPoolsEvent\",\n    chains: \"polkadot, westend\",\n    paths: [\"pallet_nomination_pools.pallet.Event\"],\n    type: \"Enum(Created, Bonded, PaidOut, Unbonded, Withdrawn, Destroyed, StateChanged, MemberRemoved, RolesUpdated, PoolSlashed, UnbondingPoolSlashed, PoolCommissionUpdated, PoolMaxCommissionUpdated, PoolCommissionChangeRateUpdated, PoolCommissionClaimPermissionUpdated, PoolCommissionClaimed, MinBalanceDeficitAdjusted, MinBalanceExcessAdjusted)\",\n  },\n  dri14nid3e46g: {\n    name: \"FastUnstakeEvent\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_fast_unstake.pallet.Event\"],\n    type: \"Enum(Unstaked, Slashed, BatchChecked, BatchFinished, InternalError)\",\n  },\n  dp2d78gpqj4r6: {\n    name: \"ParachainsInclusionEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.inclusion.pallet.Event\"],\n    type: \"Enum(CandidateBacked, CandidateIncluded, CandidateTimedOut, UpwardMessagesReceived)\",\n  },\n  cb4i7efmuhik2: {\n    name: \"ParachainsParasEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.paras.pallet.Event\"],\n    type: \"Enum(CurrentCodeUpdated, CurrentHeadUpdated, CodeUpgradeScheduled, NewHeadNoted, ActionQueued, PvfCheckStarted, PvfCheckAccepted, PvfCheckRejected)\",\n  },\n  c4alvt16n58rg: {\n    name: \"ParachainsHrmpEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.hrmp.pallet.Event\"],\n    type: \"Enum(OpenChannelRequested, OpenChannelCanceled, OpenChannelAccepted, ChannelClosed, HrmpChannelForceOpened, HrmpSystemChannelOpened, OpenChannelDepositsUpdated)\",\n  },\n  \"8vj9hqgjobpdo\": {\n    name: \"ParachainsDisputesEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.disputes.pallet.Event\"],\n    type: \"Enum(DisputeInitiated, DisputeConcluded, Revert)\",\n  },\n  a2kllcmf9u10g: {\n    name: \"ParachainsDisputeLocation\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.disputes.DisputeLocation\"],\n    type: \"Enum(Local, Remote)\",\n  },\n  \"6hem0avr1eoco\": {\n    name: \"ParachainsDisputeResult\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.disputes.DisputeResult\"],\n    type: \"Enum(Valid, Invalid)\",\n  },\n  \"1pil5vhej188n\": {\n    name: \"CommonParasRegistrarEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_common.paras_registrar.pallet.Event\"],\n    type: \"Enum(Registered, Deregistered, Reserved, Swapped)\",\n  },\n  fdctp8g6s725t: {\n    name: \"CommonSlotsEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_common.slots.pallet.Event\"],\n    type: \"Enum(NewLeasePeriod, Leased)\",\n  },\n  b1eprmg9d9eh2: {\n    name: \"CommonAuctionsEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_common.auctions.pallet.Event\"],\n    type: \"Enum(AuctionStarted, AuctionClosed, Reserved, Unreserved, ReserveConfiscated, BidAccepted, WinningOffset)\",\n  },\n  aoe6t9b9v4nhr: {\n    name: \"CommonCrowdloanEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_common.crowdloan.pallet.Event\"],\n    type: \"Enum(Created, Contributed, Withdrew, PartiallyRefunded, AllRefunded, Dissolved, HandleBidResult, Edited, MemoUpdated, AddedToNewRaise)\",\n  },\n  eknqsk8t6a8oo: {\n    name: \"MessageQueueEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_message_queue.pallet.Event\"],\n    type: \"Enum(ProcessingFailed, Processed, OverweightEnqueued, PageReaped)\",\n  },\n  \"9uqvk3mspevjn\": {\n    name: \"BabeDigestsPreDigest\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\"sp_consensus_babe.digests.PreDigest\"],\n    type: \"Enum(Primary, SecondaryPlain, SecondaryVRF)\",\n  },\n  c1jnealhlqk0n: {\n    name: \"WestendRuntimeRuntimeFreezeReason\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\n      \"polkadot_runtime.RuntimeFreezeReason\",\n      \"staging_kusama_runtime.RuntimeFreezeReason\",\n      \"westend_runtime.RuntimeFreezeReason\",\n    ],\n    type: \"Enum(NominationPools)\",\n  },\n  \"8b4gf7pjdvue3\": {\n    name: \"NominationPoolsPalletFreezeReason\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.pallet.FreezeReason\"],\n    type: \"Enum(PoolMinBalance)\",\n  },\n  \"66mc66cqnpat1\": {\n    name: \"GrandpaStoredState\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_grandpa.StoredState\"],\n    type: \"Enum(Live, PendingPause, Paused, PendingResume)\",\n  },\n  e5ojv0odma80: {\n    name: \"ConvictionVotingVoteVoting\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"pallet_conviction_voting.vote.Voting\"],\n    type: \"Enum(Casting, Delegating)\",\n  },\n  \"8eicfpc71dtp2\": {\n    name: \"BountiesBountyStatus\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"pallet_bounties.BountyStatus\"],\n    type: \"Enum(Proposed, Approved, Funded, CuratorProposed, Active, PendingPayout)\",\n  },\n  \"8fgf6e6g02u7k\": {\n    name: \"ChildBountyStatus\",\n    chains: \"polkadot, kusama, rococo\",\n    paths: [\"pallet_child_bounties.ChildBountyStatus\"],\n    type: \"Enum(Added, CuratorProposed, Active, PendingPayout)\",\n  },\n  \"5h5t0elhnbseq\": {\n    name: \"BagsListListListError\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_bags_list.list.ListError\"],\n    type: \"Enum(Duplicate, NotHeavier, NotInSameBag, NodeNotFound)\",\n  },\n  \"8s9terlv6i0tr\": {\n    name: \"NominationPoolsPalletDefensiveError\",\n    chains: \"polkadot, kusama, westend\",\n    paths: [\"pallet_nomination_pools.pallet.DefensiveError\"],\n    type: \"Enum(NotEnoughSpaceInUnbondPool, PoolNotFound, RewardPoolNotFound, SubPoolsNotFound, BondedStashKilledPrematurely)\",\n  },\n  d7hag4aqiaqqv: {\n    name: \"PolkadotRuntimeParachainsSchedulerPalletCoreOccupied\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.scheduler.pallet.CoreOccupied\"],\n    type: \"Enum(Free, Paras)\",\n  },\n  f6qqn0nd8o1nf: {\n    name: \"PolkadotRuntimeParachainsSchedulerCommonAssignment\",\n    chains: \"polkadot, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.scheduler.common.Assignment\"],\n    type: \"Enum(Pool, Bulk)\",\n  },\n  \"14vn72umovb89\": {\n    name: \"PolkadotRuntimeParachainsParasPvfCheckCause\",\n    chains: \"polkadot, kusama\",\n    paths: [\"polkadot_runtime_parachains.paras.PvfCheckCause\"],\n    type: \"Enum(Onboarding, Upgrade)\",\n  },\n  \"341grmvm6j3e5\": {\n    name: \"ParachainsParasParaLifecycle\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.paras.ParaLifecycle\"],\n    type: \"Enum(Onboarding, Parathread, Parachain, UpgradingParathread, DowngradingParachain, OffboardingParathread, OffboardingParachain)\",\n  },\n  \"1rjg0rh02tt4m\": {\n    name: \"CommonCrowdloanLastContribution\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"polkadot_runtime_common.crowdloan.LastContribution\"],\n    type: \"Enum(Never, PreEnding, Ending)\",\n  },\n  b5fd0r2ju9g0l: {\n    name: \"CoreState\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.CoreState\",\n      \"polkadot_primitives.v7.CoreState\",\n    ],\n    type: \"Enum(Occupied, Scheduled, Free)\",\n  },\n  \"4vbt6tkj8bvqs\": {\n    name: \"OccupiedCoreAssumption\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.OccupiedCoreAssumption\",\n      \"polkadot_primitives.v7.OccupiedCoreAssumption\",\n    ],\n    type: \"Enum(Included, TimedOut, Free)\",\n  },\n  \"129huic8ces20\": {\n    name: \"CandidateEvent\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\n      \"polkadot_primitives.v6.CandidateEvent\",\n      \"polkadot_primitives.v7.CandidateEvent\",\n    ],\n    type: \"Enum(CandidateBacked, CandidateIncluded, CandidateTimedOut)\",\n  },\n  \"6rjjsd07rc200\": {\n    name: \"MmrPrimitivesError\",\n    chains: \"polkadot, kusama, rococo, westend\",\n    paths: [\"sp_mmr_primitives.Error\"],\n    type: \"Enum(InvalidNumericOp, Push, GetRoot, Commit, GenerateProof, Verify, LeafNotFound, PalletNotIncluded, InvalidLeafIndex, InvalidBestKnownBlock)\",\n  },\n  \"5lqhrmabiigof\": {\n    name: \"RuntimeError\",\n    chains: \"polkadot\",\n    paths: [\"polkadot_runtime.RuntimeError\"],\n    type: \"Enum(System, Scheduler, Preimage, Babe, Indices, Balances, Staking, Session, Grandpa, Treasury, ConvictionVoting, Referenda, Whitelist, Claims, Vesting, Utility, Identity, Proxy, Multisig, Bounties, ChildBounties, ElectionProviderMultiPhase, VoterList, NominationPools, FastUnstake, Configuration, ParaInclusion, ParaInherent, Paras, Hrmp, ParasDisputes, ParasSlashing, Registrar, Slots, Auctions, Crowdloan, StateTrieMigration, XcmPallet, MessageQueue, AssetRate, Beefy)\",\n  },\n  \"86spl6bcfm5it\": {\n    name: \"KsmXcmV3Junctions\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.junctions.Junctions\"],\n    type: \"Enum(Here, X1, X2, X3, X4, X5, X6, X7, X8)\",\n  },\n  aqrmqn3umgltq: {\n    name: \"KsmXcmV3Junction\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.junction.Junction\"],\n    type: \"Enum(Parachain, AccountId32, AccountIndex64, AccountKey20, PalletInstance, GeneralIndex, GeneralKey, OnlyChild, Plurality, GlobalConsensus)\",\n  },\n  \"4k01tahcim329\": {\n    name: \"KsmXcmV3JunctionNetworkId\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.junction.NetworkId\"],\n    type: \"Enum(ByGenesis, ByFork, Polkadot, Kusama, Westend, Rococo, Wococo, Ethereum, BitcoinCore, BitcoinCash)\",\n  },\n  c00osfu517iss: {\n    name: \"KsmXcmV3MultiassetAssetId\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.multiasset.AssetId\"],\n    type: \"Enum(Concrete, Abstract)\",\n  },\n  dbg08q7edq40c: {\n    name: \"XcmVersionedMultiLocation\",\n    chains: \"kusama\",\n    paths: [\"xcm.VersionedMultiLocation\"],\n    type: \"Enum(V2, V3)\",\n  },\n  \"3f4te0335d8h1\": {\n    name: \"WestendRuntimeGovernanceOriginsPalletCustomOriginsOrigin\",\n    chains: \"kusama, rococo, westend\",\n    paths: [\n      \"staging_kusama_runtime.governance.origins.pallet_custom_origins.Origin\",\n      \"rococo_runtime.governance.origins.pallet_custom_origins.Origin\",\n      \"westend_runtime.governance.origins.pallet_custom_origins.Origin\",\n    ],\n    type: \"Enum(StakingAdmin, Treasurer, FellowshipAdmin, GeneralAdmin, AuctionAdmin, LeaseAdmin, ReferendumCanceller, ReferendumKiller, SmallTipper, BigTipper, SmallSpender, MediumSpender, BigSpender, WhitelistedCaller, FellowshipInitiates, Fellows, FellowshipExperts, FellowshipMasters, Fellowship1Dan, Fellowship2Dan, Fellowship3Dan, Fellowship4Dan, Fellowship5Dan, Fellowship6Dan, Fellowship7Dan, Fellowship8Dan, Fellowship9Dan)\",\n  },\n  \"1r9hjo7723qso\": {\n    name: \"KsmXcmPalletOrigin\",\n    chains: \"kusama\",\n    paths: [\"pallet_xcm.pallet.Origin\"],\n    type: \"Enum(Xcm, Response)\",\n  },\n  apijri6pqtqte: {\n    name: \"IdentityField\",\n    chains: \"kusama\",\n    paths: [\"pallet_identity.simple.IdentityField\"],\n    type: \"Enum(Display, Legal, Web, Riot, Email, PgpFingerprint, Image, Twitter)\",\n  },\n  \"2s1qfdh76bati\": {\n    name: \"PolkadotPrimitivesV5ExecutorParam\",\n    chains: \"kusama\",\n    paths: [\"polkadot_primitives.v6.executor_params.ExecutorParam\"],\n    type: \"Enum(MaxMemoryPages, StackLogicalMax, StackNativeMax, PrecheckingMaxMemory, PvfPrepTimeout, PvfExecTimeout, WasmExtBulkMemory)\",\n  },\n  \"1p5n9bbuf71e9\": {\n    name: \"PolkadotPrimitivesV5PvfPrepTimeoutKind\",\n    chains: \"kusama\",\n    paths: [\"polkadot_primitives.v6.PvfPrepTimeoutKind\"],\n    type: \"Enum(Precheck, Lenient)\",\n  },\n  b7nns1qbu48af: {\n    name: \"PolkadotPrimitivesV5DisputeStatement\",\n    chains: \"kusama\",\n    paths: [\"polkadot_primitives.v6.DisputeStatement\"],\n    type: \"Enum(Valid, Invalid)\",\n  },\n  e33c1balm2hk9: {\n    name: \"PolkadotPrimitivesV5ValidDisputeStatementKind\",\n    chains: \"kusama\",\n    paths: [\"polkadot_primitives.v6.ValidDisputeStatementKind\"],\n    type: \"Enum(Explicit, BackingSeconded, BackingValid, ApprovalChecking)\",\n  },\n  \"5f1g9rtdd19nm\": {\n    name: \"KsmXcmVersionedXcm\",\n    chains: \"kusama\",\n    paths: [\"xcm.VersionedXcm\"],\n    type: \"Enum(V2, V3)\",\n  },\n  css00hl25cgl4: {\n    name: \"KsmXcmV3Instruction\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.Instruction\"],\n    type: \"Enum(WithdrawAsset, ReserveAssetDeposited, ReceiveTeleportedAsset, QueryResponse, TransferAsset, TransferReserveAsset, Transact, HrmpNewChannelOpenRequest, HrmpChannelAccepted, HrmpChannelClosing, ClearOrigin, DescendOrigin, ReportError, DepositAsset, DepositReserveAsset, ExchangeAsset, InitiateReserveWithdraw, InitiateTeleport, ReportHolding, BuyExecution, RefundSurplus, SetErrorHandler, SetAppendix, ClearError, ClaimAsset, Trap, SubscribeVersion, UnsubscribeVersion, BurnAsset, ExpectAsset, ExpectOrigin, ExpectError, ExpectTransactStatus, QueryPallet, ExpectPallet, ReportTransactStatus, ClearTransactStatus, UniversalOrigin, ExportMessage, LockAsset, UnlockAsset, NoteUnlockable, RequestUnlock, SetFeesMode, SetTopic, ClearTopic, AliasOrigin, UnpaidExecution)\",\n  },\n  \"4e56rm9p07o27\": {\n    name: \"KsmXcmV3Response\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.Response\"],\n    type: \"Enum(Null, Assets, ExecutionResult, Version, PalletsInfo, DispatchResult)\",\n  },\n  \"9enf1rh4u3kii\": {\n    name: \"XcmV3MultiAssetFilter\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.multiasset.MultiAssetFilter\"],\n    type: \"Enum(Definite, Wild)\",\n  },\n  dhb8s9d0ie70f: {\n    name: \"XcmV3WildMultiAsset\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.multiasset.WildMultiAsset\"],\n    type: \"Enum(All, AllOf, AllCounted, AllOfCounted)\",\n  },\n  k93katrmbiat: {\n    name: \"XcmVersionedMultiAssets\",\n    chains: \"kusama\",\n    paths: [\"xcm.VersionedMultiAssets\"],\n    type: \"Enum(V2, V3)\",\n  },\n  a4b928jbpau7j: {\n    name: \"RecoveryEvent\",\n    chains: \"kusama, rococo, westend\",\n    paths: [\"pallet_recovery.pallet.Event\"],\n    type: \"Enum(RecoveryCreated, RecoveryInitiated, RecoveryVouched, RecoveryClosed, AccountRecovered, RecoveryRemoved)\",\n  },\n  b01fvb3ofrhi8: {\n    name: \"XcmV3TraitsOutcome\",\n    chains: \"kusama\",\n    paths: [\"xcm.v3.traits.Outcome\"],\n    type: \"Enum(Complete, Incomplete, Error)\",\n  },\n  arof15is9j858: {\n    name: \"KsmBabeDigestsPreDigest\",\n    chains: \"kusama\",\n    paths: [\"sp_consensus_babe.digests.PreDigest\"],\n    type: \"Enum(Primary, SecondaryPlain, SecondaryVRF)\",\n  },\n  b19964q7gq7o9: {\n    name: \"PolkadotPrimitivesV5CoreOccupied\",\n    chains: \"kusama\",\n    paths: [\"polkadot_runtime_parachains.scheduler.pallet.CoreOccupied\"],\n    type: \"Enum(Free, Paras)\",\n  },\n  \"9us7218h9qeio\": {\n    name: \"KsmXcmPalletQueryStatus\",\n    chains: \"kusama\",\n    paths: [\"pallet_xcm.pallet.QueryStatus\"],\n    type: \"Enum(Pending, VersionNotifier, Ready)\",\n  },\n  fjsumieiq38rh: {\n    name: \"KsmXcmVersionedResponse\",\n    chains: \"kusama\",\n    paths: [\"xcm.VersionedResponse\"],\n    type: \"Enum(V2, V3)\",\n  },\n  \"9j0cetcqgjtaf\": {\n    name: \"KsmXcmVersionedAssetId\",\n    chains: \"kusama\",\n    paths: [\"xcm.VersionedAssetId\"],\n    type: \"Enum(V3)\",\n  },\n  j50joavafcok: {\n    name: \"WestendRuntimeOriginCaller\",\n    chains: \"rococo, westend\",\n    paths: [\"rococo_runtime.OriginCaller\", \"westend_runtime.OriginCaller\"],\n    type: \"Enum(system, Origins, ParachainsOrigin, XcmPallet, Void)\",\n  },\n  cgoc620vdl0ci: {\n    name: \"BrokerCoretimeInterfaceCoreAssignment\",\n    chains: \"rococo, westend\",\n    paths: [\"pallet_broker.coretime_interface.CoreAssignment\"],\n    type: \"Enum(Idle, Pool, Task)\",\n  },\n  \"910lmkjcsvii\": {\n    name: \"PolkadotRuntimeCommonAssignedSlotsSlotLeasePeriodStart\",\n    chains: \"rococo, westend\",\n    paths: [\"polkadot_runtime_common.assigned_slots.SlotLeasePeriodStart\"],\n    type: \"Enum(Current, Next)\",\n  },\n  \"9ct52rvkkel07\": {\n    name: \"PolkadotRuntimeParachainsAssignerOnDemandEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.assigner_on_demand.pallet.Event\"],\n    type: \"Enum(OnDemandOrderPlaced, SpotTrafficSet)\",\n  },\n  \"7t5v4k056sf3d\": {\n    name: \"PolkadotRuntimeParachainsCoretimeEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"polkadot_runtime_parachains.coretime.pallet.Event\"],\n    type: \"Enum(RevenueInfoRequested, CoreAssigned)\",\n  },\n  \"43e3ummb3h5dn\": {\n    name: \"PolkadotRuntimeCommonIdentityMigratorEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"polkadot_runtime_common.identity_migrator.pallet.Event\"],\n    type: \"Enum(IdentityReaped, DepositUpdated)\",\n  },\n  cn24k411b4s6t: {\n    name: \"PolkadotRuntimeCommonAssignedSlotsEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"polkadot_runtime_common.assigned_slots.pallet.Event\"],\n    type: \"Enum(PermanentSlotAssigned, TemporarySlotAssigned, MaxPermanentSlotsChanged, MaxTemporarySlotsChanged)\",\n  },\n  tofo38uukr3h: {\n    name: \"RootTestingEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"pallet_root_testing.pallet.Event\"],\n    type: \"Enum(DefensiveTestCall)\",\n  },\n  \"346qm7n7jcer7\": {\n    name: \"SudoEvent\",\n    chains: \"rococo, westend\",\n    paths: [\"pallet_sudo.pallet.Event\"],\n    type: \"Enum(Sudid, KeyChanged, KeyRemoved, SudoAsDone)\",\n  },\n  \"2pnuv6i9ju403\": {\n    name: \"ReferendaTypesReferendumInfo\",\n    chains: \"rococo, westend\",\n    paths: [\"pallet_referenda.types.ReferendumInfo\"],\n    type: \"Enum(Ongoing, Approved, Rejected, Cancelled, TimedOut, Killed)\",\n  },\n  fbiij71gdkvth: {\n    name: \"WestendRuntimeProxyType\",\n    chains: \"westend\",\n    paths: [\"westend_runtime.ProxyType\"],\n    type: \"Enum(Any, NonTransfer, Governance, Staking, SudoBalances, IdentityJudgement, CancelProxy, Auction, NominationPools)\",\n  },\n}\n\nconst knownTypes: KnownTypes = mapObject(\n  knownTypesRepository,\n  (entry: RepositoryEntry) => (typeof entry === \"string\" ? entry : entry.name),\n)\nexport default knownTypes\n","import type { V14, V15 } from \"@polkadot-api/substrate-bindings\"\n\nexport function applyWhitelist(\n  metadata: V14 | V15,\n  whitelist: string[] | null,\n): V14 | V15 {\n  if (!whitelist) return metadata\n\n  const allApis = whitelist.includes(\"api.*\")\n  const fullApiRegex = /^api\\.(\\w+)\\.\\*$/\n  const fullApiIncluded = whitelist\n    .map((w) => fullApiRegex.exec(w)?.[1])\n    .filter((v) => !!v)\n  const apis = allApis\n    ? metadata.apis\n    : metadata.apis\n        .map((api) => {\n          if (fullApiIncluded.includes(api.name)) return api\n\n          return {\n            ...api,\n            methods: api.methods.filter((method) =>\n              whitelist.includes(`api.${api.name}.${method.name}`),\n            ),\n          }\n        })\n        .filter((api) => api.methods.length > 0)\n\n  const fullPalletRegex = /^\\*\\.(\\w+)$/\n  const fullPallets = whitelist\n    .map((w) => fullPalletRegex.exec(w)?.[1])\n    .filter((v) => !!v)\n\n  const filterEnum = (\n    whitelistPrefix: string,\n    palletName: string,\n    lookupIdx: number | undefined,\n  ) => {\n    if (!lookupIdx) return lookupIdx\n    if (\n      whitelist.includes(`${whitelistPrefix}.*`) ||\n      whitelist.includes(`${whitelistPrefix}.${palletName}.*`)\n    )\n      return lookupIdx\n\n    const def = metadata.lookup[lookupIdx].def\n    if (def.tag !== \"variant\") throw new Error(whitelistPrefix + \" not an enum\")\n\n    const prefixNotIncluded = whitelist.every(\n      (e) => !e.startsWith(`${whitelistPrefix}.${palletName}`),\n    )\n\n    const value = prefixNotIncluded\n      ? []\n      : def.value.filter(({ name }) =>\n          whitelist.includes(`${whitelistPrefix}.${palletName}.${name}`),\n        )\n\n    const idx = metadata.lookup.length\n    metadata.lookup.push({\n      ...metadata.lookup[lookupIdx],\n      id: idx,\n      def: {\n        tag: \"variant\",\n        value,\n      },\n    })\n    return idx\n  }\n  const getEnumLength = (lookupIdx: number | undefined) => {\n    if (!lookupIdx) return 0\n    const def = metadata.lookup[lookupIdx].def\n    if (def.tag !== \"variant\") throw new Error(\"not an enum\")\n    return def.value.length\n  }\n\n  const filterList = <T extends { name: string }>(\n    whitelistPrefix: string,\n    palletName: string,\n    list: Array<T>,\n  ) => {\n    if (\n      whitelist.includes(`${whitelistPrefix}.*`) ||\n      whitelist.includes(`${whitelistPrefix}.${palletName}.*`)\n    )\n      return list\n\n    const prefixNotIncluded = whitelist.every(\n      (e) => !e.startsWith(`${whitelistPrefix}.${palletName}`),\n    )\n    if (prefixNotIncluded) return []\n\n    return list.filter(({ name }) =>\n      whitelist.includes(`${whitelistPrefix}.${palletName}.${name}`),\n    )\n  }\n\n  const pallets = metadata.pallets\n    .map((pallet) => {\n      if (fullPallets.includes(pallet.name)) return pallet\n\n      return {\n        ...pallet,\n        calls: filterEnum(\"tx\", pallet.name, pallet.calls),\n        constants: filterList(\"const\", pallet.name, pallet.constants),\n        errors: filterEnum(\"error\", pallet.name, pallet.errors),\n        events: filterEnum(\"event\", pallet.name, pallet.events),\n        storage: pallet.storage\n          ? {\n              ...pallet.storage,\n              items: filterList(\"query\", pallet.name, pallet.storage.items),\n            }\n          : undefined,\n      }\n    })\n    .filter(\n      (pallet) =>\n        getEnumLength(pallet.calls) +\n        pallet.constants.length +\n        getEnumLength(pallet.errors) +\n        getEnumLength(pallet.events) +\n        (pallet.storage?.items.length ?? 0),\n    )\n\n  return {\n    ...metadata,\n    apis,\n    pallets,\n  }\n}\n"],"mappings":"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CF,MAAO,CAAC,uBAAuB,EAC/B,KAAM,+IACR,EACA,gBAAiB,CACf,KAAM,kBACN,OACE,+MACF,MAAO,CAAC,+BAA+B,EACvC,KAAM,2CACR,EACA,cAAe,CACb,KAAM,qBACN,OACE,+MACF,MAAO,CAAC,+BAA+B,EACvC,KAAM,6BACR,EACA,gBAAiB,CACf,KAAM,gBACN,OACE,+MACF,MAAO,CAAC,gDAAgD,EACxD,KAAM,sBACR,EACA,cAAe,CACb,KAAM,0BACN,OACE,+MACF,MAAO,CAAC,yCAAyC,EACjD,KAAM,0BACR,EACA,gBAAiB,CACf,KAAM,eACN,OACE,+MACF,MAAO,CAAC,6BAA6B,EACrC,KAAM,kBACR,EACA,cAAe,CACb,KAAM,qBACN,OACE,uMACF,MAAO,CAAC,+BAA+B,EACvC,KAAM,mCACR,EACA,gBAAiB,CACf,KAAM,mBACN,OACE,+MACF,MAAO,CAAC,qBAAqB,EAC7B,KAAM,qpBACR,EACA,cAAe,CACb,KAAM,iBACN,OACE,uMACF,MAAO,CAAC,6BAA8B,oCAAoC,EAC1E,KAAM,4CACR,EACA,gBAAiB,CACf,KAAM,gBACN,OACE,uMACF,MAAO,CAAC,2BAA4B,kCAAkC,EACtE,KAAM,6IACR,EACA,gBAAiB,CACf,KAAM,yBACN,OACE,uMACF,MAAO,CAAC,4BAA6B,mCAAmC,EACxE,KAAM,0HACR,EACA,cAAe,CACb,KAAM,sBACN,OACE,+MACF,MAAO,CAAC,wBAAwB,EAChC,KAAM,4GACR,EACA,cAAe,CACb,KAAM,wBACN,OACE,+MACF,MAAO,CAAC,2BAA4B,iBAAiB,EACrD,KAAM,uEACR,EACA,cAAe,CACb,KAAM,mBACN,OACE,uMACF,MAAO,CAAC,4BAA4B,EACpC,KAAM,iwBACR,EACA,cAAe,CACb,KAAM,6BACN,OACE,+MACF,MAAO,CACL,gCACA,kCACF,EACA,KAAM,6BACR,EACA,gBAAiB,CACf,KAAM,+BACN,OACE,+MACF,MAAO,CACL,kCACA,oCACF,EACA,KAAM,0DACR,EACA,cAAe,CACb,KAAM,gBACN,OACE,uMACF,MAAO,CAAC,yBAAyB,EACjC,KAAM,2EACR,EACA,gBAAiB,CACf,KAAM,sBACN,OACE,+MACF,MAAO,CAAC,uBAAuB,EAC/B,KAAM,sCACR,EACA,gBAAiB,CACf,KAAM,kBACN,OACE,+MACF,MAAO,CAAC,mBAAmB,EAC3B,KAAM,gDACR,EACA,cAAe,CACb,KAAM,wBACN,OACE,uMACF,MAAO,CAAC,kCAAkC,EAC1C,KAAM,sBACR,EACA,cAAe,CACb,KAAM,sBACN,OACE,uMACF,MAAO,CAAC,gCAAgC,EACxC,KAAM,4CACR,EACA,cAAe,CACb,KAAM,iCACN,OACE,+MACF,MAAO,CACL,oCACA,oCACA,sCACF,EACA,KAAM,6BACR,EACA,gBAAiB,CACf,KAAM,mBACN,OACE,+MACF,MAAO,CAAC,oBAAoB,EAC5B,KAAM,0BACR,EACA,gBAAiB,CACf,KAAM,qBACN,OACE,uMACF,MAAO,CAAC,qBAAqB,EAC7B,KAAM,kBACR,EACA,cAAe,CACb,KAAM,yBACN,OACE,+MACF,MAAO,CAAC,2BAA2B,EACnC,KAAM,0BACR,EACA,cAAe,CACb,KAAM,8BACN,OACE,+MACF,MAAO,CAAC,gCAAgC,EACxC,KAAM,4CACR,EACA,gBAAiB,CACf,KAAM,gBACN,OACE,+MACF,MAAO,CAAC,0BAA0B,EAClC,KAAM,4HACR,EACA,gBAAiB,CACf,KAAM,iBACN,OACE,+MACF,MAAO,CAAC,kBAAkB,EAC1B,KAAM,oCACR,EACA,gBAAiB,CACf,KAAM,cACN,OACE,+MACF,MAAO,CAAC,eAAe,EACvB,KAAM,0GACR,EACA,gBAAiB,CACf,KAAM,6BACN,OACE,+MACF,MAAO,CAAC,+BAA+B,EACvC,KAAM,6BACR,EACA,gBAAiB,CACf,KAAM,+BACN,OACE,+MACF,MAAO,CAAC,iCAAiC,EACzC,KAAM,gEACR,EACA,gBAAiB,CACf,KAAM,yBACN,OACE,uMACF,MAAO,CAAC,2BAA2B,EACnC,KAAM,0BACR,EACA,cAAe,CACb,KAAM,uBACN,OACE,uMACF,MAAO,CAAC,uBAAuB,EAC/B,KAAM,kBACR,EACA,gBAAiB,CACf,KAAM,sBACN,OACE,+MACF,MAAO,CAAC,mDAAmD,EAC3D,KAAM,0DACR,EACA,cAAe,CACb,KAAM,eACN,OACE,+MACF,MAAO,CAAC,6BAA6B,EACrC,KAAM,2GACR,EACA,gBAAiB,CACf,KAAM,gBACN,OACE,+MACF,MAAO,CAAC,8BAA8B,EACtC,KAAM,0EACR,EACA,gBAAiB,CACf,KAAM,gBACN,OACE,+EACF,MAAO,CAAC,8BAA8B,EACtC,KAAM,iCACR,EACA,gBAAiB,CACf,KAAM,iBACN,OACE,uEACF,MAAO,CAAC,gCAAgC,EACxC,KAAM,4DACR,EACA,cAAe,CACb,KAAM,0BACN,OACE,uEACF,MAAO,CAAC,uDAAuD,EAC/D,KAAM,cACR,EACA,cAAe,CACb,KAAM,UACN,OACE,+EACF,MAAO,CAAC,0BAA2B,+BAA+B,EAClE,KAAM,cACR,EACA,cAAe,CACb,KAAM,mBACN,OACE,+EACF,MAAO,CAAC,wCAAwC,EAChD,KAAM,8BACR,EACA,gBAAiB,CACf,KAAM,eACN,OACE,+MACF,MAAO,CAAC,sCAAsC,EAC9C,KAAM,4CACR,EACA,gBAAiB,CACf,KAAM,8BACN,OACE,uMACF,MAAO,CAAC,2CAA2C,EACnD,KAAM,0BACR,EACA,aAAc,CACZ,KAAM,kBACN,OACE,uMACF,MAAO,CAAC,kBAAkB,EAC1B,KAAM,kBACR,EACA,aAAc,CACZ,KAAM,mBACN,OACE,+MACF,MAAO,CAAC,oBAAoB,EAC5B,KAAM,ydACR,EACA,gBAAiB,CACf,KAAM,gBACN,OACE,+MACF,MAAO,CAAC,iBAAiB,EACzB,KAAM,8CACR,EACA,cAAe,CACb,KAAM,mBACN,OACE,+MACF,MAAO,CAAC,qBAAqB,EAC7B,KAAM,2cACR,EACA,cAAe,CACb,KAAM,wBACN,OACE,+MACF,MAAO,CAAC,oCAAoC,EAC5C,KAAM,sBACR,EACA,eAAgB,CACd,KAAM,gCACN,OACE,+MACF,MAAO,CAAC,kCAAkC,EAC1C,KAAM,kBACR,EACA,cAAe,CACb,KAAM,mBACN,OACE,+MACF,MAAO,CAAC,oBAAoB,EAC5B,KAAM,0BACR,EACA,gBAAiB,CACf,KAAM,mBACN,OACE,uMACF,MAAO,CAAC,oBAAoB,EAC5B,KAAM,iwBACR,EACA,gBAAiB,CACf,KAAM,gBACN,OACE,uMACF,MAAO,CAAC,iBAAiB,EACzB,KAAM,2EACR,EACA,aAAc,CACZ,KAAM,kCACN,OACE,uMACF,MAAO,CAAC,oCAAoC,EAC5C,KAAM,sBACR,EACA,gBAAiB,CACf,KAAM,gCACN,OACE,uMACF,MAAO,CAAC,kCAAkC,EAC1C,KAAM,4CACR,EACA,cAAe,CACb,KAAM,oBACN,OACE,+MACF,MAAO,CAAC,kCAAkC,EAC1C,KAAM,0BACR,EACA,gBAAiB,CACf,KAAM,kBACN,OACE,uMACF,MAAO,CAAC,0BAA0B,EAClC,KAAM,qBACR,EACA,cAAe,CACb,KAAM,6BACN,OACE,+EACF,MAAO,CAAC,4CAA4C,EACpD,KAAM,iBACR,EACA,gBAAiB,CACf,KAAM,gBACN,OACE,uEACF,MAAO,CAAC,8BAA8B,EACtC,KAAM,kLACR,EACA,cAAe,CACb,KAAM,QACN,OACE,+MACF,MAAO,CAAC,oBAAoB,EAC5B,KAAM,oDACR,EACA,cAAe,CACb,KAAM,iBACN,OACE,+MACF,MAAO,CACL,wCACA,uCACF,EACA,KAAM,sBACR,EACA,gBAAiB,CACf,KAAM,qBACN,OACE,+MACF,MAAO,CACL,4CACA,2CACF,EACA,KAAM,eACR,EACA,cAAe,CACb,KAAM,uBACN,OACE,+MACF,MAAO,CAAC,+BAA+B,EACvC,KAAM,sBACR,EACA,gBAAiB,CACf,KAAM,kCACN,OAAQ,qDACR,MAAO,CACL,iDACA,oCACA,+CACF,EACA,KAAM,gBACR,EACA,aAAc,CACZ,KAAM,2BACN,OACE,+EACF,MAAO,CAAC,mCAAmC,EAC3C,KAAM,gBACR,EACA,cAAe,CACb,KAAM,6BACN,OACE,+MACF,MAAO,CAAC,qCAAqC,EAC7C,KAAM,qBACR,EACA,gBAAiB,CACf,KAAM,uBACN,OACE,uMACF,MAAO,CAAC,+BAA+B,EACvC,KAAM,uCACR,EACA,gBAAiB,CACf,KAA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","names":["src_exports","__export","defaultDeclarations","generateDescriptors","generateMultipleDescriptors","getNewTypes","getTypesBuilder","knownTypesRepository","primitiveTypes","__toCommonJS","import_metadata_builders","withCache","fn","onEnterCircular","onExitCircular","input","cache","stack","rest","id","res","result","import_utils","primitiveTypes","defaultDeclarations","typesImport","varName","clientImport","_buildSyntax","input","cache","stack","declarations","getChecksum","knownTypes","addImport","entry","getName","checksum","originalName","name","i","anonymize","buildNextSyntax","nextInput","buildSyntax","buildVector","id","inner","variable","innerType","buildArray","length","buildTuple","value","innerTypes","v","buildStruct","deps","key","val","ok","ko","isKnown","dependencies","innerChecksum","obj","idx","withCache","_getter","x","getTypesBuilder","metadata","typeFileImports","clientFileImports","importType","lookupData","getLookupEntryDef","checksumBuilder","buildDefinition","buildTypeDefinition","tmp","buildStorage","pallet","storageEntry","s","buildRuntimeCall","api","method","type","buildVariant","lookupEntry","innerLookup","result","buildConstant","constantName","import_metadata_builders","getNewTypes","metadata","knownTypes","getTypeName","checksumBuilder","declarations","defaultDeclarations","typesBuilder","getTypesBuilder","lookup","ignoredIds","entry","inner","wannabes","nameToChecksum","x","result","variable","typeName","finalTypeName","i","id","name","checksum","path","import_metadata_builders","import_utils","isDocs","x","keys","customStringifyObject","input","key","value","doc","generateDescriptors","metadata","checksums","typesBuilder","checksumBuilder","prefix","paths","buildEnumObj","val","cb","lookup","storage","pallet","name","modifier","docs","checksum","type","constants","calls","events","errors","runtimeCalls","api","method","args","mapDescriptor","descriptor","mapFn","v","extractValue","iStorage","iCalls","iEvents","iErrors","iConstants","descriptorValues","mapObjStr","_","iRuntimeCalls","clientImports","assetPayment","_assetId","assetTxPayment","optionalAssetId","asset","import_metadata_builders","generateTypes","declarations","paths","imports","baseTypes","name","type","import_metadata_builders","getUsedChecksums","metadata","builder","buildEnum","val","cb","lookup","x","checksums","pallet","name","api","method","import_utils","knownTypesRepository","knownTypes","entry","known_types_default","applyWhitelist","metadata","whitelist","allApis","fullApiRegex","fullApiIncluded","w","v","apis","api","method","fullPalletRegex","fullPallets","filterEnum","whitelistPrefix","palletName","lookupIdx","def","value","e","name","idx","getEnumLength","filterList","list","pallets","pallet","import_utils","generateMultipleDescriptors","chains","paths","options","chainData","chain","metadata","applyWhitelist","builder","getUsedChecksums","known_types_default","resolveConflicts","checksums","declarations","defaultDeclarations","chainFiles","generateDescriptors","getTypesBuilder","capitalize","generateDescriptorValuesContent","file","i","generateTypes","getPublicTypes","variables","variable","usedNames","checksum","name","conflictedChecksums","chainToChecksums","v","chainChecksums","value","descriptorValues","usages","countUsages","obj","key","tokens","tokenToIdx","minifyKeys","newValue","minified","getTreeKey","tree","a","b","commonTrees","values","treeUsages","keys","keyToCommonTree","objKey","type","d"]}