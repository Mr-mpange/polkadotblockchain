"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/from-worker.ts
var from_worker_exports = {};
__export(from_worker_exports, {
  startFromWorker: () => startFromWorker
});
module.exports = __toCommonJS(from_worker_exports);
var import_no_auto_bytecode = require("smoldot/no-auto-bytecode");
var startFromWorker = (worker, options = {}) => {
  const bytecode = new Promise((resolve) => {
    worker.onmessage = (event) => resolve(event.data);
  });
  const { port1, port2 } = new MessageChannel();
  worker.postMessage(port1, [port1]);
  return (0, import_no_auto_bytecode.startWithBytecode)({
    bytecode,
    portToWorker: port2,
    ...options
  });
};
//# sourceMappingURL=from-worker.js.map