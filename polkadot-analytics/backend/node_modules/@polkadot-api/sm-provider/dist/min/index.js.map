{"version":3,"sources":["../../src/index.ts","../../src/sm-provider.ts"],"sourcesContent":["export * from \"./sm-provider\"\n","import type { Chain } from \"smoldot\"\nimport type { JsonRpcProvider } from \"@polkadot-api/json-rpc-provider\"\nimport { getSyncProvider } from \"@polkadot-api/json-rpc-provider-proxy\"\n\nlet pending: Promise<Chain> | null\n\nexport const getSmProvider = (chain: Chain | Promise<Chain>): JsonRpcProvider =>\n  getSyncProvider(async () => {\n    while (pending) await pending\n\n    let resolvedChain: Chain\n    if (chain instanceof Promise) {\n      pending = chain\n      resolvedChain = await chain\n      pending = null\n    } else resolvedChain = chain\n\n    return (listener, onError) => {\n      let listening = true\n      ;(async () => {\n        do {\n          let message = \"\"\n          try {\n            message = await resolvedChain.nextJsonRpcResponse()\n          } catch (e) {\n            if (listening) onError()\n            return\n          }\n          if (!listening) break\n          listener(message)\n        } while (listening)\n      })()\n\n      return {\n        send(msg: string) {\n          resolvedChain.sendJsonRpc(msg)\n        },\n        disconnect() {\n          listening = false\n          resolvedChain.remove()\n        },\n      }\n    }\n  })\n"],"mappings":"yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,mBAAAE,IAAA,eAAAC,EAAAH,GCEA,IAAAI,EAAgC,iDAE5BC,EAESC,EAAiBC,MAC5B,mBAAgB,SAAY,CAC1B,KAAOF,GAAS,MAAMA,EAEtB,IAAIG,EACJ,OAAID,aAAiB,SACnBF,EAAUE,EACVC,EAAgB,MAAMD,EACtBF,EAAU,MACLG,EAAgBD,EAEhB,CAACE,EAAUC,IAAY,CAC5B,IAAIC,EAAY,GACf,OAAC,SAAY,CACZ,EAAG,CACD,IAAIC,EAAU,GACd,GAAI,CACFA,EAAU,MAAMJ,EAAc,oBAAoB,CACpD,MAAY,CACNG,GAAWD,EAAQ,EACvB,MACF,CACA,GAAI,CAACC,EAAW,MAChBF,EAASG,CAAO,CAClB,OAASD,EACX,GAAG,EAEI,CACL,KAAKE,EAAa,CAChBL,EAAc,YAAYK,CAAG,CAC/B,EACA,YAAa,CACXF,EAAY,GACZH,EAAc,OAAO,CACvB,CACF,CACF,CACF,CAAC","names":["src_exports","__export","getSmProvider","__toCommonJS","import_json_rpc_provider_proxy","pending","getSmProvider","chain","resolvedChain","listener","onError","listening","message","msg"]}