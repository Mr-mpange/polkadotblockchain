{"version":3,"sources":["../../src/ws-provider.ts","../../src/web.ts"],"sourcesContent":["import type { JsonRpcProvider } from \"@polkadot-api/json-rpc-provider\"\nimport { getSyncProvider } from \"@polkadot-api/json-rpc-provider-proxy\"\n\nexport const getWebSocketProvider =\n  (WebsocketClass: typeof WebSocket) =>\n  (uri: string, protocols?: string | string[]): JsonRpcProvider =>\n    getSyncProvider(async () => {\n      const socket = new WebsocketClass(uri, protocols)\n\n      await new Promise<void>((resolve, reject) => {\n        const onOpen = () => {\n          resolve()\n          socket.removeEventListener(\"error\", onError)\n        }\n        socket.addEventListener(\"open\", onOpen, { once: true })\n\n        const onError = (e: Event) => {\n          console.error(\n            `Unable to connect to ${uri}${\n              protocols ? \", protocols: \" + protocols : \"\"\n            }`,\n          )\n          reject(e)\n          socket.removeEventListener(\"open\", onOpen)\n        }\n        socket.addEventListener(\"error\", onError, { once: true })\n      })\n\n      return (onMessage, onHalt) => {\n        const _onMessage = (e: MessageEvent) => {\n          if (typeof e.data === \"string\") onMessage(e.data)\n        }\n\n        socket.addEventListener(\"message\", _onMessage)\n        socket.addEventListener(\"error\", onHalt)\n        socket.addEventListener(\"close\", onHalt)\n\n        return {\n          send: (msg) => {\n            socket.send(msg)\n          },\n          disconnect: () => {\n            socket.removeEventListener(\"message\", _onMessage)\n            socket.removeEventListener(\"error\", onHalt)\n            socket.removeEventListener(\"close\", onHalt)\n            socket.close()\n          },\n        }\n      }\n    })\n","import { getWebSocketProvider } from \"./ws-provider\"\n\nexport type { JsonRpcProvider } from \"@polkadot-api/json-rpc-provider\"\nexport const WebSocketProvider = getWebSocketProvider(WebSocket)\n"],"mappings":";AACA,SAAS,uBAAuB;AAEzB,IAAM,uBACX,CAAC,mBACD,CAAC,KAAa,cACZ,gBAAgB,YAAY;AAC1B,QAAM,SAAS,IAAI,eAAe,KAAK,SAAS;AAEhD,QAAM,IAAI,QAAc,CAAC,SAAS,WAAW;AAC3C,UAAM,SAAS,MAAM;AACnB,cAAQ;AACR,aAAO,oBAAoB,SAAS,OAAO;AAAA,IAC7C;AACA,WAAO,iBAAiB,QAAQ,QAAQ,EAAE,MAAM,KAAK,CAAC;AAEtD,UAAM,UAAU,CAAC,MAAa;AAC5B,cAAQ;AAAA,QACN,wBAAwB,GAAG,GACzB,YAAY,kBAAkB,YAAY,EAC5C;AAAA,MACF;AACA,aAAO,CAAC;AACR,aAAO,oBAAoB,QAAQ,MAAM;AAAA,IAC3C;AACA,WAAO,iBAAiB,SAAS,SAAS,EAAE,MAAM,KAAK,CAAC;AAAA,EAC1D,CAAC;AAED,SAAO,CAAC,WAAW,WAAW;AAC5B,UAAM,aAAa,CAAC,MAAoB;AACtC,UAAI,OAAO,EAAE,SAAS;AAAU,kBAAU,EAAE,IAAI;AAAA,IAClD;AAEA,WAAO,iBAAiB,WAAW,UAAU;AAC7C,WAAO,iBAAiB,SAAS,MAAM;AACvC,WAAO,iBAAiB,SAAS,MAAM;AAEvC,WAAO;AAAA,MACL,MAAM,CAAC,QAAQ;AACb,eAAO,KAAK,GAAG;AAAA,MACjB;AAAA,MACA,YAAY,MAAM;AAChB,eAAO,oBAAoB,WAAW,UAAU;AAChD,eAAO,oBAAoB,SAAS,MAAM;AAC1C,eAAO,oBAAoB,SAAS,MAAM;AAC1C,eAAO,MAAM;AAAA,MACf;AAAA,IACF;AAAA,EACF;AACF,CAAC;;;AC9CE,IAAM,oBAAoB,qBAAqB,SAAS;","names":[]}