"use strict";var d=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var L=(o,r)=>{for(var n in r)d(o,n,{get:r[n],enumerable:!0})},k=(o,r,n,e)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of E(r))!g.call(o,t)&&t!==n&&d(o,t,{get:()=>r[t],enumerable:!(e=m(r,t))||e.enumerable});return o};var P=o=>k(d({},"__esModule",{value:!0}),o);var b={};L(b,{WebSocketProvider:()=>f});module.exports=P(b);var v=require("@polkadot-api/json-rpc-provider-proxy"),p=o=>(r,n)=>(0,v.getSyncProvider)(async()=>{let e=new o(r,n);return await new Promise((t,i)=>{let c=()=>{t(),e.removeEventListener("error",s)};e.addEventListener("open",c,{once:!0});let s=a=>{console.error(`Unable to connect to ${r}${n?", protocols: "+n:""}`),i(a),e.removeEventListener("open",c)};e.addEventListener("error",s,{once:!0})}),(t,i)=>{let c=s=>{typeof s.data=="string"&&t(s.data)};return e.addEventListener("message",c),e.addEventListener("error",i),e.addEventListener("close",i),{send:s=>{e.send(s)},disconnect:()=>{e.removeEventListener("message",c),e.removeEventListener("error",i),e.removeEventListener("close",i),e.close()}}}});var f=p(WebSocket);
//# sourceMappingURL=web.js.map