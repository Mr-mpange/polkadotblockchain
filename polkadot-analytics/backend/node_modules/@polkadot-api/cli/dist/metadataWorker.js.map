{"version":3,"sources":["../src/metadataWorker.ts"],"sourcesContent":["import { parentPort } from \"node:worker_threads\"\nimport { start } from \"@polkadot-api/smoldot\"\nimport { getSmProvider } from \"@polkadot-api/sm-provider\"\nimport { JsonRpcProvider } from \"@polkadot-api/json-rpc-provider\"\nimport { getObservableClient } from \"@polkadot-api/observable-client\"\nimport { createClient } from \"@polkadot-api/substrate-client\"\nimport { firstValueFrom, filter } from \"rxjs\"\n\nexport type WorkerRequestMessage = {\n  id: number\n  potentialRelayChainSpecs: string[]\n  chainSpec: string\n}\nexport type WorkerResponseMessage = {\n  id: number\n  metadata: MetadataWithRaw\n}\n\nconst smoldot = start()\nparentPort!.on(\"message\", async (data: WorkerRequestMessage | \"ready\") => {\n  if (data === \"ready\") {\n    parentPort!.postMessage(\"ready\")\n    return\n  }\n\n  const potentialRelayChains = await Promise.all(\n    data.potentialRelayChainSpecs.map((chainSpec) =>\n      smoldot.addChain({ chainSpec }),\n    ),\n  )\n  const chain = await smoldot.addChain({\n    potentialRelayChains,\n    chainSpec: data.chainSpec,\n  })\n  const metadata = await getMetadataFromProvider(getSmProvider(chain))\n  const response: WorkerResponseMessage = {\n    metadata,\n    id: data.id,\n  }\n  parentPort!.postMessage(response)\n})\nparentPort!.postMessage(\"ready\")\n\nasync function getMetadataFromProvider(provider: JsonRpcProvider) {\n  const client = getObservableClient(createClient(provider))\n  const { runtime$, unfollow } = client.chainHead$()\n  const runtime = await firstValueFrom(runtime$.pipe(filter(Boolean)))\n\n  unfollow()\n  client.destroy()\n\n  return { metadata: runtime.metadata, metadataRaw: runtime.metadataRaw }\n}\nexport type MetadataWithRaw = Awaited<\n  ReturnType<typeof getMetadataFromProvider>\n>\n"],"mappings":";AAAA,SAAS,kBAAkB;AAC3B,SAAS,aAAa;AACtB,SAAS,qBAAqB;AAE9B,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB,cAAc;AAYvC,IAAM,UAAU,MAAM;AACtB,WAAY,GAAG,WAAW,OAAO,SAAyC;AACxE,MAAI,SAAS,SAAS;AACpB,eAAY,YAAY,OAAO;AAC/B;AAAA,EACF;AAEA,QAAM,uBAAuB,MAAM,QAAQ;AAAA,IACzC,KAAK,yBAAyB;AAAA,MAAI,CAAC,cACjC,QAAQ,SAAS,EAAE,UAAU,CAAC;AAAA,IAChC;AAAA,EACF;AACA,QAAM,QAAQ,MAAM,QAAQ,SAAS;AAAA,IACnC;AAAA,IACA,WAAW,KAAK;AAAA,EAClB,CAAC;AACD,QAAM,WAAW,MAAM,wBAAwB,cAAc,KAAK,CAAC;AACnE,QAAM,WAAkC;AAAA,IACtC;AAAA,IACA,IAAI,KAAK;AAAA,EACX;AACA,aAAY,YAAY,QAAQ;AAClC,CAAC;AACD,WAAY,YAAY,OAAO;AAE/B,eAAe,wBAAwB,UAA2B;AAChE,QAAM,SAAS,oBAAoB,aAAa,QAAQ,CAAC;AACzD,QAAM,EAAE,UAAU,SAAS,IAAI,OAAO,WAAW;AACjD,QAAM,UAAU,MAAM,eAAe,SAAS,KAAK,OAAO,OAAO,CAAC,CAAC;AAEnE,WAAS;AACT,SAAO,QAAQ;AAEf,SAAO,EAAE,UAAU,QAAQ,UAAU,aAAa,QAAQ,YAAY;AACxE;","names":[]}