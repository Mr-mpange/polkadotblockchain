import * as _commander_js_extra_typings from '@commander-js/extra-typings';

interface CommonOptions {
    config?: string;
}

interface AddOptions extends CommonOptions {
    file?: string;
    wsUrl?: string;
    chainSpec?: string;
    name?: string;
    wasm?: string;
    noPersist?: boolean;
}
declare function add(key: string, options: AddOptions): Promise<void>;

interface GenerateOptions extends CommonOptions {
    key?: string;
    clientLibrary?: string;
    whitelist?: string;
}
declare function generate(opts: GenerateOptions): Promise<void>;

declare function remove(key: string, options: CommonOptions): Promise<void>;

declare function update(keysInput: string | undefined, options: CommonOptions): Promise<void>;

type Commands = {
    add: typeof add;
    generate: typeof generate;
    remove: typeof remove;
    update: typeof update;
};
declare function getCli({ add, generate, remove, update }: Commands): _commander_js_extra_typings.Command<[], {}>;

export { type AddOptions, type Commands, type GenerateOptions, add, generate, getCli, remove, update };
